{
    "pipes": [
        {
            "name": "CapitalizeString",
            "id": "pipe-CapitalizeString-e1022b8747ce3a943e1213833ba971a1ad6d5491e4f496552d8774a7a40b304ec17d0bca6ef29044f8b3010a7d3fd38c861529275c40d752893f5a711d8de160",
            "file": "archive/src/app/pipes/capitalize-string.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "string",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "string",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "CapitalizeString",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'CapitalizeString' })\nexport class CapitalizeString implements PipeTransform {\n  transform(string: string): string {\n    return string.length > 0\n      ? string.charAt(0).toUpperCase() + string.substr(1).toLowerCase()\n      : '';\n  }\n}\n"
        },
        {
            "name": "DefaultNullOrEmpty",
            "id": "pipe-DefaultNullOrEmpty-09861037ff49f610c67de7b8c93c8466b39f3b04b01b04d2d059bfa8d60971448b9ee4850f90f2bf01b1b22ac4d618877ac2ad902ff49ba61954c487ac05ab09",
            "file": "src/app/pipes/DefaultNullOrEmpty.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "DefaultNullOrEmpty",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'DefaultNullOrEmpty' })\nexport class DefaultNullOrEmpty implements PipeTransform {\n  transform(value: any): any {\n    if (typeof value === 'string') {\n      return value.trim().length > 0 ? value : '-';\n    } else if (typeof value === 'boolean') {\n      return value ? 'Yes' : 'No';\n    } else {\n      return value == null ? '-' : value;\n    }\n  }\n}\n"
        },
        {
            "name": "DefaultNullOrEmpty",
            "id": "pipe-DefaultNullOrEmpty-48700282a65f82da3e2184abc38540ebb9fca76dfa5a833308d5c4579bb39c3b4473ea960ed8e52ff33651a755dbf6b822bb7aa274f73ea9690c7b97de80c363-1",
            "file": "archive/src/app/pipes/DefaultNullOrEmptyPipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "DefaultNullOrEmpty",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'DefaultNullOrEmpty' })\r\nexport class DefaultNullOrEmpty implements PipeTransform {\r\n  transform(value: any): any {\r\n    if (typeof value === 'string') {\r\n      return value.trim().length > 0 ? value : '-';\r\n    } else if (typeof value === 'boolean') {\r\n      return value ? 'Yes' : 'No';\r\n    } else {\r\n      return value == null ? '-' : value;\r\n    }\r\n  }\r\n}\r\n",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DefaultNullOrEmpty-1"
        },
        {
            "name": "DisplayByDelimiter",
            "id": "pipe-DisplayByDelimiter-fa615e333487a949b914d1faa4a6b8be3830c77bc8fcbda742ffe205999f56a7a85553519a432042ce84c77171be652f9381a5680f7152c8adb7d65fb043cda8",
            "file": "archive/src/app/pipes/display-by-delimiter.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "strings",
                            "type": "(number | string)[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "delimiter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "strings",
                            "type": "(number | string)[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "delimiter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "DisplayByDelimiter",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'DisplayByDelimiter' })\nexport class DisplayByDelimiter implements PipeTransform {\n  transform(strings: (number | string)[], delimiter: string): string {\n    const stringsToJoin = strings.length > 1 ? strings.filter((item) => item) : [''];\n    return stringsToJoin.join(delimiter);\n  }\n}\n"
        },
        {
            "name": "DisplayOptionsPipe",
            "id": "pipe-DisplayOptionsPipe-bb9dd587f071989ef30c026894810e7583a4f40bf94b5344f91e96f74983520ee637f90bca2218e428d75b977a65196a004d644da88b81cf97425eae40bb5f31",
            "file": "archive/src/app/pipes/display-options.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Converts a string to a dev friendly identifiable object</p>\n",
            "rawdescription": "\n\n\n\nConverts a string to a dev friendly identifiable object\n\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "strOptions",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedOptions",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "SelectOption[]",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "strOptions",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedOptions",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "displayOptions",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { SelectOption } from './../models/select-option';\n\n/**\n *\n * @usageNotes\n *\n * Converts a string to a dev friendly identifiable object\n *\n */\n@Pipe({\n  name: 'displayOptions'\n})\nexport class DisplayOptionsPipe implements PipeTransform {\n  transform(strOptions: string[], selectedOptions: string[] = []): SelectOption[] {\n    return strOptions.map((option, index) => {\n      return {\n        id: index,\n        name: option.trim(),\n        selected: selectedOptions.includes(option)\n      } as SelectOption;\n    });\n  }\n}\n"
        },
        {
            "name": "FilterMultipleRecordsPipe",
            "id": "pipe-FilterMultipleRecordsPipe-10244bbcc5f3217f4c332910e3d4bc45b6f1cf185cd643ba83b434f9bf118bb5fa333a6244f4ec33624ee6303c5ebaf4c70af952e58078d5ba5f1cad9ae1bb8d",
            "file": "archive/src/app/pipes/FilterMultipleRecordsPipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "getRecord",
                    "args": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TechRecord",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "multipleRecordsList",
                            "type": "VehicleTechRecordModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VehicleTechRecordModel[]",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "multipleRecordsList",
                            "type": "VehicleTechRecordModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "FilterMultipleRecords",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { VehicleTechRecordModel } from '@app/models/vehicle-tech-record.model';\n\n@Pipe({ name: 'FilterMultipleRecords' })\nexport class FilterMultipleRecordsPipe implements PipeTransform {\n  transform(multipleRecordsList: VehicleTechRecordModel[]): VehicleTechRecordModel[] {\n    const vehicleTechnicalRecords = [...multipleRecordsList];\n\n    vehicleTechnicalRecords.sort((a, b) => {\n      const recordA = this.getRecord(a);\n      const recordB = this.getRecord(b);\n\n      if (recordA.make !== recordB.make) {\n        return String(recordA.make).localeCompare(String(recordB.make));\n      } else {\n        return recordB.manufactureYear - recordA.manufactureYear;\n      }\n    });\n    return vehicleTechnicalRecords;\n  }\n\n  getRecord(vehicleTechRecord: VehicleTechRecordModel): TechRecord {\n    let record: TechRecord;\n\n    record = vehicleTechRecord.techRecord.find(\n      (tRec: TechRecord) => tRec.statusCode === 'current'\n    );\n    if (record !== undefined) {\n      return record;\n    }\n\n    record = vehicleTechRecord.techRecord.find(\n      (tRec: TechRecord) => tRec.statusCode === 'provisional'\n    );\n    if (record !== undefined) {\n      return record;\n    }\n\n    record = vehicleTechRecord.techRecord\n      .filter((tRec: TechRecord) => tRec.statusCode === 'archived')\n      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())[0];\n\n    return record;\n  }\n}\n"
        },
        {
            "name": "FilterRecordPipe",
            "id": "pipe-FilterRecordPipe-f9983a82d38612f2a7f2a172701f3b13c5fb997e89d4b2327a1d21c32f172c7e82c732325dcc8a91ec3d1fe125bbff72df4425e4f4b8b78c1a55a5ed13ccffc3",
            "file": "archive/src/app/pipes/FilterRecordPipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "techRecordList",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "techRecordList",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "FilterRecord",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({ name: 'FilterRecord' })\r\nexport class FilterRecordPipe implements PipeTransform {\r\n  transform(techRecordList: any): any {\r\n    if (techRecordList && Array.isArray(techRecordList)) {\r\n      let records = techRecordList.find((record: any) => record.statusCode === 'current');\r\n      if (records !== undefined) {\r\n        return records;\r\n      }\r\n\r\n      records = techRecordList.find((record: any) => record.statusCode === 'provisional');\r\n      if (records !== undefined) {\r\n        return records;\r\n      }\r\n\r\n      records = techRecordList.filter((record: any) => record.statusCode === 'archived');\r\n      records.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n      if (records !== undefined) {\r\n        return records[0];\r\n      }\r\n    } else {\r\n      return techRecordList;\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "name": "IsPrimaryVrmPipe",
            "id": "pipe-IsPrimaryVrmPipe-da70bddc9e30698d01dc7f88ff04cc0f435f200ae241bd3e51708e13e0431b4b8546a3ecb540c3ff226388981863477f75a146972cca85818e56fc1e12c0e966",
            "file": "archive/src/app/pipes/IsPrimaryVrmPipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "vrmsList",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isPrimary",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vrmsList",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isPrimary",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "IsPrimaryVrm",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({ name: 'IsPrimaryVrm' })\nexport class IsPrimaryVrmPipe implements PipeTransform {\n  transform(vrmsList: any, isPrimary: boolean): any[] {\n    if (vrmsList) {\n      return vrmsList.filter((listing: any) => listing.isPrimary === isPrimary);\n    }\n  }\n}\n"
        },
        {
            "name": "OrderByStatusPipe",
            "id": "pipe-OrderByStatusPipe-eb7819dfb60935fc457c01a6cf7f29779ae560b762d46066a1983fe97b71b3f049781653c31bcdb0743eaf5146d91eb693b044102560756da7d100033221a9d3",
            "file": "archive/src/app/pipes/OrderByStatusPipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "techRecordList",
                            "type": "TechRecord[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TechRecord[]",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "techRecordList",
                            "type": "TechRecord[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "OrderByStatusPipe",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Pipe({ name: 'OrderByStatusPipe' })\nexport class OrderByStatusPipe implements PipeTransform {\n  transform(techRecordList: TechRecord[]): TechRecord[] {\n    if (techRecordList) {\n      const orderedTechRec = [];\n      let records: TechRecord = techRecordList.find(\n        (record: TechRecord) => record.statusCode === 'current'\n      );\n      if (records !== undefined) {\n        orderedTechRec.push(records);\n      }\n\n      records = techRecordList.find((record: TechRecord) => record.statusCode === 'provisional');\n      if (records !== undefined) {\n        orderedTechRec.push(records);\n      }\n\n      const archivedRecords: TechRecord[] = techRecordList.filter(\n        (record: TechRecord) => record.statusCode === 'archived'\n      );\n      archivedRecords.sort(\n        (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      );\n      if (archivedRecords !== undefined) {\n        archivedRecords.forEach((element) => orderedTechRec.push(element));\n      }\n\n      return orderedTechRec;\n    }\n  }\n}\n"
        },
        {
            "name": "SortByDatePipe",
            "id": "pipe-SortByDatePipe-99bd999a3e7e3d857751b388ee464e1a7b3cf0431a4ea56308e54d356bed23c1e3d15466cd4d0e63b02f77de30d19c28a2bfe15bab6055a71b724bcf5355fba8",
            "file": "archive/src/app/pipes/SortByDatePipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "listToSort",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sortBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "listToSort",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sortBy",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "SortByDatePipe",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'SortByDatePipe' })\nexport class SortByDatePipe implements PipeTransform {\n  transform(listToSort: any, sortBy: string): any {\n    if (listToSort) {\n      return listToSort.sort(\n        (a, b) => new Date(b[sortBy]).getTime() - new Date(a[sortBy]).getTime()\n      );\n    }\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AdditionalInformation",
            "id": "interface-AdditionalInformation-a00c26d343cad9bc7500b8e573ece07f0f54e10c7ee51a3e65438498931bd8522dcbf5a64f72139500e09e4312b55d3c98a01130e78a60a2a4f93ba44994e05c",
            "file": "archive/src/app/models/defect.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Location {\n  axleNumber?: number;\n  horizontal?: string;\n  vertical: string;\n  longitudinal?: string;\n  rowNumber: number;\n  lateral: string;\n  seatNumber: number;\n}\n\ninterface AdditionalInformation {\n  location: Location;\n  notes: string;\n}\n\nexport interface Defect {\n  prohibitionIssued: boolean;\n  additionalInformation: AdditionalInformation;\n  itemNumber: number;\n  deficiencyRef: string;\n  stdForProhibition: boolean;\n  deficiencyId: string;\n  imNumber: number;\n  deficiencyCategory: string;\n  deficiencyText: string;\n  prs: boolean;\n  deficiencySubId?: any;\n  imDescription: string;\n  itemDescription: string;\n}\n",
            "properties": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Location",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdditionalNotes",
            "id": "interface-AdditionalNotes-dc0d6b292aa7d101f44992ecc46af51758716e868a19aaee29216dd2d96af0cade4f4b14b9c3f36952b5f080f1dce85bb4d1d24ae2d5316b5dcdfb1a254d3e75",
            "file": "src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "guidanceNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdditionalNotes",
            "id": "interface-AdditionalNotes-16bff3db8cd504eb422a89ea1714cc76b0424ccd5c31a5a650006b00e1aabfe7d4cac38081c4ec703599a741826b96bf5d3abe9eb887fb6a2d5a6d538686d4d4-1",
            "file": "src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "guidanceNotesFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "numberFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AdditionalNotes-1"
        },
        {
            "name": "AdditionalNotes",
            "id": "interface-AdditionalNotes-e903feee68bb7be1be0007cc9c57dc8a663f22fcc4b5c116a665eaa19930cb784bf2809a936e4a52d2a27507f511357e90880d692fc3151d0ce82112f51489f9-2",
            "file": "archive/src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './Tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "guidanceNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "AdditionalNotes-2"
        },
        {
            "name": "AdditionalNotes",
            "id": "interface-AdditionalNotes-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-3",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "guidanceNotesFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "numberFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "AdditionalNotes-3"
        },
        {
            "name": "AddressInformation",
            "id": "interface-AddressInformation-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "address1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "address2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "address3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "emailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "postCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "postTown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "telephoneNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 121
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AddressInformation",
            "id": "interface-AddressInformation-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "address1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "address2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "address3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "emailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "postCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "postTown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "telephoneNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 121
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AddressInformation-1"
        },
        {
            "name": "AdrDetails",
            "id": "interface-AdrDetails-dc0d6b292aa7d101f44992ecc46af51758716e868a19aaee29216dd2d96af0cade4f4b14b9c3f36952b5f080f1dce85bb4d1d24ae2d5316b5dcdfb1a254d3e75",
            "file": "src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "additionalExaminerNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "additionalNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdditionalNotes",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "adrCertificateNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "adrTypeApprovalNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicantDetails",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "batteryListNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "brakeDeclarationIssuer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "brakeDeclarationsSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "brakeEndurance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "compatibilityGroupJ",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "declarationsSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "documents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "listStatementApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "memosApply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "permittedDangerousGoods",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tank",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "vehicleDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleDetails",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdrDetails",
            "id": "interface-AdrDetails-16bff3db8cd504eb422a89ea1714cc76b0424ccd5c31a5a650006b00e1aabfe7d4cac38081c4ec703599a741826b96bf5d3abe9eb887fb6a2d5a6d538686d4d4-1",
            "file": "src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "additionalNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdditionalNotes",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "memosApplyFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "permittedDangerousGoodsFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tank",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vehicleDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleDetails",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AdrDetails-1"
        },
        {
            "name": "AdrDetails",
            "id": "interface-AdrDetails-e903feee68bb7be1be0007cc9c57dc8a663f22fcc4b5c116a665eaa19930cb784bf2809a936e4a52d2a27507f511357e90880d692fc3151d0ce82112f51489f9-2",
            "file": "archive/src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './Tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "additionalExaminerNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "additionalNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdditionalNotes",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "adrCertificateNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "adrTypeApprovalNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicantDetails",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "batteryListNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "brakeDeclarationIssuer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "brakeDeclarationsSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "brakeEndurance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "compatibilityGroupJ",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "declarationsSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "documents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "listStatementApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "memosApply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "permittedDangerousGoods",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tank",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "vehicleDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleDetails",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "AdrDetails-2"
        },
        {
            "name": "AdrDetails",
            "id": "interface-AdrDetails-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-3",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "additionalNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdditionalNotes",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "memosApplyFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "permittedDangerousGoodsFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tank",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "vehicleDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleDetails",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "AdrDetails-3"
        },
        {
            "name": "AppFormState",
            "id": "interface-AppFormState-45f5a1e3496fe691f082ba7b121abc43053af3a1449dc64c3c15b88a50a2b549e07e67dc9cf21beac3e9df38333caf2ef0edb76a07673d59b54ca222d2c767ef",
            "file": "archive/src/app/store/reducers/app-form-state.reducers.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AppFormStateActions, EAppFormStateActions } from '../actions/app-form-state.actions';\n\nexport interface AppFormState {\n  pristine: boolean;\n}\n\nexport const initialAppFormState: AppFormState = {\n  pristine: true\n};\n\nexport function AppFormStateReducer(\n  state: AppFormState = initialAppFormState,\n  action: AppFormStateActions\n): AppFormState {\n  switch (action.type) {\n    case EAppFormStateActions.SetAppFormDirty: {\n      return {\n        ...state,\n        pristine: false\n      };\n    }\n\n    case EAppFormStateActions.SetAppFormPristine: {\n      return {\n        ...state,\n        pristine: true\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n",
            "properties": [
                {
                    "name": "pristine",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Applicant",
            "id": "interface-Applicant-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation"
        },
        {
            "name": "Applicant",
            "id": "interface-Applicant-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Applicant-1"
        },
        {
            "name": "ApplicantDetails",
            "id": "interface-ApplicantDetails-dc0d6b292aa7d101f44992ecc46af51758716e868a19aaee29216dd2d96af0cade4f4b14b9c3f36952b5f080f1dce85bb4d1d24ae2d5316b5dcdfb1a254d3e75",
            "file": "src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "postcode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "town",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ApplicantDetails",
            "id": "interface-ApplicantDetails-e903feee68bb7be1be0007cc9c57dc8a663f22fcc4b5c116a665eaa19930cb784bf2809a936e4a52d2a27507f511357e90880d692fc3151d0ce82112f51489f9-1",
            "file": "archive/src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './Tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "postcode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "town",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ApplicantDetails-1"
        },
        {
            "name": "AuthIntoService",
            "id": "interface-AuthIntoService-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "cocIssueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "dateAuthorised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "datePending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "dateReceived",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dateRejected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthIntoService",
            "id": "interface-AuthIntoService-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "cocIssueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "dateAuthorised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "datePending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "dateReceived",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dateRejected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AuthIntoService-1"
        },
        {
            "name": "Axle",
            "id": "interface-Axle-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axleNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AxleBrakes",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "parkingBrakeMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "tyres",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tyres",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "weights",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Weights",
                    "optional": false,
                    "description": "",
                    "line": 109
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Axle",
            "id": "interface-Axle-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axleNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AxleBrakes",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "parkingBrakeMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "tyres",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tyres",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "weights",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Weights",
                    "optional": false,
                    "description": "",
                    "line": 109
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Axle-1"
        },
        {
            "name": "AxleBrakes",
            "id": "interface-AxleBrakes-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "brakeActuator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "leverLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "springBrakeParking",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 103
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AxleBrakes",
            "id": "interface-AxleBrakes-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "brakeActuator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "leverLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "springBrakeParking",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 103
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AxleBrakes-1"
        },
        {
            "name": "AxleSpacing",
            "id": "interface-AxleSpacing-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AxleSpacing",
            "id": "interface-AxleSpacing-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AxleSpacing-1"
        },
        {
            "name": "BodyPSV",
            "id": "interface-BodyPSV-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db",
            "file": "src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "chassisMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "chassisModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Body"
        },
        {
            "name": "BodyPSV",
            "id": "interface-BodyPSV-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db-1",
            "file": "archive/src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "chassisMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "chassisModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Body",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BodyPSV-1"
        },
        {
            "name": "BodyType",
            "id": "interface-BodyType-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db",
            "file": "src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BodyType",
            "id": "interface-BodyType-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db-1",
            "file": "archive/src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BodyType-1"
        },
        {
            "name": "BrakeForceWheelsNotLocked",
            "id": "interface-BrakeForceWheelsNotLocked-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "parkingBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "secondaryBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "serviceBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 72
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BrakeForceWheelsNotLocked",
            "id": "interface-BrakeForceWheelsNotLocked-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "parkingBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "secondaryBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "serviceBrakeForceA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 72
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BrakeForceWheelsNotLocked-1"
        },
        {
            "name": "BrakeForceWheelsUpToHalfLocked",
            "id": "interface-BrakeForceWheelsUpToHalfLocked-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "parkingBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "secondaryBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "serviceBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 78
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BrakeForceWheelsUpToHalfLocked",
            "id": "interface-BrakeForceWheelsUpToHalfLocked-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "parkingBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "secondaryBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "serviceBrakeForceB",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 78
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BrakeForceWheelsUpToHalfLocked-1"
        },
        {
            "name": "Brakes",
            "id": "interface-Brakes-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "antilockBrakingSystem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "brakeCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "brakeCodeOriginal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "brakeForceWheelsNotLocked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BrakeForceWheelsNotLocked",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "brakeForceWheelsUpToHalfLocked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BrakeForceWheelsUpToHalfLocked",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "dataTrBrakeOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "dataTrBrakeThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "dataTrBrakeTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "dtpNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "loadSensingValve",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "retarderBrakeOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "retarderBrakeTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Brakes",
            "id": "interface-Brakes-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "antilockBrakingSystem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "brakeCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "brakeCodeOriginal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "brakeForceWheelsNotLocked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BrakeForceWheelsNotLocked",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "brakeForceWheelsUpToHalfLocked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BrakeForceWheelsUpToHalfLocked",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "dataTrBrakeOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "dataTrBrakeThree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "dataTrBrakeTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "dtpNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "loadSensingValve",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "retarderBrakeOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "retarderBrakeTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Brakes-1"
        },
        {
            "name": "ComponentCanDeactivate",
            "id": "interface-ComponentCanDeactivate-c3785395990d3dbb0928a839f2f4191a1f78e56838f3b7ba6e099300c8d0664961d94d37ffb61f402dd8a62bf795bf4e323eb605aaea24d0f1795ac0ae77ea4e",
            "file": "archive/src/app/shared/pending-changes-guard/pending-changes.guard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { PendingChangesService } from '../pending-changes-service/pending-changes.service';\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  constructor(private pendingChangesService: PendingChangesService) {}\n\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    return component.canDeactivate() ? true : this.pendingChangesService.confirm();\n  }\n}\n",
            "properties": [
                {
                    "name": "canDeactivate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CustomDefect",
            "id": "interface-CustomDefect-323f57207de56d6c61305723e8698a5bdcd4e46b5a459ce9b2e8e1113633736675d8f5cdef440d5330bb9591b0850fdf692cad4f599d0ca903144df25a0394cf",
            "file": "archive/src/app/models/test.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Defect } from '@app/models/defect';\n\nexport interface ModType {\n  code: string;\n  description: string;\n}\n\nexport interface CustomDefect {\n  referenceNumber: string;\n  defectName: string;\n  defectNotes: string;\n}\n\nexport interface TestType {\n  prohibitionIssued: boolean;\n  testCode: string;\n  testNumber: string;\n  lastUpdatedAt: string;\n  additionalCommentsForAbandon: string;\n  numberOfSeatbeltsFitted: number;\n  testTypeEndTimestamp: string;\n  reasonForAbandoning: string;\n  lastSeatbeltInstallationCheckDate: string;\n  createdAt: string;\n  testTypeId: string;\n  testTypeStartTimestamp: string;\n  certificateNumber: string;\n  testTypeName: string;\n  seatbeltInstallationCheckDate: boolean;\n  additionalNotesRecorded: string;\n  defects: Defect[];\n  name: string;\n  certificateLink: string;\n  testResult: string;\n  testExpiryDate: string;\n  testAnniversaryDate: string;\n  modType: ModType;\n  emissionStandard: string;\n  smokeTestKLimitApplied: string;\n  fuelType: string;\n  modificationTypeUsed: string;\n  particulateTrapFitted: string;\n  particulateTrapSerialNumber: string;\n  secondaryCertificateNumber: string;\n  customDefects: CustomDefect[];\n}\n",
            "properties": [
                {
                    "name": "defectName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "defectNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "referenceNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DDA",
            "id": "interface-DDA-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "certificateIssued",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "ddaNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "ddaSchedules",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "minEmergencyExits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "outswing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "seatbeltsFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "wheelchairCapacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "wheelchairFittings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "wheelchairLiftInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "wheelchairLiftPresent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "wheelchairRampInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "wheelchairRampPresent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DDA",
            "id": "interface-DDA-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "certificateIssued",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "ddaNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "ddaSchedules",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "minEmergencyExits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "outswing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "seatbeltsFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "wheelchairCapacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "wheelchairFittings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "wheelchairLiftInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "wheelchairLiftPresent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "wheelchairRampInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "wheelchairRampPresent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DDA-1"
        },
        {
            "name": "Defect",
            "id": "interface-Defect-a00c26d343cad9bc7500b8e573ece07f0f54e10c7ee51a3e65438498931bd8522dcbf5a64f72139500e09e4312b55d3c98a01130e78a60a2a4f93ba44994e05c",
            "file": "archive/src/app/models/defect.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Location {\n  axleNumber?: number;\n  horizontal?: string;\n  vertical: string;\n  longitudinal?: string;\n  rowNumber: number;\n  lateral: string;\n  seatNumber: number;\n}\n\ninterface AdditionalInformation {\n  location: Location;\n  notes: string;\n}\n\nexport interface Defect {\n  prohibitionIssued: boolean;\n  additionalInformation: AdditionalInformation;\n  itemNumber: number;\n  deficiencyRef: string;\n  stdForProhibition: boolean;\n  deficiencyId: string;\n  imNumber: number;\n  deficiencyCategory: string;\n  deficiencyText: string;\n  prs: boolean;\n  deficiencySubId?: any;\n  imDescription: string;\n  itemDescription: string;\n}\n",
            "properties": [
                {
                    "name": "additionalInformation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdditionalInformation",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "deficiencyCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "deficiencyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "deficiencyRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "deficiencySubId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "deficiencyText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "imDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "imNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "itemDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "itemNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "prohibitionIssued",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "prs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "stdForProhibition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-c079c2b908ff8ccd38cf06ac305fd207b1f00f5d01b26aaa742cb9e9f72f83c2e0b1021044d9aa3f3a23a41fafb7c0048f08e58fb2b6a46e52a27cd55e1dc709",
            "file": "archive/src/app/models/dialog-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DialogData {\n  response: string;\n  context: string;\n  actionName: string;\n}\n",
            "properties": [
                {
                    "name": "actionName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "response",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-93b1eed718b84309952ba24cce3c7d055766aeb8bdcb6b3a88eb1a3349e48bda93bf7ed7bdeb8b0b10ee8030c11de87af4ad23625611179d7a29c5b5e5c33f0f-1",
            "file": "archive/src/app/shared/adr-reason-modal/adr-reason-modal.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  response: string;\r\n  context: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'vtm-adr-reason-modal',\r\n  templateUrl: './adr-reason-modal.component.html',\r\n  styleUrls: ['./adr-reason-modal.component.scss']\r\n})\r\nexport class AdrReasonModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AdrReasonModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  save(modalData: string): void {\r\n    this.dialogRef.close({ isSave: true, data: modalData });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "response",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DialogData-1"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-d73c4cbb164c48e53576b8def292213c35c9b6e2696ab44b0eca048f6123b30be2e307d830c43c6ba4d65fd7d67d52bd7d51d696fa64ee952b5cc6d8de38e2ed-2",
            "file": "archive/src/app/shared/dialog-box-confirmation/dialog-box-confirmation.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DialogBoxComponent } from '@app/shared/dialog-box/dialog-box.component';\n\nexport interface DialogData {\n  context: string;\n  actionName: string;\n}\n\n@Component({\n  selector: 'vtm-dialog-box-confirmation',\n  templateUrl: './dialog-box-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogBoxConfirmationComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  save(): void {\n    this.dialogRef.close(true);\n  }\n}\n",
            "properties": [
                {
                    "name": "actionName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "DialogData-2"
        },
        {
            "name": "DialogData",
            "id": "interface-DialogData-f392a02fe1535828bce085457d16245bfb9b94600b35b002e3de49072d5b8e41600901c5c4c43ce6015fffdc7a91c4440c60c7b2b914543605a65072b60ce2c8-3",
            "file": "archive/src/app/shared/dialog-ministry-plates/dialog-ministry-plates.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Applicant } from '@app/models/tech-record.model';\n\nexport interface DialogData {\n  applicantDetails: Applicant;\n}\n\n@Component({\n  selector: 'vtm-dialog-ministry-plates',\n  templateUrl: './dialog-ministry-plates.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogMinistryPlatesComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogMinistryPlatesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  save(plateComponent): void {\n    const plate = plateComponent.platesForm.getRawValue();\n    this.dialogRef.close(plate);\n  }\n}\n",
            "properties": [
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Applicant",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "DialogData-3"
        },
        {
            "name": "Dimensions",
            "id": "interface-Dimensions-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axleSpacing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AxleSpacing[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Dimensions",
            "id": "interface-Dimensions-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "axleSpacing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AxleSpacing[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Dimensions-1"
        },
        {
            "name": "DocumentInfo",
            "id": "interface-DocumentInfo-13fa3047fa10d37ffd78839f840e2c95b709b95719044d70be0032c2c8b69040615e29d327ac08067f2bfff092f09d04e6258a1c03fe125a4533bc7733ab9b27",
            "file": "archive/src/app/models/document-meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocumentMetaData {\n  uuid: string;\n  fileName: string;\n  metaName: string;\n}\n\nexport interface DocumentInfo {\n  metaName: string;\n  file?: File;\n}\n",
            "properties": [
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "metaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DocumentMetaData",
            "id": "interface-DocumentMetaData-13fa3047fa10d37ffd78839f840e2c95b709b95719044d70be0032c2c8b69040615e29d327ac08067f2bfff092f09d04e6258a1c03fe125a4533bc7733ab9b27",
            "file": "archive/src/app/models/document-meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocumentMetaData {\n  uuid: string;\n  fileName: string;\n  metaName: string;\n}\n\nexport interface DocumentInfo {\n  metaName: string;\n  file?: File;\n}\n",
            "properties": [
                {
                    "name": "fileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "metaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DocumentMetaData",
            "id": "interface-DocumentMetaData-38600ed52509c8138e531d047e9fe23df03d2ce21bbf16a8bbd9abc4a7ab714874a057c77394d17e153e35822039aad4d1da6143bb544cf00c2da0e5fe7f4e51-1",
            "file": "archive/src/app/technical-record/adr/tank-documents/document-meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocumentMetaData {\n  uuid: string;\n  fileName: string;\n}\n",
            "properties": [
                {
                    "name": "fileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DocumentMetaData-1"
        },
        {
            "name": "ErrorState",
            "id": "interface-ErrorState-b365867d3841f478730f9ff69477097dc076a8d05a507e06f7bbf286ea133909ea4d22118a3020df818ae2d57311d3f3babbb9a21c6c173d290a08c58262fe88",
            "file": "archive/src/app/store/reducers/error.reducers.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ErrorActions, EErrorActions } from '../actions/Error.actions';\n\nexport interface ErrorState {\n  errors: string[];\n}\n\nexport const initialErrorState: ErrorState = {\n  errors: []\n};\n\nexport function ErrorReducer(\n  state: ErrorState = initialErrorState,\n  action: ErrorActions\n): ErrorState {\n  switch (action.type) {\n    case EErrorActions.SetErrorMessage: {\n      return {\n        ...state,\n        errors: [...action.payload]\n      };\n    }\n\n    case EErrorActions.ClearErrorMessage: {\n      return {\n        ...state,\n        errors: []\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FieldState",
            "id": "interface-FieldState-412fb7c0b83f3a27acc63cd7d12fa2fba48fd3332a5db717dee9e290502afa27df5c66c0d15ca9c2da86e767d8cd675b4d0bc846ea2704195f5e38ba1d87d064",
            "file": "archive/src/app/utils/form.utils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormArray, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport interface FieldState {\n  value: string | boolean | number | FormControl[];\n  validators?: ValidatorFn[];\n}\n\nexport interface FormControlsState {\n  name: string;\n  fieldState: FieldState;\n}\nexport const FORM_UTILS = {\n  addControlsToFormGroup\n};\n\nfunction addControlsToFormGroup(formGroup: FormGroup, listOfFields: FormControlsState[]) {\n  return listOfFields.map((field) => {\n    formGroup.addControl(\n      field.name,\n      Array.isArray(field.fieldState.value)\n        ? new FormArray(field.fieldState.value, field.fieldState.validators)\n        : new FormControl(field.fieldState.value, field.fieldState.validators)\n    );\n  });\n}\n",
            "properties": [
                {
                    "name": "validators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | boolean | number | FormControl[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FormControlsState",
            "id": "interface-FormControlsState-412fb7c0b83f3a27acc63cd7d12fa2fba48fd3332a5db717dee9e290502afa27df5c66c0d15ca9c2da86e767d8cd675b4d0bc846ea2704195f5e38ba1d87d064",
            "file": "archive/src/app/utils/form.utils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormArray, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport interface FieldState {\n  value: string | boolean | number | FormControl[];\n  validators?: ValidatorFn[];\n}\n\nexport interface FormControlsState {\n  name: string;\n  fieldState: FieldState;\n}\nexport const FORM_UTILS = {\n  addControlsToFormGroup\n};\n\nfunction addControlsToFormGroup(formGroup: FormGroup, listOfFields: FormControlsState[]) {\n  return listOfFields.map((field) => {\n    formGroup.addControl(\n      field.name,\n      Array.isArray(field.fieldState.value)\n        ? new FormArray(field.fieldState.value, field.fieldState.validators)\n        : new FormControl(field.fieldState.value, field.fieldState.validators)\n    );\n  });\n}\n",
            "properties": [
                {
                    "name": "fieldState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldState",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IAppConfig",
            "id": "interface-IAppConfig-202635d77e9938a783fdf9f2175f8f7fe8bd0ee52bfa728bd558bcb0c407dc92f272c7c1ec1c2f85dea7b422ac534e2b921fb095b37e2145ca7bddf0605c6ebf",
            "file": "archive/src/app/models/app-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAppConfig {\n  env: {\n    name: string;\n  };\n  appInsights: {\n    instrumentationKey: string;\n  };\n  logging: {\n    console: boolean;\n    appInsights: boolean;\n  };\n  aad: {\n    requireAuth: boolean;\n    tenant: string;\n    clientId: string;\n  };\n  adalConfig: {\n    clientId: string;\n    tenant: string;\n    redirectUri: string;\n    cacheLocation: string;\n    endpoints: {\n      api: string;\n    };\n  };\n  apiServer: {\n    APITechnicalRecordServerUri: string;\n    APITestResultServerUri: string;\n    APIDocumentsServerUri: string;\n    APIDocumentBlobUri: string;\n    APIPreparersServerUri: string;\n    APITestStationsServerUri: string;\n    APICertificatesBlobUri: string;\n    APITestTypesServerUri: string;\n  };\n}\n",
            "properties": [
                {
                    "name": "aad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "adalConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "apiServer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "appInsights",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "env",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "logging",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IAppState",
            "id": "interface-IAppState-fc64e1688f2037346cf6bbd018893edd3d5f7ac5b8bd228c4f953f6133778865739a0602e23b99563b3c2874e953bf9457904bab5c26b260d47ce3cb07108921",
            "file": "archive/src/app/store/state/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { RouterReducerState } from '@ngrx/router-store';\r\n\r\nimport {\r\n  initialVehicleTechRecordModelState,\r\n  VehicleTechRecordState\r\n} from './VehicleTechRecordModel.state';\r\nimport {\r\n  initialVehicleTestResultModelState,\r\n  IVehicleTestResultModelState\r\n} from './VehicleTestResultModel.state';\r\nimport {\r\n  initialReferenceDataState,\r\n  ReferenceDataState\r\n} from '@app/store/state/ReferenceDataState.state';\r\nimport { initialLoaderState, ILoaderState } from './Loader.state';\r\nimport { VehicleTechRecordModelEffects } from '../effects/VehicleTechRecordModel.effects';\r\nimport { RouterEffects } from '../effects/router.effects';\r\nimport { ErrorState, initialErrorState } from '../reducers/error.reducers';\r\nimport { AppFormState, initialAppFormState } from '../reducers/app-form-state.reducers';\r\nimport { ModalState } from '@app/modal/modal.reducer';\r\nimport { initialModalState } from '../../modal/modal.reducer';\r\nimport { ModalEffects } from '@app/modal/modal.effects';\r\nimport { AppFormEffects } from '../effects/app-form.effects';\r\n\r\nexport interface IAppState {\r\n  router?: RouterReducerState;\r\n  loader: ILoaderState;\r\n  vehicleTechRecordModel: VehicleTechRecordState;\r\n  vehicleTestResultModel: IVehicleTestResultModelState;\r\n  referenceData: ReferenceDataState;\r\n  error: ErrorState;\r\n  appFormState: AppFormState;\r\n  modalState: ModalState;\r\n}\r\n\r\nexport const initialAppState: IAppState = {\r\n  loader: initialLoaderState,\r\n  vehicleTechRecordModel: initialVehicleTechRecordModelState,\r\n  vehicleTestResultModel: initialVehicleTestResultModelState,\r\n  referenceData: initialReferenceDataState,\r\n  error: initialErrorState,\r\n  appFormState: initialAppFormState,\r\n  modalState: initialModalState\r\n};\r\n\r\nexport const getInitialState = (): IAppState => initialAppState;\r\n\r\nexport const ROOT_EFFECTS = [\r\n  VehicleTechRecordModelEffects,\r\n  ModalEffects,\r\n  AppFormEffects,\r\n  RouterEffects\r\n];\r\n",
            "properties": [
                {
                    "name": "appFormState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppFormState",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorState",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILoaderState",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "modalState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalState",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "referenceData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReferenceDataState",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RouterReducerState",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "vehicleTechRecordModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordState",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "vehicleTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IVehicleTestResultModelState",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IBody",
            "id": "interface-IBody-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db",
            "file": "src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "bodyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "conversionRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "functionCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "make",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IBody",
            "id": "interface-IBody-4f71f517935ba9b9d2ea1987d17edde96b10b598bb438d3c13857c358b385faa5b3bc0fc91563725fdc8a4543a7548b1b5a655553b3ab69177743090b7b5c7db-1",
            "file": "archive/src/app/models/body-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BodyType {\n  code: string;\n  description: string;\n}\n\nexport interface IBody {\n  make: string;\n  model: string;\n  functionCode: string;\n  conversionRefNo: string;\n  bodyType: BodyType;\n}\n\nexport interface BodyPSV extends Body {\n  chassisMake: string;\n  chassisModel: string;\n}\n",
            "properties": [
                {
                    "name": "bodyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "conversionRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "functionCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "make",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IBody-1"
        },
        {
            "name": "ILoaderState",
            "id": "interface-ILoaderState-99713eadcf115e093861a9c92dfaf61757021897b3bc49ed19b8c505838a946229b4ee254a3042405df2cf3ff932c3eb5f27c86a51774b5b595b601e1f6cec5e",
            "file": "archive/src/app/store/state/Loader.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ILoaderState {\n  loading: boolean;\n  status?: 'success' | 'error';\n  error?: string;\n}\n\nexport const initialLoaderState: ILoaderState = {\n  loading: false,\n  status: null,\n  error: null\n};\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"success\" | \"error\"",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IVehicleTestResultModelState",
            "id": "interface-IVehicleTestResultModelState-585d5b4fea47811a59a3ed6eb0dfe4a7f02b8c8ec8aa83113a2e684da86851bd47ddd8fd6aebbbe2215c6e0c61e971e858d9f6901e63b6fa818a2540080e8144",
            "file": "archive/src/app/store/state/VehicleTestResultModel.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface IVehicleTestResultModelState {\n  vehicleTestResultModel: TestResultModel[];\n  selectedTestResultModel: TestResultModel;\n  editState: VIEW_STATE;\n  error?: any;\n}\n\nexport const initialVehicleTestResultModelState: IVehicleTestResultModelState = {\n  vehicleTestResultModel: null,\n  selectedTestResultModel: null,\n  editState: VIEW_STATE.VIEW_ONLY,\n  error: null\n};\n",
            "properties": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "selectedTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "vehicleTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LettersOfAuth",
            "id": "interface-LettersOfAuth-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "letterContents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "letterDateRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "letterType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 137
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LettersOfAuth",
            "id": "interface-LettersOfAuth-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "letterContents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "letterDateRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "letterType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 137
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LettersOfAuth-1"
        },
        {
            "name": "Location",
            "id": "interface-Location-a00c26d343cad9bc7500b8e573ece07f0f54e10c7ee51a3e65438498931bd8522dcbf5a64f72139500e09e4312b55d3c98a01130e78a60a2a4f93ba44994e05c",
            "file": "archive/src/app/models/defect.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Location {\n  axleNumber?: number;\n  horizontal?: string;\n  vertical: string;\n  longitudinal?: string;\n  rowNumber: number;\n  lateral: string;\n  seatNumber: number;\n}\n\ninterface AdditionalInformation {\n  location: Location;\n  notes: string;\n}\n\nexport interface Defect {\n  prohibitionIssued: boolean;\n  additionalInformation: AdditionalInformation;\n  itemNumber: number;\n  deficiencyRef: string;\n  stdForProhibition: boolean;\n  deficiencyId: string;\n  imNumber: number;\n  deficiencyCategory: string;\n  deficiencyText: string;\n  prs: boolean;\n  deficiencySubId?: any;\n  imDescription: string;\n  itemDescription: string;\n}\n",
            "properties": [
                {
                    "name": "axleNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "horizontal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "lateral",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "longitudinal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "rowNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "seatNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "vertical",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ManufacturerDetails",
            "id": "interface-ManufacturerDetails-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "faxNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "manufacturerNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 131
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation"
        },
        {
            "name": "ManufacturerDetails",
            "id": "interface-ManufacturerDetails-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "faxNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "manufacturerNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 131
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ManufacturerDetails-1"
        },
        {
            "name": "MetaData",
            "id": "interface-MetaData-16bff3db8cd504eb422a89ea1714cc76b0424ccd5c31a5a650006b00e1aabfe7d4cac38081c4ec703599a741826b96bf5d3abe9eb887fb6a2d5a6d538686d4d4",
            "file": "src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MetaData",
            "id": "interface-MetaData-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-1",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MetaData-1"
        },
        {
            "name": "Microfilm",
            "id": "interface-Microfilm-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "microfilmDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "microfilmRollNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "microfilmSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Microfilm",
            "id": "interface-Microfilm-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "microfilmDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "microfilmRollNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "microfilmSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Microfilm-1"
        },
        {
            "name": "ModalContent",
            "id": "interface-ModalContent-f0e2a3fbcd6436c59db1d6385f96d257aabc0d3a0fd64108f9c071c447c0114ae715adf5fe5e8b8ca615a4fd7040c627b34b5bfb3a971760a613305ede4f96f8",
            "file": "archive/src/app/modal/modal.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { APP_MODALS } from '../app.enums';\n\nexport interface ModalContent {\n  modal: APP_MODALS;\n  status: boolean;\n  payload?: string; // TODO: change to union type if other modals need to pass different value in future.\n}\n\nexport interface ModalPayload {\n  isOk: boolean;\n  payload?: string; // TODO: Replace with union type when other modals are implemented\n}\n",
            "properties": [
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "APP_MODALS",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ModalPayload",
            "id": "interface-ModalPayload-f0e2a3fbcd6436c59db1d6385f96d257aabc0d3a0fd64108f9c071c447c0114ae715adf5fe5e8b8ca615a4fd7040c627b34b5bfb3a971760a613305ede4f96f8",
            "file": "archive/src/app/modal/modal.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { APP_MODALS } from '../app.enums';\n\nexport interface ModalContent {\n  modal: APP_MODALS;\n  status: boolean;\n  payload?: string; // TODO: change to union type if other modals need to pass different value in future.\n}\n\nexport interface ModalPayload {\n  isOk: boolean;\n  payload?: string; // TODO: Replace with union type when other modals are implemented\n}\n",
            "properties": [
                {
                    "name": "isOk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ModalState",
            "id": "interface-ModalState-526b304101e5e6bb26650b6b67feed0b186b85b9fae984cfb96c2c69b9f37b2d03d5a1a82b8cddd7e2ebeebcaad09ee038d00c45ccf6f709065296d0ace3b49a",
            "file": "archive/src/app/modal/modal.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { APP_MODALS } from '@app/app.enums';\nimport { ModalStateActions, EModalStateActions } from './modal.actions';\n\nexport interface ModalState {\n  currentModal: APP_MODALS; // current suggestion\n  urlToRedirect?: string;\n  payload?: string;\n}\n\nexport const initialModalState: ModalState = {\n  currentModal: APP_MODALS.NONE\n};\n\nexport function ModalReducer(\n  state: ModalState = initialModalState,\n  action: ModalStateActions\n): ModalState {\n  switch (action.type) {\n    case EModalStateActions.LoadModal: {\n      return {\n        ...state,\n        currentModal: action.payload.currentModal,\n        urlToRedirect: action.payload.urlToRedirect\n      };\n    }\n\n    case EModalStateActions.ResetModal: {\n      return {\n        ...state,\n        currentModal: APP_MODALS.NONE,\n        payload: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n",
            "properties": [
                {
                    "name": "currentModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "APP_MODALS",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "urlToRedirect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ModType",
            "id": "interface-ModType-323f57207de56d6c61305723e8698a5bdcd4e46b5a459ce9b2e8e1113633736675d8f5cdef440d5330bb9591b0850fdf692cad4f599d0ca903144df25a0394cf",
            "file": "archive/src/app/models/test.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Defect } from '@app/models/defect';\n\nexport interface ModType {\n  code: string;\n  description: string;\n}\n\nexport interface CustomDefect {\n  referenceNumber: string;\n  defectName: string;\n  defectNotes: string;\n}\n\nexport interface TestType {\n  prohibitionIssued: boolean;\n  testCode: string;\n  testNumber: string;\n  lastUpdatedAt: string;\n  additionalCommentsForAbandon: string;\n  numberOfSeatbeltsFitted: number;\n  testTypeEndTimestamp: string;\n  reasonForAbandoning: string;\n  lastSeatbeltInstallationCheckDate: string;\n  createdAt: string;\n  testTypeId: string;\n  testTypeStartTimestamp: string;\n  certificateNumber: string;\n  testTypeName: string;\n  seatbeltInstallationCheckDate: boolean;\n  additionalNotesRecorded: string;\n  defects: Defect[];\n  name: string;\n  certificateLink: string;\n  testResult: string;\n  testExpiryDate: string;\n  testAnniversaryDate: string;\n  modType: ModType;\n  emissionStandard: string;\n  smokeTestKLimitApplied: string;\n  fuelType: string;\n  modificationTypeUsed: string;\n  particulateTrapFitted: string;\n  particulateTrapSerialNumber: string;\n  secondaryCertificateNumber: string;\n  customDefects: CustomDefect[];\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Plate",
            "id": "interface-Plate-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "plateIssueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "plateIssuer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "plateReasonForIssue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "plateSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "toEmailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Plate",
            "id": "interface-Plate-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "plateIssueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "plateIssuer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "plateReasonForIssue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "plateSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "toEmailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Plate-1"
        },
        {
            "name": "Preparer",
            "id": "interface-Preparer-0119b86145fac6d76a56a2d82f65e6ea42351e2cffe765fe38c2782d55488a862c590bced1b47bccbfdf2300af6c92e2259284ba8b6adbcfc9cf3d1480647e18",
            "file": "archive/src/app/models/preparer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Preparer {\n  preparerId: string;\n  preparerName: string;\n}\n",
            "properties": [
                {
                    "name": "preparerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "preparerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PurchaserDetails",
            "id": "interface-PurchaserDetails-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "faxNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "purchaserNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 127
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation"
        },
        {
            "name": "PurchaserDetails",
            "id": "interface-PurchaserDetails-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "faxNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "purchaserNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 127
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AddressInformation",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PurchaserDetails-1"
        },
        {
            "name": "ReferenceDataState",
            "id": "interface-ReferenceDataState-c1f84abbfb4de82df3ee6b35e5e30bf9e91299e401d0dd30372b24a685641694fa6c87587400b64e830d036f131f0e97fd81b90ed8c7c03b3768b925439f8698",
            "file": "archive/src/app/store/state/ReferenceDataState.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport interface ReferenceDataState {\n  preparers: Preparer[];\n  testStations: TestStation[];\n  testTypeCategories: TestTypeCategory[];\n}\n\nexport const initialReferenceDataState: ReferenceDataState = {\n  preparers: null,\n  testStations: null,\n  testTypeCategories: null\n};\n",
            "properties": [
                {
                    "name": "preparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preparer[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestStation[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "testTypeCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestTypeCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RouterStateUrl",
            "id": "interface-RouterStateUrl-98d85262596be9beb5845805b586dc129a4197c78ab1efc7514a2124190b9aeae36430a7ce9c466e2cef288d7f18c7fbc1b9caba99918e235cfcbb7b09c1f8df",
            "file": "archive/src/app/store/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Params, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams }\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchParams",
            "id": "interface-SearchParams-ddcd087c0506ab1f4131f6b791ba8e7b0d7d9c616897840c5d8b086f5fc70dd6e69dcf3c45ee32d07b355746bb40e064bdd6890d51fc3a86beefe41eb00ede38",
            "file": "archive/src/app/models/search-params.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SearchParams {\n  searchIdentifier: string;\n  searchCriteria: string;\n}\n",
            "properties": [
                {
                    "name": "searchCriteria",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "searchIdentifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOption",
            "id": "interface-SelectOption-602e7b1708fde8d7f81cf46d4cbdcf04d4e82d459e09eef83b41bfb772927d17626813d2b15cbfd1ff3b37ef448fe116f5366f86365a4bdc20bf8a86f8c005ee",
            "file": "archive/src/app/models/select-option.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SelectOption {\n  id?: number;\n  name: string;\n  selected: boolean;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-c7944a62e59bba4ffc96e9b78aa30e49867628a1219d52e7e73bd450b52b402b11365532b2accd64280290111c3ae3fec3ff88d024c1e3e3ae5529281dd4fd73",
            "file": "src/app/reducers/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { UserServiceReducer } from '../user-service/user-service.reducer';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  \"userservice\": UserServiceReducer\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Tank",
            "id": "interface-Tank-606e4eae1529555719ae0f4cac4865b0eefecc48b26777dbfa6feed834a302a4ce6614d96a55cd0cb329df162e076e3da5599601911a97c5f679977c7d7128ed",
            "file": "src/app/models/tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails?: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tankDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankDetails",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tankStatement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankStatement",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tank",
            "id": "interface-Tank-9661d49c30eaeec292f6b46c109e0d9aa5f812926b953b3eae6de8d8319a443ed4e1c74e78387f7d303c6ca04c76421c0e384777af78256de7d8b800a170de71-1",
            "file": "archive/src/app/models/Tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tankDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankDetails",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tankStatement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankStatement",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Tank-1"
        },
        {
            "name": "Tank",
            "id": "interface-Tank-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-2",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "tankStatement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankStatement",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Tank-2"
        },
        {
            "name": "TankDetails",
            "id": "interface-TankDetails-606e4eae1529555719ae0f4cac4865b0eefecc48b26777dbfa6feed834a302a4ce6614d96a55cd0cb329df162e076e3da5599601911a97c5f679977c7d7128ed",
            "file": "src/app/models/tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails?: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "specialProvisions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "tankCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tankManufacturer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tankManufacturerSerialNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "tankTypeAppNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "tc2Details",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tc2Details",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "tc3Details",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tc3Details[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "yearOfManufacture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TankDetails",
            "id": "interface-TankDetails-9661d49c30eaeec292f6b46c109e0d9aa5f812926b953b3eae6de8d8319a443ed4e1c74e78387f7d303c6ca04c76421c0e384777af78256de7d8b800a170de71-1",
            "file": "archive/src/app/models/Tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "specialProvisions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "tankCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tankManufacturer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tankManufacturerSerialNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "tankTypeAppNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "tc2Details",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tc2Details",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "tc3Details",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tc3Details[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "yearOfManufacture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TankDetails-1"
        },
        {
            "name": "TankStatement",
            "id": "interface-TankStatement-16bff3db8cd504eb422a89ea1714cc76b0424ccd5c31a5a650006b00e1aabfe7d4cac38081c4ec703599a741826b96bf5d3abe9eb887fb6a2d5a6d538686d4d4",
            "file": "src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "substancesPermittedFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TankStatement",
            "id": "interface-TankStatement-606e4eae1529555719ae0f4cac4865b0eefecc48b26777dbfa6feed834a302a4ce6614d96a55cd0cb329df162e076e3da5599601911a97c5f679977c7d7128ed-1",
            "file": "src/app/models/tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails?: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "productList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "productListRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "productListUnNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "statement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "substancesPermitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TankStatement-1"
        },
        {
            "name": "TankStatement",
            "id": "interface-TankStatement-9661d49c30eaeec292f6b46c109e0d9aa5f812926b953b3eae6de8d8319a443ed4e1c74e78387f7d303c6ca04c76421c0e384777af78256de7d8b800a170de71-2",
            "file": "archive/src/app/models/Tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "productList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "productListRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "productListUnNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "statement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "substancesPermitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "TankStatement-2"
        },
        {
            "name": "TankStatement",
            "id": "interface-TankStatement-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-3",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "substancesPermittedFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "TankStatement-3"
        },
        {
            "name": "Tc2Details",
            "id": "interface-Tc2Details-606e4eae1529555719ae0f4cac4865b0eefecc48b26777dbfa6feed834a302a4ce6614d96a55cd0cb329df162e076e3da5599601911a97c5f679977c7d7128ed",
            "file": "src/app/models/tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails?: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tc2IntermediateApprovalNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "tc2IntermediateExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "tc2Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tc2Details",
            "id": "interface-Tc2Details-9661d49c30eaeec292f6b46c109e0d9aa5f812926b953b3eae6de8d8319a443ed4e1c74e78387f7d303c6ca04c76421c0e384777af78256de7d8b800a170de71-1",
            "file": "archive/src/app/models/Tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tc2IntermediateApprovalNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "tc2IntermediateExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "tc2Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Tc2Details-1"
        },
        {
            "name": "Tc3Details",
            "id": "interface-Tc3Details-606e4eae1529555719ae0f4cac4865b0eefecc48b26777dbfa6feed834a302a4ce6614d96a55cd0cb329df162e076e3da5599601911a97c5f679977c7d7128ed",
            "file": "src/app/models/tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails?: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tc3PeriodicExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "tc3PeriodicNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "tc3Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tc3Details",
            "id": "interface-Tc3Details-9661d49c30eaeec292f6b46c109e0d9aa5f812926b953b3eae6de8d8319a443ed4e1c74e78387f7d303c6ca04c76421c0e384777af78256de7d8b800a170de71-1",
            "file": "archive/src/app/models/Tank.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tc3Details {\n  tc3Type: string;\n  tc3PeriodicNumber: string;\n  tc3PeriodicExpiryDate: string;\n}\n\nexport interface Tc2Details {\n  tc2Type: string;\n  tc2IntermediateApprovalNo: string;\n  tc2IntermediateExpiryDate: string;\n}\n\nexport interface TankStatement {\n  substancesPermitted: string;\n  statement: string;\n  productListRefNo: string;\n  productListUnNo: string[];\n  productList: string;\n}\n\nexport interface TankDetails {\n  tankManufacturer: string;\n  yearOfManufacture: number;\n  tankCode: string;\n  specialProvisions: string;\n  tankManufacturerSerialNo: string;\n  tankTypeAppNo: string;\n  tc2Details: Tc2Details;\n  tc3Details: Tc3Details[];\n}\n\nexport interface Tank {\n  tankDetails: TankDetails;\n  tankStatement: TankStatement;\n}\n",
            "properties": [
                {
                    "name": "tc3PeriodicExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "tc3PeriodicNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "tc3Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Tc3Details-1"
        },
        {
            "name": "TechRecord",
            "id": "interface-TechRecord-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": true,
                    "description": "",
                    "line": 221
                },
                {
                    "name": "alterationMarker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Applicant",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "approvalType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "approvalTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "authIntoService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthIntoService",
                    "optional": false,
                    "description": "",
                    "line": 238
                },
                {
                    "name": "axles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Axle[]",
                    "optional": false,
                    "description": "",
                    "line": 235
                },
                {
                    "name": "bodyMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "bodyModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "bodyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "brakeCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 220
                },
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Brakes",
                    "optional": false,
                    "description": "",
                    "line": 234
                },
                {
                    "name": "centreOfRearmostAxleToRearOfTrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 217
                },
                {
                    "name": "chassisMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "chassisModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "coifCertifierName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "coifDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "coifSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 177
                },
                {
                    "name": "conversionRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 179
                },
                {
                    "name": "couplingCenterToRearAxleMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 214
                },
                {
                    "name": "couplingCenterToRearAxleMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 213
                },
                {
                    "name": "couplingCenterToRearTrlMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "couplingCenterToRearTrlMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 215
                },
                {
                    "name": "couplingType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "createdById",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 223
                },
                {
                    "name": "createdByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 222
                },
                {
                    "name": "dda",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DDA",
                    "optional": false,
                    "description": "",
                    "line": 241
                },
                {
                    "name": "departmentalVehicleMarker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "dimensions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dimensions",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "dispensations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "drawbarCouplingFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 202
                },
                {
                    "name": "emissionsLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "euroStandard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 203
                },
                {
                    "name": "euVehicleCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "firstUseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "frameDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 240
                },
                {
                    "name": "frontAxleTo5thWheelCouplingMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 210
                },
                {
                    "name": "frontAxleTo5thWheelCouplingMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 209
                },
                {
                    "name": "frontAxleTo5thWheelMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 208
                },
                {
                    "name": "frontAxleTo5thWheelMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 207
                },
                {
                    "name": "frontAxleToRearAxle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 211
                },
                {
                    "name": "fuelPropulsionSystem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "functionCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 148
                },
                {
                    "name": "grossDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "grossEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "grossGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 193
                },
                {
                    "name": "grossKerbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 191
                },
                {
                    "name": "grossLadenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 192
                },
                {
                    "name": "lastUpdatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "lastUpdatedById",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 225
                },
                {
                    "name": "lastUpdatedByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 224
                },
                {
                    "name": "lettersOfAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LettersOfAuth",
                    "optional": false,
                    "description": "",
                    "line": 239
                },
                {
                    "name": "make",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "manufacturerDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturerDetails",
                    "optional": false,
                    "description": "",
                    "line": 237
                },
                {
                    "name": "manufactureYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "maxLoadOnCoupling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 199
                },
                {
                    "name": "maxTrainDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "maxTrainEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 162
                },
                {
                    "name": "maxTrainGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 197
                },
                {
                    "name": "microfilm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Microfilm",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "modelLiteral",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 171
                },
                {
                    "name": "noOfAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 219
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 218
                },
                {
                    "name": "ntaNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "numberOfSeatbelts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 231
                },
                {
                    "name": "numberOfWheelsDriven",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "offRoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "plates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Plate[]",
                    "optional": false,
                    "description": "",
                    "line": 165
                },
                {
                    "name": "purchaserDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PurchaserDetails",
                    "optional": false,
                    "description": "",
                    "line": 236
                },
                {
                    "name": "rearAxleToRearTrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 212
                },
                {
                    "name": "reasonForCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "recordCompleteness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 145
                },
                {
                    "name": "regnDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "remarks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "roadFriendly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 201
                },
                {
                    "name": "seatbeltInstallationApprovalDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 232
                },
                {
                    "name": "seatsLowerDeck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "seatsUpperDeck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "speedLimiterMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 184
                },
                {
                    "name": "speedRestriction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "standingCapacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "statusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "suspensionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 204
                },
                {
                    "name": "tachoExemptMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 185
                },
                {
                    "name": "trainDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "trainEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "trainGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "tyreUseCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 200
                },
                {
                    "name": "unladenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "updateType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 226
                },
                {
                    "name": "variantNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "variantVersionNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "vehicleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 227
                },
                {
                    "name": "vehicleConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 233
                },
                {
                    "name": "vehicleSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 230
                },
                {
                    "name": "vehicleSubclass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 228
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 229
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TechRecord",
            "id": "interface-TechRecord-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": true,
                    "description": "",
                    "line": 221
                },
                {
                    "name": "alterationMarker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Applicant",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "approvalType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "approvalTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "authIntoService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthIntoService",
                    "optional": false,
                    "description": "",
                    "line": 238
                },
                {
                    "name": "axles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Axle[]",
                    "optional": false,
                    "description": "",
                    "line": 235
                },
                {
                    "name": "bodyMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "bodyModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "bodyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "brakeCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 220
                },
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Brakes",
                    "optional": false,
                    "description": "",
                    "line": 234
                },
                {
                    "name": "centreOfRearmostAxleToRearOfTrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 217
                },
                {
                    "name": "chassisMake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "chassisModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "coifCertifierName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "coifDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "coifSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 177
                },
                {
                    "name": "conversionRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 179
                },
                {
                    "name": "couplingCenterToRearAxleMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 214
                },
                {
                    "name": "couplingCenterToRearAxleMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 213
                },
                {
                    "name": "couplingCenterToRearTrlMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "couplingCenterToRearTrlMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 215
                },
                {
                    "name": "couplingType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "createdById",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 223
                },
                {
                    "name": "createdByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 222
                },
                {
                    "name": "dda",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DDA",
                    "optional": false,
                    "description": "",
                    "line": 241
                },
                {
                    "name": "departmentalVehicleMarker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "dimensions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dimensions",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "dispensations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "drawbarCouplingFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 202
                },
                {
                    "name": "emissionsLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "euroStandard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 203
                },
                {
                    "name": "euVehicleCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "firstUseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "frameDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 240
                },
                {
                    "name": "frontAxleTo5thWheelCouplingMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 210
                },
                {
                    "name": "frontAxleTo5thWheelCouplingMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 209
                },
                {
                    "name": "frontAxleTo5thWheelMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 208
                },
                {
                    "name": "frontAxleTo5thWheelMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 207
                },
                {
                    "name": "frontAxleToRearAxle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 211
                },
                {
                    "name": "fuelPropulsionSystem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "functionCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 148
                },
                {
                    "name": "grossDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "grossEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "grossGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 193
                },
                {
                    "name": "grossKerbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 191
                },
                {
                    "name": "grossLadenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 192
                },
                {
                    "name": "lastUpdatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "lastUpdatedById",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 225
                },
                {
                    "name": "lastUpdatedByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 224
                },
                {
                    "name": "lettersOfAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LettersOfAuth",
                    "optional": false,
                    "description": "",
                    "line": 239
                },
                {
                    "name": "make",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "manufacturerDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturerDetails",
                    "optional": false,
                    "description": "",
                    "line": 237
                },
                {
                    "name": "manufactureYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "maxLoadOnCoupling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 199
                },
                {
                    "name": "maxTrainDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "maxTrainEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 162
                },
                {
                    "name": "maxTrainGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 197
                },
                {
                    "name": "microfilm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Microfilm",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "modelLiteral",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 171
                },
                {
                    "name": "noOfAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 219
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 218
                },
                {
                    "name": "ntaNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "numberOfSeatbelts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 231
                },
                {
                    "name": "numberOfWheelsDriven",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "offRoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "plates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Plate[]",
                    "optional": false,
                    "description": "",
                    "line": 165
                },
                {
                    "name": "purchaserDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PurchaserDetails",
                    "optional": false,
                    "description": "",
                    "line": 236
                },
                {
                    "name": "rearAxleToRearTrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 212
                },
                {
                    "name": "reasonForCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "recordCompleteness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 145
                },
                {
                    "name": "regnDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "remarks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "roadFriendly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 201
                },
                {
                    "name": "seatbeltInstallationApprovalDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 232
                },
                {
                    "name": "seatsLowerDeck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "seatsUpperDeck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "speedLimiterMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 184
                },
                {
                    "name": "speedRestriction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "standingCapacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "statusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "suspensionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 204
                },
                {
                    "name": "tachoExemptMrk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 185
                },
                {
                    "name": "trainDesignWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "trainEecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "trainGbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "tyreUseCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 200
                },
                {
                    "name": "unladenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "updateType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 226
                },
                {
                    "name": "variantNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "variantVersionNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "vehicleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 227
                },
                {
                    "name": "vehicleConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 233
                },
                {
                    "name": "vehicleSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 230
                },
                {
                    "name": "vehicleSubclass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 228
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 229
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TechRecord-1"
        },
        {
            "name": "TestCode",
            "id": "interface-TestCode-41c1bb6ddf8e3da9edc63fa3dc49b5d80314ebc501371c7576e287b2525be587e4e4153bded1034ba0157d1fe47a4ad94ee1bd4b22811e04e591f87e615d033b",
            "file": "archive/src/app/models/test-code.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TestCode {\n  defaultTestCode: string;\n  linkedTestCode: null;\n}\n",
            "properties": [
                {
                    "name": "defaultTestCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "linkedTestCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestRecordTestType",
            "id": "interface-TestRecordTestType-87e9f62dcaa404b9f91a0eb9ca02c1d864abf0d89c48c98796bd6b0f152b5d2753ce0a4db3aa09c0ce4fea094fe78837ecfa0955df7d55ba52ba8ed68826b5d9",
            "file": "archive/src/app/models/test-record-test-type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TestType } from '@app/models/test.type';\nimport { TestResultModel } from '@app/models/test-result.model';\n\nexport interface TestRecordTestType {\n  testType: TestType;\n  testRecord: TestResultModel;\n}\n",
            "properties": [
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestType",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestResultModel",
            "id": "interface-TestResultModel-889b031345080043ded2ad8d1163fa032d18df4e6c66b098a07d5f0264e3091ef233a8090d8f312abab3e1897a6a858a8bf07a067059fa24624faf92132b8994",
            "file": "archive/src/app/models/test-result.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TestType } from '../models/test.type';\nimport { BodyType } from '@app/models/body-type';\n\nexport interface TestResultModel {\n  reasonForCreation: string;\n  testResultId: string;\n  testerStaffId: string;\n  testStartTimestamp: string;\n  odometerReadingUnits: string;\n  testEndTimestamp: string;\n  testStatus: string;\n  numberOfWheelsDriven: number;\n  testTypes: TestType[];\n  vehicleClass: BodyType;\n  vin: string;\n  vehicleSize: string;\n  testStationName: string;\n  vehicleId: string;\n  vehicleType: string;\n  countryOfRegistration: string;\n  preparerId: string;\n  preparerName: string;\n  odometerReading: number;\n  vehicleConfiguration: string;\n  testStationType: string;\n  reasonForCancellation: string;\n  testerName: string;\n  vrm: string;\n  testStationPNumber: string;\n  numberOfSeats: number;\n  noOfAxles: number;\n  testerEmailAddress: string;\n  euVehicleCategory: string;\n  trailerId: string;\n  testResult: string;\n  systemNumber: string;\n  regnDate: string;\n  firstUseDate: string;\n  deletionFlag: boolean;\n  testExpiryDate: string;\n  testVersion: string;\n  createdByName: string;\n  createdAt: string;\n  lastUpdatedByName: string;\n  lastUpdatedAt: string;\n  testHistory: TestResultModel[];\n  vehicleSubclass: string[];\n}\n",
            "properties": [
                {
                    "name": "countryOfRegistration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "createdByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "deletionFlag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "euVehicleCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "firstUseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "lastUpdatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "lastUpdatedByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "noOfAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "numberOfSeats",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "numberOfWheelsDriven",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "odometerReading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "odometerReadingUnits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "preparerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "preparerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "reasonForCancellation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "reasonForCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "regnDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "systemNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "testEndTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "testerEmailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "testerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "testerStaffId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "testExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "testHistory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "testResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "testResultId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testStartTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "testStationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "testStationPNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "testStationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "testStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "testTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestType[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "testVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "trailerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "vehicleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BodyType",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "vehicleConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "vehicleId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vehicleSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "vehicleSubclass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "vrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestResultTestTypeNumber",
            "id": "interface-TestResultTestTypeNumber-e6ed93378b80c048a9f2dbfa92de4c2548197233afdf81993d964e10b0fd23f9e138a4f24bcb474833a9ec2e2a22ea555a7ee98d6a46374dffa62fd4556c1c61",
            "file": "archive/src/app/models/test-result-test-type-number.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TestResultModel } from '@app/models/test-result.model';\n\nexport interface TestResultTestTypeNumber {\n  testResultUpdated: TestResultModel;\n  testTypeNumber: string;\n  testResultsUpdated: TestResultModel[];\n}\n",
            "properties": [
                {
                    "name": "testResultsUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testResultUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "testTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestStation",
            "id": "interface-TestStation-a6c0dfc2bc7afd260f74653771e6633eaab5fe7ecd0d2c78062690367cadee84c61bb3e48616353ece0ff35f6eca7d05896144c65ddbb55133c84c8832e26f3a",
            "file": "archive/src/app/models/test-station.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TestStation {\n  testStationId: string;\n  testStationPNumber: string;\n  testStationStatus: string;\n  testStationName: string;\n  testStationContactNumber: string;\n  testStationAccessNotes: string;\n  testStationGeneralNotes: string;\n  testStationTown: string;\n  testStationAddress: string;\n  testStationPostcode: string;\n  testStationLongitude: number;\n  testStationLatitude: number;\n  testStationType: string;\n  testStationEmails: string[];\n}\n",
            "properties": [
                {
                    "name": "testStationAccessNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "testStationAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "testStationContactNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testStationEmails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "testStationGeneralNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "testStationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "testStationLatitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "testStationLongitude",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "testStationName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "testStationPNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "testStationPostcode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "testStationStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "testStationTown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "testStationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestType",
            "id": "interface-TestType-323f57207de56d6c61305723e8698a5bdcd4e46b5a459ce9b2e8e1113633736675d8f5cdef440d5330bb9591b0850fdf692cad4f599d0ca903144df25a0394cf",
            "file": "archive/src/app/models/test.type.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Defect } from '@app/models/defect';\n\nexport interface ModType {\n  code: string;\n  description: string;\n}\n\nexport interface CustomDefect {\n  referenceNumber: string;\n  defectName: string;\n  defectNotes: string;\n}\n\nexport interface TestType {\n  prohibitionIssued: boolean;\n  testCode: string;\n  testNumber: string;\n  lastUpdatedAt: string;\n  additionalCommentsForAbandon: string;\n  numberOfSeatbeltsFitted: number;\n  testTypeEndTimestamp: string;\n  reasonForAbandoning: string;\n  lastSeatbeltInstallationCheckDate: string;\n  createdAt: string;\n  testTypeId: string;\n  testTypeStartTimestamp: string;\n  certificateNumber: string;\n  testTypeName: string;\n  seatbeltInstallationCheckDate: boolean;\n  additionalNotesRecorded: string;\n  defects: Defect[];\n  name: string;\n  certificateLink: string;\n  testResult: string;\n  testExpiryDate: string;\n  testAnniversaryDate: string;\n  modType: ModType;\n  emissionStandard: string;\n  smokeTestKLimitApplied: string;\n  fuelType: string;\n  modificationTypeUsed: string;\n  particulateTrapFitted: string;\n  particulateTrapSerialNumber: string;\n  secondaryCertificateNumber: string;\n  customDefects: CustomDefect[];\n}\n",
            "properties": [
                {
                    "name": "additionalCommentsForAbandon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "additionalNotesRecorded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "certificateLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "certificateNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "customDefects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomDefect[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "defects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Defect[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "emissionStandard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "fuelType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "lastSeatbeltInstallationCheckDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "lastUpdatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "modificationTypeUsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "modType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModType",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "numberOfSeatbeltsFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "particulateTrapFitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "particulateTrapSerialNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "prohibitionIssued",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "reasonForAbandoning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "seatbeltInstallationCheckDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "secondaryCertificateNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "smokeTestKLimitApplied",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "testAnniversaryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "testCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "testExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "testNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "testResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "testTypeEndTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "testTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "testTypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "testTypeStartTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestTypeCategory",
            "id": "interface-TestTypeCategory-277166f32f44d4496fd4b7e07f94c3f8261d1bf60814ed89963e2d04edf296d6e4bf35278e5b91086ab570ef4b8bea613acfaa95890abe860551bc2c25ec0543",
            "file": "archive/src/app/models/test-type-category.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TestCode } from '@app/models/test-code';\n\nexport interface TestTypeCategory {\n  id: string;\n  linkedIds: string[];\n  name: string;\n  testTypeName: string;\n  forVehicleType: string[];\n  forVehicleSize: string[];\n  forVehicleConfiguration: string[];\n  forVehicleAxles: number[];\n  forEuVehicleCategory: string[];\n  forVehicleClass: string[];\n  forVehicleSubclass: string[];\n  forVehicleWheels: number[];\n  testCodes?: TestCode[];\n  nextTestTypesOrCategories?: TestTypeCategory[];\n}\n",
            "properties": [
                {
                    "name": "forEuVehicleCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "forVehicleAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "forVehicleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "forVehicleConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "forVehicleSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "forVehicleSubclass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "forVehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "forVehicleWheels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "linkedIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "nextTestTypesOrCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestTypeCategory[]",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "testCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestCode[]",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "testTypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TestTypesApplicable",
            "id": "interface-TestTypesApplicable-c3b818d6911b17c7ebcf6207b166cc83092472e866904b03c24f7bedb6ba2234785de56aa3d1a7f4a78f7fed6ceaab0e38f5ec3e6ba2bdbf986dc7262b8dddcd",
            "file": "archive/src/app/test-record/test-record.mapper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport {\n  REASON_FOR_ABANDONING_HGV_TRL,\n  REASON_FOR_ABANDONING_PSV,\n  REASON_FOR_ABANDONING_TIR,\n  TEST_STATION_TYPE\n} from '@app/test-record/test-record.enums';\nimport { TestRecordTestType } from '@app/models/test-record-test-type';\nimport { TestType } from '@app/models/test.type';\nimport { COUNTRY_OF_REGISTRATION } from '@app/app.enums';\nimport {\n  ANNIVERSARY_DATE_APPLICABLE,\n  CERTIFICATE_APPLICABLE,\n  DEFECTS_APPLICABLE,\n  EMISSION_DETAILS_APPLICABLE,\n  EXPIRY_DATE_APPLICABLE,\n  SEAT_BELT_APPLICABLE,\n  SPECIALIST_CERTIFICATE_APPLICABLE,\n  SPECIALIST_COIF_APPLICABLE,\n  SPECIALIST_TEST_APPLICABLE\n} from '@app/test-record/test-types-applicable.enum';\n\nexport interface TestTypesApplicable {\n  seatBeltApplicable: {};\n  defectsApplicable: {};\n  emissionDetailsApplicable: {};\n  anniversaryDateApplicable: {};\n  expiryDateApplicable: {};\n  certificateApplicable: {};\n  specialistTestApplicable: {};\n  specialistCOIFApplicable: {};\n  specialistCertificateApplicable: {};\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TestRecordMapper {\n  getTestStationType(type: string) {\n    switch (type) {\n      case 'atf':\n        return TEST_STATION_TYPE.ATF;\n        break;\n      case 'gvts':\n        return TEST_STATION_TYPE.GVTS;\n        break;\n      case 'hq':\n        return TEST_STATION_TYPE.HQ;\n        break;\n    }\n  }\n\n  getReasonsForAbandoning(vehicleType: string, testTypeId: string) {\n    const tirTestTypeIds = { 49: 'TIR test', 56: 'Paid TIR retest', 57: 'Free TIR retest' };\n\n    if (Object.keys(tirTestTypeIds).includes(testTypeId)) {\n      return Object.values(REASON_FOR_ABANDONING_TIR);\n    } else {\n      switch (vehicleType) {\n        case 'trl':\n        case 'hgv':\n          return Object.values(REASON_FOR_ABANDONING_HGV_TRL);\n          break;\n        case 'psv':\n          return Object.values(REASON_FOR_ABANDONING_PSV);\n          break;\n      }\n    }\n  }\n\n  getTestTypeEnums(applicableEnum: string[]) {\n    return applicableEnum.reduce(\n      (val, testTypeId) => ({ ...val, [testTypeId]: 'applicable' }),\n      {}\n    );\n  }\n\n  getTestTypeApplicable(sectionName: string) {\n    const testTypesApplicable = {\n      seatBeltApplicable: this.getTestTypeEnums(Object.values(SEAT_BELT_APPLICABLE)),\n      defectsApplicable: this.getTestTypeEnums(Object.values(DEFECTS_APPLICABLE)),\n      emissionDetailsApplicable: this.getTestTypeEnums(\n        Object.values(EMISSION_DETAILS_APPLICABLE)\n      ),\n      anniversaryDateApplicable: this.getTestTypeEnums(\n        Object.values(ANNIVERSARY_DATE_APPLICABLE)\n      ),\n      expiryDateApplicable: this.getTestTypeEnums(Object.values(EXPIRY_DATE_APPLICABLE)),\n      certificateApplicable: this.getTestTypeEnums(Object.values(CERTIFICATE_APPLICABLE)),\n      specialistTestApplicable: this.getTestTypeEnums(Object.values(SPECIALIST_TEST_APPLICABLE)),\n      specialistCOIFApplicable: this.getTestTypeEnums(Object.values(SPECIALIST_COIF_APPLICABLE)),\n      specialistCertificateApplicable: this.getTestTypeEnums(\n        Object.values(SPECIALIST_CERTIFICATE_APPLICABLE)\n      )\n    };\n\n    return testTypesApplicable[sectionName];\n  }\n\n  getCountryOfRegistrationCode(countryName: string) {\n    const countryCode = Object.keys(COUNTRY_OF_REGISTRATION)[\n      Object.values(COUNTRY_OF_REGISTRATION).indexOf(countryName)\n    ];\n    return !!countryCode ? countryCode : '';\n  }\n\n  getDateTime(dateValue: string, timeValue: string) {\n    const dateToSave = new Date(dateValue);\n    const timeToSave = new Date(timeValue);\n\n    dateToSave.setUTCMinutes(timeToSave.getUTCMinutes());\n    dateToSave.setUTCHours(timeToSave.getUTCHours());\n\n    return !!dateToSave.toJSON() ? dateToSave.toISOString() : '';\n  }\n\n  getReasonsForAbandoningValue(currentValue: string[], reasonsForAbandoning: string[]): string {\n    const selectedReasons = reasonsForAbandoning.map((elem, index) => {\n      return !!currentValue ? (currentValue[index] ? elem : '') : '';\n    });\n    return selectedReasons.length > 1 ? selectedReasons.filter((item) => item).join(',') : '';\n  }\n\n  mapFormValues(testResultFormData, testResultObject: TestRecordTestType): TestResultModel {\n    const testResultMapped: TestResultModel = testResultObject.testRecord;\n    const testTypeMapped: TestType = testResultObject.testType;\n    const testTypesApplicable = {\n      seatBeltApplicable: this.getTestTypeApplicable('seatBeltApplicable'),\n      defectsApplicable: this.getTestTypeApplicable('defectsApplicable'),\n      emissionDetailsApplicable: this.getTestTypeApplicable('emissionDetailsApplicable'),\n      anniversaryDateApplicable: this.getTestTypeApplicable('anniversaryDateApplicable'),\n      expiryDateApplicable: this.getTestTypeApplicable('expiryDateApplicable'),\n      certificateApplicable: this.getTestTypeApplicable('certificateApplicable')\n    };\n\n    const mapPreparer = !!testResultFormData.preparer\n      ? testResultFormData.preparer.match(/\\((.*)\\)/)\n      : '';\n    const mapTestStation = !!testResultFormData.testStationNameNumber\n      ? testResultFormData.testStationNameNumber.match(/\\((.*)\\)/)\n      : '';\n\n    testResultMapped.countryOfRegistration = this.getCountryOfRegistrationCode(\n      testResultFormData.countryOfRegistration\n    );\n    testResultMapped.euVehicleCategory = testResultFormData.euVehicleCategory;\n    testResultMapped.odometerReading = testResultFormData.odometerReading;\n    testResultMapped.odometerReadingUnits = testResultFormData.odometerReadingUnits;\n    testResultMapped.preparerName = !!testResultFormData.preparer\n      ? testResultFormData.preparer.split('(')[0]\n      : '';\n    testResultMapped.preparerId = !!mapPreparer ? mapPreparer.pop() : '';\n\n    testResultMapped.testStationName = !!testResultFormData.testStationNameNumber\n      ? testResultFormData.testStationNameNumber.split('(')[0]\n      : '';\n    testResultMapped.testStationPNumber = !!mapTestStation ? mapTestStation.pop() : '';\n    testResultMapped.testStationType = !!testResultFormData.testStationType\n      ? testResultFormData.testStationType.toLowerCase()\n      : '';\n    testResultMapped.testerName = testResultFormData.testerName;\n    testResultMapped.testerEmailAddress = testResultFormData.testerEmailAddress;\n    testTypeMapped.seatbeltInstallationCheckDate =\n      testResultFormData.testType.seatbeltInstallationCheckDate === 'Yes';\n    testTypeMapped.numberOfSeatbeltsFitted = testResultFormData.testType.numberOfSeatbeltsFitted;\n    testTypeMapped.lastSeatbeltInstallationCheckDate =\n      testResultFormData.testType.lastSeatbeltInstallationCheckDate;\n    testTypeMapped.emissionStandard = testResultFormData.testType.emissionStandard;\n    testTypeMapped.smokeTestKLimitApplied = testResultFormData.testType.smokeTestKLimitApplied;\n    testTypeMapped.fuelType = testResultFormData.testType.fuelType;\n\n    if (\n      !!testTypeMapped.modType &&\n      testTypesApplicable.emissionDetailsApplicable[testTypeMapped.testTypeId]\n    ) {\n      testTypeMapped.modType.code = !!testResultFormData.testType.modType.length\n        ? testResultFormData.testType.modType.split('-')[0].trim()\n        : testTypeMapped.modType.code;\n      testTypeMapped.modType.description = !!testResultFormData.testType.modType.length\n        ? testResultFormData.testType.modType.split('-')[1].trim()\n        : testTypeMapped.modType.description;\n    }\n    testTypeMapped.modificationTypeUsed = testResultFormData.testType.modificationTypeUsed;\n    testTypeMapped.particulateTrapFitted = testResultFormData.testType.particulateTrapFitted;\n    testTypeMapped.particulateTrapSerialNumber =\n      testResultFormData.testType.particulateTrapSerialNumber;\n    testTypeMapped.additionalNotesRecorded = testResultFormData.testType.additionalNotesRecorded;\n    testTypeMapped.testResult = testResultFormData.testType.testResult;\n    testTypeMapped.reasonForAbandoning = this.getReasonsForAbandoningValue(\n      testResultFormData.testType.reasonForAbandoning,\n      this.getReasonsForAbandoning(testResultMapped.vehicleType, testTypeMapped.testTypeId)\n    );\n    testTypeMapped.additionalCommentsForAbandon =\n      testResultFormData.testType.additionalCommentsForAbandon;\n    testTypeMapped.certificateNumber = testResultFormData.testType.certificateNumber;\n    testTypeMapped.testExpiryDate = testResultFormData.testType.testExpiryDate;\n    testTypeMapped.testAnniversaryDate = testResultFormData.testType.testAnniversaryDate;\n    testTypeMapped.testTypeStartTimestamp = this.getDateTime(\n      testResultFormData.testType.testTypeEndTimestampDate,\n      testResultFormData.testType.testTypeStartTimestamp\n    );\n    testTypeMapped.testTypeEndTimestamp = this.getDateTime(\n      testResultFormData.testType.testTypeEndTimestampDate,\n      testResultFormData.testType.testTypeEndTimestampTime\n    );\n\n    if (!!testTypeMapped.prohibitionIssued) {\n      testTypeMapped.prohibitionIssued = testResultFormData.prohibitionIssued;\n    }\n\n    if (!testTypesApplicable.seatBeltApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.seatbeltInstallationCheckDate = undefined;\n      testTypeMapped.numberOfSeatbeltsFitted = undefined;\n      testTypeMapped.lastSeatbeltInstallationCheckDate = undefined;\n    }\n\n    if (!testTypesApplicable.emissionDetailsApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.emissionStandard = undefined;\n      testTypeMapped.smokeTestKLimitApplied = undefined;\n      testTypeMapped.fuelType = undefined;\n      testTypeMapped.modType = undefined;\n      testTypeMapped.modificationTypeUsed = undefined;\n      testTypeMapped.particulateTrapFitted = undefined;\n      testTypeMapped.particulateTrapSerialNumber = undefined;\n      testTypeMapped.testExpiryDate = undefined;\n      testResultMapped.testExpiryDate = undefined;\n    }\n\n    if (!testTypesApplicable.anniversaryDateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.testAnniversaryDate = undefined;\n    } else {\n      testTypeMapped.testAnniversaryDate = null;\n    }\n\n    if (!testTypesApplicable.expiryDateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.testExpiryDate = undefined;\n    }\n\n    if (!testTypesApplicable.certificateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.certificateNumber = undefined;\n    }\n\n    if (!!testTypesApplicable.defectsApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.defects = undefined;\n    } else {\n      testTypeMapped.prohibitionIssued = undefined;\n    }\n\n    switch (testResultMapped.vehicleType) {\n      case 'psv':\n        testResultMapped.trailerId = undefined;\n        testResultMapped.firstUseDate = undefined;\n        break;\n      case 'hgv':\n        testResultMapped.trailerId = undefined;\n        testResultMapped.firstUseDate = undefined;\n        testResultMapped.vehicleSize = undefined;\n        testResultMapped.numberOfSeats = undefined;\n        break;\n      case 'trl':\n        testResultMapped.vrm = undefined;\n        testResultMapped.vehicleId = undefined;\n        testResultMapped.odometerReading = undefined;\n        testResultMapped.odometerReadingUnits = undefined;\n        testResultMapped.regnDate = undefined;\n        testResultMapped.vehicleSize = undefined;\n        testResultMapped.numberOfSeats = undefined;\n        break;\n    }\n\n    testResultMapped.deletionFlag = undefined;\n    testResultMapped.testHistory = undefined;\n\n    testResultMapped.testTypes.forEach((tType, index) => {\n      if (tType.testNumber === testTypeMapped.testNumber) {\n        testResultMapped.testTypes[index] = testTypeMapped;\n      }\n    });\n\n    return testResultMapped;\n  }\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "anniversaryDateApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "certificateApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "defectsApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "emissionDetailsApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "expiryDateApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "seatBeltApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "specialistCertificateApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "specialistCOIFApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "specialistTestApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TreeData",
            "id": "interface-TreeData-86fdca9e5c842f124392d122aeb84a644a5dfe05ad628bf17112a7447a86c3d9a71932873c13f207cc41a0c053aca3e07483876a9549dcc869cbddbd8c427853",
            "file": "archive/src/app/models/tree-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TreeData {\n  children: TreeData[];\n  nodeName: string;\n  id: string;\n  isActive: boolean;\n}\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeData[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "nodeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tyres",
            "id": "interface-Tyres-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "dataTrAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "fitmentCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "plyRating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "speedCategorySymbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "tyreCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "tyreSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tyres",
            "id": "interface-Tyres-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "dataTrAxles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "fitmentCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "plyRating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "speedCategorySymbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "tyreCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "tyreSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Tyres-1"
        },
        {
            "name": "UpdateRecordInfo",
            "id": "interface-UpdateRecordInfo-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "oldStatusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "systemNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "vehicleRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordEdit",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserDetails",
            "id": "interface-UserDetails-35178e534230e93c1c762763e330f8c6d74837fca9fdf9c0149abab81a79123c2a09909e2c9e9651df04fc16ace1a109886c607056aa5d109fff85285a9761c2",
            "file": "src/app/models/user-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserDetails {\n  msUser: string;\n  msOid: string;\n}\n",
            "properties": [
                {
                    "name": "msOid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "msUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserDetails",
            "id": "interface-UserDetails-35178e534230e93c1c762763e330f8c6d74837fca9fdf9c0149abab81a79123c2a09909e2c9e9651df04fc16ace1a109886c607056aa5d109fff85285a9761c2-1",
            "file": "archive/src/app/models/user-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserDetails {\n  msUser: string;\n  msOid: string;\n}\n",
            "properties": [
                {
                    "name": "msOid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "msUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UserDetails-1"
        },
        {
            "name": "UserServiceState",
            "id": "interface-UserServiceState-f69a5cacfb7227deabc0afd3b40fd51cc8e5e123b3984ba174264c382e5ffd2924ab174c28def6ac2eab0eaf40848e25fbf303d6c87049e009db83dd1a6d3f94",
            "file": "src/app/user-service/user-service.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport * as UserServiceActions from './user-service.actions';\n\nexport interface UserServiceState {\n  username: string;\n}\n \nconst initialState: UserServiceState = {\n  username: \"(Not logged in)\",\n};\n\nconst getUserState = createFeatureSelector<UserServiceState>('userservice');\n \nexport const username = createSelector(getUserState, (state) => state.username);\n\nconst _userServiceReducer = createReducer(\n  initialState,\n  on(UserServiceActions.Login, (state, { name }) => ({ username: name })),\n  on(UserServiceActions.Logout, (state) => (initialState)),\n);\n \nexport function UserServiceReducer(state: UserServiceState, action: any) {\n  return _userServiceReducer(state, action);\n}\n",
            "properties": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ValidationState",
            "id": "interface-ValidationState-637532cc4900fb3019981f3ef139a00530e04706f1d6f20551a39469006797513c17cfcb9c5b886f7574bfa9a26533c56f8622d4e89fefa9fe2653f30a4ea933",
            "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nenum CHECKER {\n  BATTERY = 'battery',\n  TANK = 'tank',\n  NONE = 'na'\n}\n\nexport enum STATUS {\n  MANDATORY = 'MANDATORY',\n  HIDDEN = 'HIDDEN'\n}\n\nexport interface ValidationState {\n  tankDetailsEdit?: STATUS;\n  tankDocuments?: STATUS;\n  tankInspectionsEdit?: STATUS;\n  memoEdit?: STATUS;\n  batteryListApplicableEdit?: STATUS;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ValidationMapper {\n  _state = new Subject<ValidationState>();\n\n  constructor() {}\n\n  vehicleTypeSelected(selectedType: string): void {\n    const selectedState: ValidationState = this.mapVehicleTypeToValidationState(selectedType);\n    this._state.next(selectedState);\n  }\n\n  getCurrentState(): Observable<ValidationState> {\n    return this._state.asObservable();\n  }\n\n  private mapVehicleTypeToValidationState(selectedType: string): ValidationState {\n    const validationStatus = {\n      [CHECKER.BATTERY]: () => this.getBatteryTypeValidationStatus(),\n      [CHECKER.TANK]: () => this.getTankTypeValidationStatus(),\n      [CHECKER.NONE]: () => this.getOtherTypeValidationStatus()\n    };\n\n    return validationStatus[this.getType(selectedType)]();\n  }\n\n  private getType(type: string): string {\n    if (type.trim().includes(CHECKER.BATTERY)) {\n      return CHECKER.BATTERY;\n    }\n\n    if (type.includes(CHECKER.TANK)) {\n      return CHECKER.TANK;\n    }\n\n    return CHECKER.NONE;\n  }\n\n  private getBatteryTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.MANDATORY\n    };\n  }\n\n  private getTankTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.MANDATORY,\n      batteryListApplicableEdit: STATUS.HIDDEN\n    };\n  }\n\n  private getOtherTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.HIDDEN,\n      tankDocuments: STATUS.HIDDEN,\n      tankInspectionsEdit: STATUS.HIDDEN,\n      memoEdit: STATUS.HIDDEN,\n      batteryListApplicableEdit: STATUS.HIDDEN\n    };\n  }\n}\n",
            "properties": [
                {
                    "name": "batteryListApplicableEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "STATUS",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "memoEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "STATUS",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tankDetailsEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "STATUS",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "tankDocuments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "STATUS",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tankInspectionsEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "STATUS",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleDetails",
            "id": "interface-VehicleDetails-dc0d6b292aa7d101f44992ecc46af51758716e868a19aaee29216dd2d96af0cade4f4b14b9c3f36952b5f080f1dce85bb4d1d24ae2d5316b5dcdfb1a254d3e75",
            "file": "src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "approvalDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleDetails",
            "id": "interface-VehicleDetails-16bff3db8cd504eb422a89ea1714cc76b0424ccd5c31a5a650006b00e1aabfe7d4cac38081c4ec703599a741826b96bf5d3abe9eb887fb6a2d5a6d538686d4d4-1",
            "file": "src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './tank';\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "typeFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "VehicleDetails-1"
        },
        {
            "name": "VehicleDetails",
            "id": "interface-VehicleDetails-e903feee68bb7be1be0007cc9c57dc8a663f22fcc4b5c116a665eaa19930cb784bf2809a936e4a52d2a27507f511357e90880d692fc3151d0ce82112f51489f9-2",
            "file": "archive/src/app/models/adr-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Tank } from './Tank';\n\nexport interface VehicleDetails {\n  type: string;\n  approvalDate: string;\n}\n\nexport interface AdditionalNotes {\n  number: string[];\n  guidanceNotes: string[];\n}\n\nexport interface ApplicantDetails {\n  name: string;\n  street: string;\n  town: string;\n  city: string;\n  postcode: string;\n}\n\nexport interface AdrDetails {\n  vehicleDetails: VehicleDetails;\n  listStatementApplicable: boolean;\n  batteryListNumber: string;\n  declarationsSeen: boolean;\n  brakeDeclarationsSeen: boolean;\n  brakeDeclarationIssuer: string;\n  brakeEndurance: boolean;\n  weight: string;\n  compatibilityGroupJ?: boolean;\n  documents: string[];\n  permittedDangerousGoods: string[];\n  additionalExaminerNotes: string;\n  adrCertificateNotes: string;\n  applicantDetails: ApplicantDetails;\n  memosApply: string[];\n  additionalNotes: AdditionalNotes;\n  adrTypeApprovalNo: string;\n  tank?: Tank;\n}\n",
            "properties": [
                {
                    "name": "approvalDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "VehicleDetails-2"
        },
        {
            "name": "VehicleDetails",
            "id": "interface-VehicleDetails-bdd0ca5aada8915e1336f4f36a4eb69d07e9637efd37a4f1a5ac2beba9f16108b2e28ae7ce25087a6d8cb603d6bc0e27b802bfd12d24a0acb7e930fa8015084c-3",
            "file": "archive/src/app/models/meta-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Tank {\n  tankStatement: TankStatement;\n}\n\ninterface AdditionalNotes {\n  numberFe: string[];\n  guidanceNotesFe: string[];\n}\n\ninterface TankStatement {\n  substancesPermittedFe: string[];\n}\n\ninterface VehicleDetails {\n  typeFe: string[];\n}\n\ninterface AdrDetails {\n  memosApplyFe: string[];\n  tank: Tank;\n  additionalNotes: AdditionalNotes;\n  permittedDangerousGoodsFe: string[];\n  vehicleDetails: VehicleDetails;\n}\n\nexport interface MetaData {\n  adrDetails: AdrDetails;\n}\n",
            "properties": [
                {
                    "name": "typeFe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "VehicleDetails-3"
        },
        {
            "name": "VehicleIdentifiers",
            "id": "interface-VehicleIdentifiers-ce1b56a0c1ba0275f68831836fba05c8b1bf71d4d1c97627e8e8cb53b7d45391a57ea7a325ac06c7ba9317bc222b69536bae0e66f29a0aa24ea1bcd8ec7a0741",
            "file": "src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from './vrm.model';\nimport { TechRecord } from './tech-record.model';\nimport { MetaData } from './meta-data';\n// import { UserDetails } from './user-details';\n// import { VIEW_STATE } from './app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\n// export interface VehicleTechRecordEdit {\n//   msUserDetails: UserDetails;\n//   vin?: string;\n//   primaryVrm: string;\n//   secondaryVrms?: string[];\n//   trailerId?: string | undefined;\n//   techRecord: TechRecord[];\n// }\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  // viewState: VIEW_STATE;\n}\n\n// export interface VehicleTechRecordEditState {\n//   vehicleRecordEdit: VehicleTechRecordEdit;\n//   // viewState: VIEW_STATE;\n// }\n\n// export interface UpdateRecordInfo {\n//   vehicleRecord: VehicleTechRecordEdit;\n//   systemNumber: string;\n//   oldStatusCode?: string;\n// }\n",
            "properties": [
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "vrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleIdentifiers",
            "id": "interface-VehicleIdentifiers-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce-1",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "vrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "VehicleIdentifiers-1"
        },
        {
            "name": "VehicleTechRecordEdit",
            "id": "interface-VehicleTechRecordEdit-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "msUserDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDetails",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "primaryVrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "secondaryVrms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "trailerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleTechRecordEditState",
            "id": "interface-VehicleTechRecordEditState-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "vehicleRecordEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordEdit",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleTechRecordModel",
            "id": "interface-VehicleTechRecordModel-ce1b56a0c1ba0275f68831836fba05c8b1bf71d4d1c97627e8e8cb53b7d45391a57ea7a325ac06c7ba9317bc222b69536bae0e66f29a0aa24ea1bcd8ec7a0741",
            "file": "src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from './vrm.model';\nimport { TechRecord } from './tech-record.model';\nimport { MetaData } from './meta-data';\n// import { UserDetails } from './user-details';\n// import { VIEW_STATE } from './app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\n// export interface VehicleTechRecordEdit {\n//   msUserDetails: UserDetails;\n//   vin?: string;\n//   primaryVrm: string;\n//   secondaryVrms?: string[];\n//   trailerId?: string | undefined;\n//   techRecord: TechRecord[];\n// }\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  // viewState: VIEW_STATE;\n}\n\n// export interface VehicleTechRecordEditState {\n//   vehicleRecordEdit: VehicleTechRecordEdit;\n//   // viewState: VIEW_STATE;\n// }\n\n// export interface UpdateRecordInfo {\n//   vehicleRecord: VehicleTechRecordEdit;\n//   systemNumber: string;\n//   oldStatusCode?: string;\n// }\n",
            "properties": [
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "systemNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "trailerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "vrms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VrmModel[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleTechRecordModel",
            "id": "interface-VehicleTechRecordModel-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce-1",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "systemNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "trailerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "vrms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VrmModel[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "VehicleTechRecordModel-1"
        },
        {
            "name": "VehicleTechRecordState",
            "id": "interface-VehicleTechRecordState-ce1b56a0c1ba0275f68831836fba05c8b1bf71d4d1c97627e8e8cb53b7d45391a57ea7a325ac06c7ba9317bc222b69536bae0e66f29a0aa24ea1bcd8ec7a0741",
            "file": "src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from './vrm.model';\nimport { TechRecord } from './tech-record.model';\nimport { MetaData } from './meta-data';\n// import { UserDetails } from './user-details';\n// import { VIEW_STATE } from './app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\n// export interface VehicleTechRecordEdit {\n//   msUserDetails: UserDetails;\n//   vin?: string;\n//   primaryVrm: string;\n//   secondaryVrms?: string[];\n//   trailerId?: string | undefined;\n//   techRecord: TechRecord[];\n// }\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  // viewState: VIEW_STATE;\n}\n\n// export interface VehicleTechRecordEditState {\n//   vehicleRecordEdit: VehicleTechRecordEdit;\n//   // viewState: VIEW_STATE;\n// }\n\n// export interface UpdateRecordInfo {\n//   vehicleRecord: VehicleTechRecordEdit;\n//   systemNumber: string;\n//   oldStatusCode?: string;\n// }\n",
            "properties": [
                {
                    "name": "vehicleRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VehicleTechRecordState",
            "id": "interface-VehicleTechRecordState-d0e5cf6c60024b35294fb86c9fdc85a70a439d1ecf73ae719d337b1039bd6ec46c814d848a4224a85e1e91d6fde4647bcd9586c5b91488571bd7a51425586cce-1",
            "file": "archive/src/app/models/vehicle-tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VrmModel } from '@app/models/vrm.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from './meta-data';\nimport { UserDetails } from './user-details';\nimport { VIEW_STATE } from '@app/app.enums';\n\nexport interface VehicleTechRecordModel {\n  vrms: VrmModel[];\n  vin: string;\n  trailerId?: string;\n  systemNumber: string;\n  techRecord: TechRecord[];\n  metadata: MetaData;\n}\n\nexport interface VehicleIdentifiers {\n  vin: string;\n  vrm: string;\n  vType: string;\n}\n\nexport interface VehicleTechRecordEdit {\n  msUserDetails: UserDetails;\n  vin?: string;\n  primaryVrm: string;\n  secondaryVrms?: string[];\n  trailerId?: string | undefined;\n  techRecord: TechRecord[];\n}\n\nexport interface VehicleTechRecordState {\n  vehicleRecord: VehicleTechRecordModel;\n  viewState: VIEW_STATE;\n}\n\nexport interface VehicleTechRecordEditState {\n  vehicleRecordEdit: VehicleTechRecordEdit;\n  viewState: VIEW_STATE;\n}\n\nexport interface UpdateRecordInfo {\n  vehicleRecord: VehicleTechRecordEdit;\n  systemNumber: string;\n  oldStatusCode?: string;\n}\n",
            "properties": [
                {
                    "name": "vehicleRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "VehicleTechRecordState-1"
        },
        {
            "name": "VehicleTechRecordState",
            "id": "interface-VehicleTechRecordState-a4777f16ef0e96830914419a24eacd6821efd3aaa14da7ce19778315cb977252540d598958057539bd5300f7794750fee94f89d747be4cf6c45fc9dde3a9a3fb-2",
            "file": "archive/src/app/store/state/VehicleTechRecordModel.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { VehicleTechRecordModel } from '@app/models/vehicle-tech-record.model';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport interface VehicleTechRecordState {\r\n  vehicleTechRecordModel: VehicleTechRecordModel[];\r\n  selectedVehicleTechRecord: VehicleTechRecordModel;\r\n  viewState: VIEW_STATE;\r\n}\r\n\r\nexport const initialVehicleTechRecordModelState: VehicleTechRecordState = {\r\n  vehicleTechRecordModel: null,\r\n  selectedVehicleTechRecord: null,\r\n  viewState: VIEW_STATE.VIEW_ONLY\r\n};\r\n",
            "properties": [
                {
                    "name": "selectedVehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "vehicleTechRecordModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "VehicleTechRecordState-2"
        },
        {
            "name": "VehicleTestResultUpdate",
            "id": "interface-VehicleTestResultUpdate-78f76d121efe8e22534de493bf7461f552b5810f7d0c692cf016ff1d489b175824a98b4d3f949b96bbc93c30adfe8fc564633ef214edb3902e631cfb5c45e2d3",
            "file": "archive/src/app/models/vehicle-test-result-update.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserDetails } from '@app/models/user-details';\nimport { TestResultModel } from '@app/models/test-result.model';\n\nexport interface VehicleTestResultUpdate {\n  testResult: TestResultModel;\n  msUserDetails: UserDetails;\n}\n",
            "properties": [
                {
                    "name": "msUserDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDetails",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "testResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VrmModel",
            "id": "interface-VrmModel-d4a218821af32bfd5c4e7b207884844c669ba7fadf50f4ecd43af39a6a5ae2f516d1f4a510654cb41365dc26bef3f1b188b92b2e9c85d5c4bf0dd6965d5e49be",
            "file": "src/app/models/vrm.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface VrmModel {\n  vrm: string;\n  isPrimary: boolean;\n}\n",
            "properties": [
                {
                    "name": "isPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "vrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VrmModel",
            "id": "interface-VrmModel-d4a218821af32bfd5c4e7b207884844c669ba7fadf50f4ecd43af39a6a5ae2f516d1f4a510654cb41365dc26bef3f1b188b92b2e9c85d5c4bf0dd6965d5e49be-1",
            "file": "archive/src/app/models/vrm.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface VrmModel {\n  vrm: string;\n  isPrimary: boolean;\n}\n",
            "properties": [
                {
                    "name": "isPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "vrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "VrmModel-1"
        },
        {
            "name": "Weights",
            "id": "interface-Weights-ff8de35ff0935deeec42d884f9b5dc3053e51031bfbf416196e2eb5ab1a99c1133bb1e26ff4523940130f22d7bfe76d66228ab0a5847007dbea15612fde1459e",
            "file": "src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from './adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "designWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "eecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "gbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "kerbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "ladenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Weights",
            "id": "interface-Weights-6fce3ece5596bfff023675c88426bc2874a37eb42a550fd823a2fd223b77a6246798eb408b06bca34d0229bc42a8c45bd16a615ef73bbc6013ebf313abc3e40c-1",
            "file": "archive/src/app/models/tech-record.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AdrDetails } from '@app/models/adr-details';\nimport { BodyType } from './body-type';\n\nexport interface DDA {\n  certificateIssued: boolean;\n  wheelchairCapacity: number;\n  wheelchairFittings: number;\n  wheelchairLiftPresent: string;\n  wheelchairLiftInformation: string;\n  wheelchairRampPresent: boolean;\n  wheelchairRampInformation: string;\n  minEmergencyExits: string;\n  outswing: string;\n  ddaSchedules: string;\n  seatbeltsFitted: string;\n  ddaNotes: string;\n}\nexport interface Applicant extends AddressInformation {\n  name: string;\n}\n\nexport interface Microfilm {\n  microfilmDocumentType: string;\n  microfilmRollNumber: string;\n  microfilmSerialNumber: string;\n}\n\nexport interface Plate {\n  plateSerialNumber: string;\n  plateIssueDate: string;\n  plateReasonForIssue: string;\n  plateIssuer: string;\n  toEmailAddress: string;\n}\n\nexport interface AuthIntoService {\n  cocIssueDate: string;\n  dateReceived: string;\n  datePending: string;\n  dateAuthorised: string;\n  dateRejected: string;\n}\n\nexport interface AxleSpacing {\n  axles: string;\n  value: number;\n}\n\nexport interface Dimensions {\n  length: number;\n  height: number;\n  width: number;\n  axleSpacing: AxleSpacing[];\n}\n\nexport interface Brakes {\n  brakeCodeOriginal: string;\n  brakeCode: string;\n  dataTrBrakeOne: string;\n  dataTrBrakeTwo: string;\n  dataTrBrakeThree: string;\n  retarderBrakeOne: string;\n  retarderBrakeTwo: string;\n  dtpNumber: string;\n  brakeForceWheelsNotLocked: BrakeForceWheelsNotLocked;\n  brakeForceWheelsUpToHalfLocked: BrakeForceWheelsUpToHalfLocked;\n  loadSensingValve: boolean;\n  antilockBrakingSystem: boolean;\n}\n\nexport interface BrakeForceWheelsNotLocked {\n  serviceBrakeForceA: number;\n  secondaryBrakeForceA: number;\n  parkingBrakeForceA: number;\n}\n\nexport interface BrakeForceWheelsUpToHalfLocked {\n  serviceBrakeForceB: number;\n  secondaryBrakeForceB: number;\n  parkingBrakeForceB: number;\n}\n\nexport interface Weights {\n  kerbWeight: number;\n  ladenWeight: number;\n  gbWeight: number;\n  eecWeight: number;\n  designWeight: number;\n}\n\nexport interface Tyres {\n  tyreSize: string;\n  plyRating: string;\n  fitmentCode: string;\n  dataTrAxles: number;\n  speedCategorySymbol: string;\n  tyreCode: number;\n}\n\nexport interface AxleBrakes {\n  brakeActuator: number;\n  leverLength: number;\n  springBrakeParking: boolean;\n}\n\nexport interface Axle {\n  axleNumber: number;\n  parkingBrakeMrk: boolean;\n  weights: Weights;\n  tyres: Tyres;\n  brakes: AxleBrakes;\n}\n\nexport interface AddressInformation {\n  address1: string;\n  address2: string;\n  postTown: string;\n  address3: string;\n  postCode: string;\n  emailAddress: string;\n  telephoneNumber: string;\n}\n\nexport interface PurchaserDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  purchaserNotes: string;\n}\n\nexport interface ManufacturerDetails extends AddressInformation {\n  name: string;\n  faxNumber: string;\n  manufacturerNotes: string;\n}\n\nexport interface LettersOfAuth {\n  letterType: string;\n  letterDateRequested: string;\n  letterContents: string;\n}\n\nexport interface TechRecord {\n  createdAt: string;\n  lastUpdatedAt: string;\n  recordCompleteness: string;\n  make: string;\n  model: string;\n  functionCode: string;\n  fuelPropulsionSystem: string;\n  offRoad: boolean;\n  numberOfWheelsDriven: number;\n  euVehicleCategory: string;\n  emissionsLimit: number;\n  departmentalVehicleMarker: boolean;\n  alterationMarker: boolean;\n  approvalType: string;\n  approvalTypeNumber: string;\n  variantNumber: string;\n  variantVersionNumber: string;\n  grossEecWeight: number;\n  trainEecWeight: number;\n  maxTrainEecWeight: number;\n  applicantDetails: Applicant;\n  microfilm: Microfilm;\n  plates: Plate[];\n  chassisMake: string;\n  chassisModel: string;\n  bodyMake: string;\n  bodyModel: string;\n  bodyType: BodyType;\n  modelLiteral?: string;\n  manufactureYear: number;\n  regnDate: string;\n  firstUseDate: string;\n  coifDate: string;\n  ntaNumber: string;\n  coifSerialNumber: string;\n  coifCertifierName: string;\n  conversionRefNo: string;\n  seatsLowerDeck: number;\n  seatsUpperDeck: number;\n  standingCapacity: number;\n  speedRestriction: number;\n  speedLimiterMrk: boolean;\n  tachoExemptMrk: boolean;\n  dispensations: string;\n  remarks: string;\n  reasonForCreation: string;\n  statusCode: string;\n  unladenWeight: number;\n  grossKerbWeight: number;\n  grossLadenWeight: number;\n  grossGbWeight: number;\n  grossDesignWeight: number;\n  trainGbWeight: number;\n  trainDesignWeight: number;\n  maxTrainGbWeight: number;\n  maxTrainDesignWeight: number;\n  maxLoadOnCoupling: number;\n  tyreUseCode: string;\n  roadFriendly: boolean;\n  drawbarCouplingFitted: boolean;\n  euroStandard: string;\n  suspensionType: string;\n  couplingType: string;\n  dimensions: Dimensions;\n  frontAxleTo5thWheelMin: number;\n  frontAxleTo5thWheelMax: number;\n  frontAxleTo5thWheelCouplingMin: number;\n  frontAxleTo5thWheelCouplingMax: number;\n  frontAxleToRearAxle: number;\n  rearAxleToRearTrl: number;\n  couplingCenterToRearAxleMin: number;\n  couplingCenterToRearAxleMax: number;\n  couplingCenterToRearTrlMin: number;\n  couplingCenterToRearTrlMax: number;\n  centreOfRearmostAxleToRearOfTrl: number;\n  notes: string;\n  noOfAxles: number;\n  brakeCode: string;\n  adrDetails?: AdrDetails;\n  createdByName: string;\n  createdById: string;\n  lastUpdatedByName: string;\n  lastUpdatedById: string;\n  updateType: string;\n  vehicleClass: BodyType;\n  vehicleSubclass: string[];\n  vehicleType: string;\n  vehicleSize: string;\n  numberOfSeatbelts: string;\n  seatbeltInstallationApprovalDate: string;\n  vehicleConfiguration: string;\n  brakes: Brakes;\n  axles: Axle[];\n  purchaserDetails: PurchaserDetails;\n  manufacturerDetails: ManufacturerDetails;\n  authIntoService: AuthIntoService;\n  lettersOfAuth: LettersOfAuth;\n  frameDescription: string;\n  dda: DDA;\n}\n",
            "properties": [
                {
                    "name": "designWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "eecWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "gbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "kerbWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "ladenWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Weights-1"
        }
    ],
    "injectables": [
        {
            "name": "AppConfig",
            "id": "injectable-AppConfig-f66b61d809de549fa18c731f124a57e976314db7b51758e82845106ebce46fb616710af82539d4cd301719098b2b6dbed13f9fdbcd22cbb798ba53465f622c38",
            "file": "archive/src/app/app.config.ts",
            "properties": [
                {
                    "name": "_settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAppConfig",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "load",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<IAppConfig>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport configJsonDeploy from './../assets/config/config.deploy.json';\nimport configJsonDev from './../assets/config/config.dev.json';\nimport { IAppConfig } from './models/app-config.model';\nimport { createConfig } from '../assets/config';\n\n@Injectable()\nexport class AppConfig {\n  private _settings: IAppConfig;\n  constructor(private http: HttpClient) {}\n  load(): Promise<IAppConfig> {\n    this._settings = isDevMode() ? createConfig(configJsonDev) : createConfig(configJsonDeploy);\n\n    return Promise.resolve(this._settings);\n  }\n\n  get settings(): IAppConfig {\n    return this._settings;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "settings": {
                    "name": "settings",
                    "getSignature": {
                        "name": "settings",
                        "type": "",
                        "returnType": "IAppConfig",
                        "line": 18
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "AppFormEffects",
            "id": "injectable-AppFormEffects-e3db9e5715a43efee2e47815f0d346a72802d3910bac0886b2a10bfdb36bdafbc5139321e3a98da6e85614be69c84bc3b6fdf62704ea32c29bef205e842a4743",
            "file": "archive/src/app/store/effects/app-form.effects.ts",
            "properties": [
                {
                    "name": "setAppFormPristine$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<SetViewState>(EVehicleTechRecordActions.SetViewState),\n    filter((action: SetViewState): boolean => action.viewState === VIEW_STATE.VIEW_ONLY),\n    switchMap(() => {\n      const actions = [];\n      actions.push(new SetAppFormPristine());\n      actions.push(new ClearErrorMessage());\n      return actions;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\n\nimport {\n  SetViewState,\n  EVehicleTechRecordActions\n} from '../actions/VehicleTechRecordModel.actions';\nimport { SetAppFormPristine } from '../actions/app-form-state.actions';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { ClearErrorMessage } from '../actions/Error.actions';\n\n@Injectable()\nexport class AppFormEffects {\n  @Effect()\n  setAppFormPristine$: Observable<Action> = this.actions$.pipe(\n    ofType<SetViewState>(EVehicleTechRecordActions.SetViewState),\n    filter((action: SetViewState): boolean => action.viewState === VIEW_STATE.VIEW_ONLY),\n    switchMap(() => {\n      const actions = [];\n      actions.push(new SetAppFormPristine());\n      actions.push(new ClearErrorMessage());\n      return actions;\n    })\n  );\n\n  constructor(private actions$: Actions) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CustomSerializer",
            "id": "injectable-CustomSerializer-98d85262596be9beb5845805b586dc129a4197c78ab1efc7514a2124190b9aeae36430a7ce9c466e2cef288d7f18c7fbc1b9caba99918e235cfcbb7b09c1f8df",
            "file": "archive/src/app/store/index.ts",
            "properties": [],
            "methods": [
                {
                    "name": "serialize",
                    "args": [
                        {
                            "name": "routerState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RouterStateUrl",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "routerState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Params, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams }\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "ModalEffects",
            "id": "injectable-ModalEffects-0a2edf1c7c8b4110684c529a97e8a174e3986e8f7e81d6abaf2249b85ef1d43cf00edb4aab2eda9eb59f0a89c25e58112cd7da748931b08c2ef89faec50582bd",
            "file": "archive/src/app/modal/modal.effects.ts",
            "properties": [
                {
                    "name": "changeView$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<ChangeView>(EModalStateActions.ChangeView),\n    map((action) => action.urlToRedirect),\n    switchMap((urlToRedirect: string) => {\n      this.router.navigateByUrl(urlToRedirect);\n      return of(undefined);\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "resetModal$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<ResetModal>(EModalStateActions.ResetModal),\n    withLatestFrom(this.store.select(getCurrentModalState)),\n    map(([action, currState]: [ResetAction, ModalState]) => currState),\n    switchMap((modalState: ModalState) => {\n      const actions = [];\n\n      actions.push(new SetAppFormPristine());\n      if (modalState.urlToRedirect) {\n        actions.push(new ChangeView(modalState.urlToRedirect));\n      }\n      return actions;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Action, Store } from '@ngrx/store';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\n\nimport { ChangeView, EModalStateActions, ResetModal } from './modal.actions';\nimport { ModalState } from './modal.reducer';\nimport { SetAppFormPristine } from '../store/actions/app-form-state.actions';\nimport { IAppState } from '@app/store/state/app.state';\nimport { getCurrentModalState } from './modal.selectors';\nimport { ResetAction } from 'ngrx-forms';\n\n@Injectable()\nexport class ModalEffects {\n  @Effect()\n  resetModal$: Observable<Action> = this.actions$.pipe(\n    ofType<ResetModal>(EModalStateActions.ResetModal),\n    withLatestFrom(this.store.select(getCurrentModalState)),\n    map(([action, currState]: [ResetAction, ModalState]) => currState),\n    switchMap((modalState: ModalState) => {\n      const actions = [];\n\n      actions.push(new SetAppFormPristine());\n      if (modalState.urlToRedirect) {\n        actions.push(new ChangeView(modalState.urlToRedirect));\n      }\n      return actions;\n    })\n  );\n\n  @Effect({ dispatch: false })\n  changeView$: Observable<Action> = this.actions$.pipe(\n    ofType<ChangeView>(EModalStateActions.ChangeView),\n    map((action) => action.urlToRedirect),\n    switchMap((urlToRedirect: string) => {\n      this.router.navigateByUrl(urlToRedirect);\n      return of(undefined);\n    })\n  );\n\n  constructor(\n    private store: Store<IAppState>,\n    private actions$: Actions,\n    private router: Router\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PendingChangesService",
            "id": "injectable-PendingChangesService-f91840ffa6434050a8bc40278b7d9615b9a5535310840fc074c23877549fca74c491473ae35fe06b3f16b21c706938c25f5b832a48450fac97ec1f401bd3b335",
            "file": "archive/src/app/shared/pending-changes-service/pending-changes.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "confirm",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PreventLeavePageModalComponent } from '../prevent-page-leave-modal/prevent-leave-page-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PendingChangesService {\n  constructor(private dialog: MatDialog, private router: Router) {}\n\n  confirm(): Observable<boolean> {\n    const destinationLink = window.location.href;\n    setTimeout(() => {\n      window.history.replaceState({}, '', destinationLink);\n      window.history.pushState({}, '', this.router.url);\n    });\n    const dialogRef = this.dialog.open(PreventLeavePageModalComponent, {\n      width: '600px'\n    });\n\n    return dialogRef.afterClosed().pipe(\n      switchMap((res) => (res ? of(true) : of(false))),\n      catchError((err) => of(false))\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RouterEffects",
            "id": "injectable-RouterEffects-12ac7f849204755d0b579cad4646af567c7c20169d47cc2c84b26c6b1c078f9ab938d127cb455437bb513421ea5139d69d5ff6347dbe96b3ebfd1033f9fda884",
            "file": "archive/src/app/store/effects/router.effects.ts",
            "properties": [
                {
                    "name": "navigate$",
                    "defaultValue": "this.actions$.pipe(\r\n    ofType(ROUTER_NAVIGATION),\r\n    withLatestFrom(this.store.select(getErrors)),\r\n    map(([action, errors]: [RouterNavigationAction<RouterStateUrl>, string[]]) => {\r\n      const hasErrors = errors.length > 0;\r\n      if (hasErrors) {\r\n        return {\r\n          params: { hasErrors }\r\n        };\r\n      }\r\n      return { params: undefined };\r\n    }),\r\n    filter(({ params }) => !!params),\r\n    switchMap(({ params }) => {\r\n      const actions = [];\r\n      const { hasErrors } = params;\r\n\r\n      if (hasErrors) {\r\n        actions.push(new ClearErrorMessage());\r\n      }\r\n\r\n      return actions;\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ROUTER_NAVIGATION, RouterNavigationAction } from '@ngrx/router-store';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { map, filter, switchMap, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { IAppState } from '../state/app.state';\r\nimport { RouterStateUrl } from './../index';\r\nimport { ClearErrorMessage } from '../actions/Error.actions';\r\nimport { getErrors } from '../selectors/error.selectors';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n  @Effect()\r\n  navigate$ = this.actions$.pipe(\r\n    ofType(ROUTER_NAVIGATION),\r\n    withLatestFrom(this.store.select(getErrors)),\r\n    map(([action, errors]: [RouterNavigationAction<RouterStateUrl>, string[]]) => {\r\n      const hasErrors = errors.length > 0;\r\n      if (hasErrors) {\r\n        return {\r\n          params: { hasErrors }\r\n        };\r\n      }\r\n      return { params: undefined };\r\n    }),\r\n    filter(({ params }) => !!params),\r\n    switchMap(({ params }) => {\r\n      const actions = [];\r\n      const { hasErrors } = params;\r\n\r\n      if (hasErrors) {\r\n        actions.push(new ClearErrorMessage());\r\n      }\r\n\r\n      return actions;\r\n    })\r\n  );\r\n\r\n  constructor(private store: Store<IAppState>, private actions$: Actions) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TechnicalRecordService",
            "id": "injectable-TechnicalRecordService-e4a42b7fae40282eb5220431a01d53bcc142206e12b29e5617508768fd8f87bb7ce8594b350fe22c02b4055177fc57c4fc29e813c71be70a898965bc22317b3c",
            "file": "src/app/services/technical-record.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getByVIN",
                    "args": [
                        {
                            "name": "vin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<VehicleTechRecordModel[]>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vin",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\nimport { VehicleTechRecordModel } from '../models/vehicle-tech-record.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalRecordService {\n\n  constructor(private http: HttpClient) { }\n\n  getByVIN(vin: string): Observable<VehicleTechRecordModel[]> {\n    const queryStr = `${vin}/tech-records?status=all&metadata=true&searchCriteria=vin`;\n    const url = `${environment.VTM_API_URI}/vehicles/${queryStr}`;\n\n    return this.http\n      .get<VehicleTechRecordModel[]>(\n        url,\n        { responseType: 'json' }\n      )\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        // catchError(this.handleError) // then handle the error\n      );\n\n      // Original implementation from archive/../technical-record-search/technical-record.service.ts:\n      // )\n      // .pipe(\n      //   delayedRetry(),\n      //   shareReplay(),\n      //   finalize(() => this._store.dispatch(new LoadingFalse()))\n      // );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TechnicalRecordService",
            "id": "injectable-TechnicalRecordService-b52f41ef454e1328319d5d335b18ecfa9f7f78a965f71f46bee721b4caedc99499f8e73d446ce548390a57799f08a2949ed772838fd96fd6fe00fa7089967de6-1",
            "file": "archive/src/app/technical-record-search/technical-record.service.ts",
            "properties": [
                {
                    "name": "_apiServer",
                    "defaultValue": "this._appConfig.settings.apiServer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "routes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createTechnicalRecord",
                    "args": [
                        {
                            "name": "techRecord",
                            "type": "VehicleTechRecordEdit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "techRecord",
                            "type": "VehicleTechRecordEdit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadDocument",
                    "args": [
                        {
                            "name": "params",
                            "type": "DocumentMetaData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "DocumentMetaData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTechnicalRecordsAllStatuses",
                    "args": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchCriteria",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<VehicleTechRecordModel[]>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchCriteria",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateVehicleRecord",
                    "args": [
                        {
                            "name": "params",
                            "type": "UpdateRecordInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<VehicleTechRecordModel>",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "UpdateRecordInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadDocument",
                    "args": [
                        {
                            "name": "params",
                            "type": "DocumentInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "DocumentInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { shareReplay, finalize } from 'rxjs/operators';\n\nimport { AppConfig } from '@app/app.config';\nimport { delayedRetry } from '@app/shared/delayed-retry/delayed-retry';\nimport { IAppState } from '@app/store/state/app.state';\nimport { LoadingTrue, LoadingFalse } from '@app/store/actions/Loader.actions';\nimport { SetErrorMessage, ClearErrorMessage } from './../store/actions/Error.actions';\nimport { DocumentInfo, DocumentMetaData } from '@app/models/document-meta-data';\nimport {\n  VehicleTechRecordModel,\n  VehicleTechRecordEdit,\n  UpdateRecordInfo\n} from '@app/models/vehicle-tech-record.model';\n\n@Injectable({ providedIn: 'root' })\nexport class TechnicalRecordService {\n  private _apiServer = this._appConfig.settings.apiServer;\n  private readonly routes;\n\n  constructor(\n    private httpClient: HttpClient,\n    private _appConfig: AppConfig,\n    private _store: Store<IAppState>\n  ) {\n    this.routes = {\n      techRecordsAllStatuses: (searchIdentifier: string, searchCriteria: string) => {\n        const queryStr = `${searchIdentifier}/tech-records?status=all&metadata=true&searchCriteria=${searchCriteria}`;\n        return `${this._apiServer.APITechnicalRecordServerUri}/vehicles/${queryStr}`;\n      },\n      createTechRecord: (): string => `${this._apiServer.APITechnicalRecordServerUri}/vehicles`,\n      updateVehicleRecord: (vin: string): string =>\n        `${this._apiServer.APITechnicalRecordServerUri}/vehicles/${vin}`\n    };\n  }\n\n  getTechnicalRecordsAllStatuses(\n    searchIdentifier: string,\n    searchCriteria: string\n  ): Observable<VehicleTechRecordModel[]> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    this._store.dispatch(new LoadingTrue());\n\n    let a = this.httpClient.request('GET', \"http://localhost:3005\", {responseType:'json'});\n    a.subscribe(response => {\n      console.log(\"in here\", response);\n   });\n\n    return this.httpClient\n      .get<VehicleTechRecordModel[]>(\n        this.routes.techRecordsAllStatuses(searchIdentifier, searchCriteria),\n        { headers }\n      )\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  createTechnicalRecord(techRecord: VehicleTechRecordEdit): Observable<string> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    this._store.dispatch(new LoadingTrue());\n\n    return this.httpClient\n      .post<VehicleTechRecordEdit>(this.routes.createTechRecord(), techRecord, {\n        headers\n      })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  updateVehicleRecord(params: UpdateRecordInfo): Observable<VehicleTechRecordModel> {\n    const { vehicleRecord, systemNumber, oldStatusCode } = params;\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    this._store.dispatch(new LoadingTrue());\n\n    const route = oldStatusCode\n      ? `${this.routes.updateVehicleRecord(systemNumber)}?oldStatusCode=${oldStatusCode}`\n      : `${this.routes.updateVehicleRecord(systemNumber)}`;\n\n    return this.httpClient\n      .put<VehicleTechRecordModel>(route, vehicleRecord, { headers })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  uploadDocument(params: DocumentInfo) {\n    const { metaName, file } = params;\n    const headers = new HttpHeaders().set('Content-Type', 'application/octet-stream');\n\n    this._store.dispatch(new ClearErrorMessage());\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .put(`${this._apiServer.APIDocumentBlobUri}${metaName}`, file, { headers })\n      .toPromise()\n      .catch((error) => {\n        this._store.dispatch(\n          new SetErrorMessage([\n            `The selected file ${file.name} could not be uploaded - try again`\n          ])\n        );\n        return null;\n      })\n      .finally(() => this._store.dispatch(new LoadingFalse()));\n  }\n\n  downloadDocument(params: DocumentMetaData) {\n    const { metaName, fileName } = params;\n    const headers = new HttpHeaders().set('Accept', '*/*');\n\n    this._store.dispatch(new ClearErrorMessage());\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .get(`${this._apiServer.APIDocumentBlobUri}${metaName}`, {\n        headers,\n        responseType: 'arraybuffer'\n      })\n      .toPromise()\n      .then((response: ArrayBuffer) => {\n        return new Blob([response], { type: 'application/octet-stream' });\n      })\n      .catch((error) => {\n        this._store.dispatch(\n          new SetErrorMessage([\n            `The selected file ${fileName} could not be downloaded - try again`\n          ])\n        );\n        return null;\n      })\n      .finally(() => this._store.dispatch(new LoadingFalse()));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TechnicalRecordService-1"
        },
        {
            "name": "TechnicalRecordValuesMapper",
            "id": "injectable-TechnicalRecordValuesMapper-2fa84cf0559184226b6ada422cee1570f6ab547569c878ba0dbd0581f31dbd6a0c7ca527657095530234917f765c160cc29c3017ac0ca29da5e53d2cac22b621",
            "file": "archive/src/app/technical-record/technical-record-value.mapper.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getSelectedOptions",
                    "args": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapControlValuesToDataValues",
                    "args": [
                        {
                            "name": "vehicleRecord",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VehicleTechRecordEdit",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleRecord",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapToAdrAllowedValues",
                    "args": [
                        {
                            "name": "adrDetails",
                            "type": "AdrDetails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AdrDetails",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "adrDetails",
                            "type": "AdrDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapToAxlesAllowdeValues",
                    "args": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Axle[]",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapToDimensionsAllowedValued",
                    "args": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Dimensions",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapToTechRecordAllowedValues",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TechRecord[]",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "processListUnNo",
                    "args": [
                        {
                            "name": "listUnNno",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "listUnNno",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AdrDetails } from '../models/adr-details';\nimport { Injectable } from '@angular/core';\n\nimport { TechRecord, Axle, Dimensions, AxleSpacing } from '@app/models/tech-record.model';\nimport { VehicleTechRecordEdit } from '@app/models/vehicle-tech-record.model';\nimport { SelectOption } from '@app/models/select-option';\nimport { NOTES, SUBSTANCES, MEMOS } from '@app/app.enums';\nimport { DocumentMetaData } from '../models/document-meta-data';\n\n@Injectable({ providedIn: 'root' })\nexport class TechnicalRecordValuesMapper {\n  constructor() {}\n\n  mapControlValuesToDataValues(vehicleRecord): VehicleTechRecordEdit {\n    vehicleRecord.techRecord = this.mapToTechRecordAllowedValues(vehicleRecord);\n    return vehicleRecord;\n  }\n\n  private mapToTechRecordAllowedValues({ techRecord }: { techRecord: TechRecord }): TechRecord[] {\n    const {\n      axles,\n      axlesWeights,\n      axlesTyres,\n      dimensions,\n      adrDetails,\n      ...techRecordTemp\n    } = techRecord as any;\n\n    techRecordTemp.updateType = undefined;\n    techRecordTemp.axles = this.mapToAxlesAllowdeValues({ axles, axlesWeights, axlesTyres });\n    techRecordTemp.dimensions = this.mapToDimensionsAllowedValued({ dimensions });\n    techRecordTemp.adrDetails = this.mapToAdrAllowedValues(adrDetails);\n    return [techRecordTemp];\n  }\n\n  private mapToAxlesAllowdeValues(params): Axle[] {\n    const { axles, axlesWeights, axlesTyres } = params;\n\n    const axlesTemp: Axle[] =\n      axles &&\n      (axles as any[]).map((axle, i) => {\n        return {\n          axleNumber: axle.axleNumber,\n          parkingBrakeMrk: axle.selected,\n          weights: axlesWeights[i].weights,\n          tyres: axlesTyres[i].tyres\n        } as Axle;\n      });\n\n    return axlesTemp;\n  }\n\n  private mapToDimensionsAllowedValued(params): Dimensions {\n    const { dimensions } = params;\n\n    if (dimensions) {\n      const axlesSpacingTemp: AxleSpacing[] = dimensions.axleSpacing.map(({ axles, value }) => {\n        return { axles, value };\n      });\n\n      dimensions.axleSpacing = axlesSpacingTemp;\n\n      return dimensions;\n    }\n  }\n\n  private mapToAdrAllowedValues(adrDetails: AdrDetails): AdrDetails {\n    if (!adrDetails || !Object.keys(adrDetails).length) {\n      return null;\n    }\n\n    // adr-details component\n    const modelDangerousGoods: SelectOption[] = adrDetails.permittedDangerousGoods as any[];\n    adrDetails.permittedDangerousGoods = this.getSelectedOptions(modelDangerousGoods);\n\n    const notesNumber: SelectOption[] = adrDetails.additionalNotes.number as any[];\n    adrDetails.additionalNotes.number = this.getSelectedOptions(notesNumber);\n\n    const noteRequested: boolean = adrDetails.additionalNotes.guidanceNotes as any;\n    adrDetails.additionalNotes.guidanceNotes = noteRequested ? [NOTES.GUIDANCENOTE] : [];\n\n    const substancePermitted =\n      adrDetails.tank.tankStatement.substancesPermitted === SUBSTANCES.CLASSNUMBER\n        ? SUBSTANCES.CLASSNUMBER_TEXT\n        : adrDetails.tank.tankStatement.substancesPermitted === SUBSTANCES.PERMITTED\n        ? SUBSTANCES.PERMITTED_TEXT\n        : null;\n    adrDetails.tank.tankStatement.substancesPermitted = substancePermitted;\n\n    const memoApplied: boolean = adrDetails.memosApply as any;\n    adrDetails.memosApply = memoApplied ? [MEMOS.MEMOSAPPLY] : [];\n\n    const documentMetaData: DocumentMetaData[] = adrDetails.documents as any[];\n    adrDetails.documents = documentMetaData.map((doc) => doc.metaName);\n\n    const { tankStatement } = adrDetails.tank;\n    const { substanceReferenceSelect: _, ...tankStmt } = tankStatement as any;\n    adrDetails.tank.tankStatement = tankStmt;\n\n    const { productListUnNo } = adrDetails.tank.tankStatement;\n    adrDetails.tank.tankStatement.productListUnNo = this.processListUnNo(productListUnNo);\n\n    adrDetails.weight = adrDetails.weight ? (+adrDetails.weight / 1000).toString() : null;\n\n    return adrDetails;\n  }\n\n  processListUnNo(listUnNno: string[]): string[] {\n    const tempList: string[] = [];\n    listUnNno.map((unNo) => {\n      if (unNo) {\n        tempList.push(unNo);\n      }\n    });\n\n    return tempList;\n  }\n\n  getSelectedOptions(options: SelectOption[]): string[] {\n    return options\n      .filter((option: SelectOption) => option.selected)\n      .map((option: SelectOption) => option.name);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "TechRecordHelperService",
            "id": "injectable-TechRecordHelperService-bab30909fbb2840fc6fe1c2e8bc84bfdf39c4f5b6198f3a77385fa6aa2e5edcb1730688956789d523097da91fd84f3884398e9c7a0e50c373077ed9a9de08062",
            "file": "archive/src/app/technical-record/tech-record-helper.service.ts",
            "properties": [
                {
                    "name": "_noOfAxles",
                    "defaultValue": "new Subject<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "getCompletenessInfoByKey",
                    "args": [
                        {
                            "name": "completeness",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "completeness",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNumberOfAxles",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isArchivedRecord",
                    "args": [
                        {
                            "name": "recordStatus",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recordStatus",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isHgvOrTrlVehicle",
                    "args": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isPsvOrTrlVehicle",
                    "args": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isStandardVehicle",
                    "args": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNumberOfAxles",
                    "args": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { RECORD_STATUS, VEHICLE_TYPES, RECORD_COMPLETENESS } from '@app/app.enums';\n\n@Injectable({ providedIn: 'root' })\nexport class TechRecordHelperService {\n  _noOfAxles = new Subject<number>();\n\n  constructor() {}\n\n  isStandardVehicle(vehicleType: string): boolean {\n    return (\n      VEHICLE_TYPES.HGV === vehicleType ||\n      VEHICLE_TYPES.TRL === vehicleType ||\n      VEHICLE_TYPES.PSV === vehicleType\n    );\n  }\n\n  isHgvOrTrlVehicle(vehicleType: string): boolean {\n    return VEHICLE_TYPES.HGV === vehicleType || VEHICLE_TYPES.TRL === vehicleType;\n  }\n\n  isPsvOrTrlVehicle(vehicleType: string): boolean {\n    return VEHICLE_TYPES.PSV === vehicleType || VEHICLE_TYPES.TRL === vehicleType;\n  }\n\n  isArchivedRecord(recordStatus: string): boolean {\n    return RECORD_STATUS.ARCHIVED === recordStatus;\n  }\n\n  setNumberOfAxles(numOfAxles: number): void {\n    this._noOfAxles.next(numOfAxles);\n  }\n\n  getNumberOfAxles(): Observable<number> {\n    return this._noOfAxles.asObservable();\n  }\n\n  getCompletenessInfoByKey(completeness: string): string {\n    const completenessKey = Object.keys(RECORD_COMPLETENESS).find(\n      (name) => name === completeness\n    );\n\n    return RECORD_COMPLETENESS[completenessKey];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "TestRecordMapper",
            "id": "injectable-TestRecordMapper-c3b818d6911b17c7ebcf6207b166cc83092472e866904b03c24f7bedb6ba2234785de56aa3d1a7f4a78f7fed6ceaab0e38f5ec3e6ba2bdbf986dc7262b8dddcd",
            "file": "archive/src/app/test-record/test-record.mapper.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCountryOfRegistrationCode",
                    "args": [
                        {
                            "name": "countryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "countryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDateTime",
                    "args": [
                        {
                            "name": "dateValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReasonsForAbandoning",
                    "args": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testTypeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testTypeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReasonsForAbandoningValue",
                    "args": [
                        {
                            "name": "currentValue",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "reasonsForAbandoning",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentValue",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reasonsForAbandoning",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestStationType",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestTypeApplicable",
                    "args": [
                        {
                            "name": "sectionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sectionName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestTypeEnums",
                    "args": [
                        {
                            "name": "applicableEnum",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "applicableEnum",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapFormValues",
                    "args": [
                        {
                            "name": "testResultFormData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testResultObject",
                            "type": "TestRecordTestType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TestResultModel",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultFormData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testResultObject",
                            "type": "TestRecordTestType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport {\n  REASON_FOR_ABANDONING_HGV_TRL,\n  REASON_FOR_ABANDONING_PSV,\n  REASON_FOR_ABANDONING_TIR,\n  TEST_STATION_TYPE\n} from '@app/test-record/test-record.enums';\nimport { TestRecordTestType } from '@app/models/test-record-test-type';\nimport { TestType } from '@app/models/test.type';\nimport { COUNTRY_OF_REGISTRATION } from '@app/app.enums';\nimport {\n  ANNIVERSARY_DATE_APPLICABLE,\n  CERTIFICATE_APPLICABLE,\n  DEFECTS_APPLICABLE,\n  EMISSION_DETAILS_APPLICABLE,\n  EXPIRY_DATE_APPLICABLE,\n  SEAT_BELT_APPLICABLE,\n  SPECIALIST_CERTIFICATE_APPLICABLE,\n  SPECIALIST_COIF_APPLICABLE,\n  SPECIALIST_TEST_APPLICABLE\n} from '@app/test-record/test-types-applicable.enum';\n\nexport interface TestTypesApplicable {\n  seatBeltApplicable: {};\n  defectsApplicable: {};\n  emissionDetailsApplicable: {};\n  anniversaryDateApplicable: {};\n  expiryDateApplicable: {};\n  certificateApplicable: {};\n  specialistTestApplicable: {};\n  specialistCOIFApplicable: {};\n  specialistCertificateApplicable: {};\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TestRecordMapper {\n  getTestStationType(type: string) {\n    switch (type) {\n      case 'atf':\n        return TEST_STATION_TYPE.ATF;\n        break;\n      case 'gvts':\n        return TEST_STATION_TYPE.GVTS;\n        break;\n      case 'hq':\n        return TEST_STATION_TYPE.HQ;\n        break;\n    }\n  }\n\n  getReasonsForAbandoning(vehicleType: string, testTypeId: string) {\n    const tirTestTypeIds = { 49: 'TIR test', 56: 'Paid TIR retest', 57: 'Free TIR retest' };\n\n    if (Object.keys(tirTestTypeIds).includes(testTypeId)) {\n      return Object.values(REASON_FOR_ABANDONING_TIR);\n    } else {\n      switch (vehicleType) {\n        case 'trl':\n        case 'hgv':\n          return Object.values(REASON_FOR_ABANDONING_HGV_TRL);\n          break;\n        case 'psv':\n          return Object.values(REASON_FOR_ABANDONING_PSV);\n          break;\n      }\n    }\n  }\n\n  getTestTypeEnums(applicableEnum: string[]) {\n    return applicableEnum.reduce(\n      (val, testTypeId) => ({ ...val, [testTypeId]: 'applicable' }),\n      {}\n    );\n  }\n\n  getTestTypeApplicable(sectionName: string) {\n    const testTypesApplicable = {\n      seatBeltApplicable: this.getTestTypeEnums(Object.values(SEAT_BELT_APPLICABLE)),\n      defectsApplicable: this.getTestTypeEnums(Object.values(DEFECTS_APPLICABLE)),\n      emissionDetailsApplicable: this.getTestTypeEnums(\n        Object.values(EMISSION_DETAILS_APPLICABLE)\n      ),\n      anniversaryDateApplicable: this.getTestTypeEnums(\n        Object.values(ANNIVERSARY_DATE_APPLICABLE)\n      ),\n      expiryDateApplicable: this.getTestTypeEnums(Object.values(EXPIRY_DATE_APPLICABLE)),\n      certificateApplicable: this.getTestTypeEnums(Object.values(CERTIFICATE_APPLICABLE)),\n      specialistTestApplicable: this.getTestTypeEnums(Object.values(SPECIALIST_TEST_APPLICABLE)),\n      specialistCOIFApplicable: this.getTestTypeEnums(Object.values(SPECIALIST_COIF_APPLICABLE)),\n      specialistCertificateApplicable: this.getTestTypeEnums(\n        Object.values(SPECIALIST_CERTIFICATE_APPLICABLE)\n      )\n    };\n\n    return testTypesApplicable[sectionName];\n  }\n\n  getCountryOfRegistrationCode(countryName: string) {\n    const countryCode = Object.keys(COUNTRY_OF_REGISTRATION)[\n      Object.values(COUNTRY_OF_REGISTRATION).indexOf(countryName)\n    ];\n    return !!countryCode ? countryCode : '';\n  }\n\n  getDateTime(dateValue: string, timeValue: string) {\n    const dateToSave = new Date(dateValue);\n    const timeToSave = new Date(timeValue);\n\n    dateToSave.setUTCMinutes(timeToSave.getUTCMinutes());\n    dateToSave.setUTCHours(timeToSave.getUTCHours());\n\n    return !!dateToSave.toJSON() ? dateToSave.toISOString() : '';\n  }\n\n  getReasonsForAbandoningValue(currentValue: string[], reasonsForAbandoning: string[]): string {\n    const selectedReasons = reasonsForAbandoning.map((elem, index) => {\n      return !!currentValue ? (currentValue[index] ? elem : '') : '';\n    });\n    return selectedReasons.length > 1 ? selectedReasons.filter((item) => item).join(',') : '';\n  }\n\n  mapFormValues(testResultFormData, testResultObject: TestRecordTestType): TestResultModel {\n    const testResultMapped: TestResultModel = testResultObject.testRecord;\n    const testTypeMapped: TestType = testResultObject.testType;\n    const testTypesApplicable = {\n      seatBeltApplicable: this.getTestTypeApplicable('seatBeltApplicable'),\n      defectsApplicable: this.getTestTypeApplicable('defectsApplicable'),\n      emissionDetailsApplicable: this.getTestTypeApplicable('emissionDetailsApplicable'),\n      anniversaryDateApplicable: this.getTestTypeApplicable('anniversaryDateApplicable'),\n      expiryDateApplicable: this.getTestTypeApplicable('expiryDateApplicable'),\n      certificateApplicable: this.getTestTypeApplicable('certificateApplicable')\n    };\n\n    const mapPreparer = !!testResultFormData.preparer\n      ? testResultFormData.preparer.match(/\\((.*)\\)/)\n      : '';\n    const mapTestStation = !!testResultFormData.testStationNameNumber\n      ? testResultFormData.testStationNameNumber.match(/\\((.*)\\)/)\n      : '';\n\n    testResultMapped.countryOfRegistration = this.getCountryOfRegistrationCode(\n      testResultFormData.countryOfRegistration\n    );\n    testResultMapped.euVehicleCategory = testResultFormData.euVehicleCategory;\n    testResultMapped.odometerReading = testResultFormData.odometerReading;\n    testResultMapped.odometerReadingUnits = testResultFormData.odometerReadingUnits;\n    testResultMapped.preparerName = !!testResultFormData.preparer\n      ? testResultFormData.preparer.split('(')[0]\n      : '';\n    testResultMapped.preparerId = !!mapPreparer ? mapPreparer.pop() : '';\n\n    testResultMapped.testStationName = !!testResultFormData.testStationNameNumber\n      ? testResultFormData.testStationNameNumber.split('(')[0]\n      : '';\n    testResultMapped.testStationPNumber = !!mapTestStation ? mapTestStation.pop() : '';\n    testResultMapped.testStationType = !!testResultFormData.testStationType\n      ? testResultFormData.testStationType.toLowerCase()\n      : '';\n    testResultMapped.testerName = testResultFormData.testerName;\n    testResultMapped.testerEmailAddress = testResultFormData.testerEmailAddress;\n    testTypeMapped.seatbeltInstallationCheckDate =\n      testResultFormData.testType.seatbeltInstallationCheckDate === 'Yes';\n    testTypeMapped.numberOfSeatbeltsFitted = testResultFormData.testType.numberOfSeatbeltsFitted;\n    testTypeMapped.lastSeatbeltInstallationCheckDate =\n      testResultFormData.testType.lastSeatbeltInstallationCheckDate;\n    testTypeMapped.emissionStandard = testResultFormData.testType.emissionStandard;\n    testTypeMapped.smokeTestKLimitApplied = testResultFormData.testType.smokeTestKLimitApplied;\n    testTypeMapped.fuelType = testResultFormData.testType.fuelType;\n\n    if (\n      !!testTypeMapped.modType &&\n      testTypesApplicable.emissionDetailsApplicable[testTypeMapped.testTypeId]\n    ) {\n      testTypeMapped.modType.code = !!testResultFormData.testType.modType.length\n        ? testResultFormData.testType.modType.split('-')[0].trim()\n        : testTypeMapped.modType.code;\n      testTypeMapped.modType.description = !!testResultFormData.testType.modType.length\n        ? testResultFormData.testType.modType.split('-')[1].trim()\n        : testTypeMapped.modType.description;\n    }\n    testTypeMapped.modificationTypeUsed = testResultFormData.testType.modificationTypeUsed;\n    testTypeMapped.particulateTrapFitted = testResultFormData.testType.particulateTrapFitted;\n    testTypeMapped.particulateTrapSerialNumber =\n      testResultFormData.testType.particulateTrapSerialNumber;\n    testTypeMapped.additionalNotesRecorded = testResultFormData.testType.additionalNotesRecorded;\n    testTypeMapped.testResult = testResultFormData.testType.testResult;\n    testTypeMapped.reasonForAbandoning = this.getReasonsForAbandoningValue(\n      testResultFormData.testType.reasonForAbandoning,\n      this.getReasonsForAbandoning(testResultMapped.vehicleType, testTypeMapped.testTypeId)\n    );\n    testTypeMapped.additionalCommentsForAbandon =\n      testResultFormData.testType.additionalCommentsForAbandon;\n    testTypeMapped.certificateNumber = testResultFormData.testType.certificateNumber;\n    testTypeMapped.testExpiryDate = testResultFormData.testType.testExpiryDate;\n    testTypeMapped.testAnniversaryDate = testResultFormData.testType.testAnniversaryDate;\n    testTypeMapped.testTypeStartTimestamp = this.getDateTime(\n      testResultFormData.testType.testTypeEndTimestampDate,\n      testResultFormData.testType.testTypeStartTimestamp\n    );\n    testTypeMapped.testTypeEndTimestamp = this.getDateTime(\n      testResultFormData.testType.testTypeEndTimestampDate,\n      testResultFormData.testType.testTypeEndTimestampTime\n    );\n\n    if (!!testTypeMapped.prohibitionIssued) {\n      testTypeMapped.prohibitionIssued = testResultFormData.prohibitionIssued;\n    }\n\n    if (!testTypesApplicable.seatBeltApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.seatbeltInstallationCheckDate = undefined;\n      testTypeMapped.numberOfSeatbeltsFitted = undefined;\n      testTypeMapped.lastSeatbeltInstallationCheckDate = undefined;\n    }\n\n    if (!testTypesApplicable.emissionDetailsApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.emissionStandard = undefined;\n      testTypeMapped.smokeTestKLimitApplied = undefined;\n      testTypeMapped.fuelType = undefined;\n      testTypeMapped.modType = undefined;\n      testTypeMapped.modificationTypeUsed = undefined;\n      testTypeMapped.particulateTrapFitted = undefined;\n      testTypeMapped.particulateTrapSerialNumber = undefined;\n      testTypeMapped.testExpiryDate = undefined;\n      testResultMapped.testExpiryDate = undefined;\n    }\n\n    if (!testTypesApplicable.anniversaryDateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.testAnniversaryDate = undefined;\n    } else {\n      testTypeMapped.testAnniversaryDate = null;\n    }\n\n    if (!testTypesApplicable.expiryDateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.testExpiryDate = undefined;\n    }\n\n    if (!testTypesApplicable.certificateApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.certificateNumber = undefined;\n    }\n\n    if (!!testTypesApplicable.defectsApplicable[testTypeMapped.testTypeId]) {\n      testTypeMapped.defects = undefined;\n    } else {\n      testTypeMapped.prohibitionIssued = undefined;\n    }\n\n    switch (testResultMapped.vehicleType) {\n      case 'psv':\n        testResultMapped.trailerId = undefined;\n        testResultMapped.firstUseDate = undefined;\n        break;\n      case 'hgv':\n        testResultMapped.trailerId = undefined;\n        testResultMapped.firstUseDate = undefined;\n        testResultMapped.vehicleSize = undefined;\n        testResultMapped.numberOfSeats = undefined;\n        break;\n      case 'trl':\n        testResultMapped.vrm = undefined;\n        testResultMapped.vehicleId = undefined;\n        testResultMapped.odometerReading = undefined;\n        testResultMapped.odometerReadingUnits = undefined;\n        testResultMapped.regnDate = undefined;\n        testResultMapped.vehicleSize = undefined;\n        testResultMapped.numberOfSeats = undefined;\n        break;\n    }\n\n    testResultMapped.deletionFlag = undefined;\n    testResultMapped.testHistory = undefined;\n\n    testResultMapped.testTypes.forEach((tType, index) => {\n      if (tType.testNumber === testTypeMapped.testNumber) {\n        testResultMapped.testTypes[index] = testTypeMapped;\n      }\n    });\n\n    return testResultMapped;\n  }\n\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 280
            },
            "type": "injectable"
        },
        {
            "name": "TestResultGuard",
            "id": "injectable-TestResultGuard-fe4e38862184365d7bdce2d573e32d7d492a6d43d863070336262d0b2e515c806c6fa93d43d00027b5e80273166769d88c788c0cd299b1f51826f0a1ed787eab",
            "file": "archive/src/app/test-record/guards/test-result.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasSelectedTestResult",
                    "args": [
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "populateStoreWithDataFromApi",
                    "args": [
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport { TestResultService } from '@app/technical-record-search/test-result.service';\nimport { getSelectedVehicleTestResultModel } from '@app/store/selectors/VehicleTestResultModel.selectors';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { SetSelectedTestResultModelSuccess } from '@app/store/actions/VehicleTestResultModel.actions';\n\n@Injectable({ providedIn: 'root' })\nexport class TestResultGuard {\n  constructor(private store: Store<IAppState>, private testResultService: TestResultService) {}\n\n  hasSelectedTestResult(testResultId: string): Observable<boolean> {\n    return this.store.pipe(\n      select(getSelectedVehicleTestResultModel),\n      map((testResult) => {\n        return !!testResult ? testResultId === testResult.testResultId : !!testResult;\n      })\n    );\n  }\n\n  populateStoreWithDataFromApi(testResultId: string, systemNumber: string): Observable<boolean> {\n    return this.testResultService.getTestResultById(systemNumber, testResultId).pipe(\n      tap((testResult: TestResultModel) => {\n        this.store.dispatch(new SetSelectedTestResultModelSuccess(testResult));\n      }),\n      map(Boolean),\n      catchError((_) => {\n        return of(false);\n      })\n    );\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.hasSelectedTestResult(route.queryParams.testResultId).pipe(\n      switchMap((inStore) => {\n        if (inStore) {\n          return of(inStore);\n        }\n        return this.populateStoreWithDataFromApi(\n          route.queryParams.testResultId,\n          route.queryParams.systemNumber\n        );\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TestResultService",
            "id": "injectable-TestResultService-cecb1e770be4da2378447317072e28754a9bc1550fe8048535d16e47c556defc343a5a4793c0a18f30c82b54d82b6cb9eb6589d1970b0b350b8a92b28c6eb4f8",
            "file": "archive/src/app/technical-record-search/test-result.service.ts",
            "properties": [
                {
                    "name": "_apiServer",
                    "defaultValue": "this._appConfig.settings.apiServer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "routes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "downloadCertificate",
                    "args": [
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPreparers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Preparer[]>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTestResultById",
                    "args": [
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TestResultModel>",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testResultId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestResults",
                    "args": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TestResultModel>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestStations",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TestStation[]>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTestTypeCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TestTypeCategory[]>",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateTestResults",
                    "args": [
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testResult",
                            "type": "VehicleTestResultUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TestResultModel>",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "systemNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testResult",
                            "type": "VehicleTestResultUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AppConfig } from '@app/app.config';\nimport { Observable } from 'rxjs';\nimport { delayedRetry } from '@app/shared/delayed-retry/delayed-retry';\nimport { shareReplay, finalize } from 'rxjs/operators';\nimport { IAppState } from '@app/store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { LoadingTrue, LoadingFalse } from '@app/store/actions/Loader.actions';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { Preparer } from '@app/models/preparer.ts';\nimport { TestStation } from '@app/models/test-station';\nimport { VehicleTestResultUpdate } from '@app/models/vehicle-test-result-update';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestResultService {\n  private _apiServer = this._appConfig.settings.apiServer;\n  private readonly routes;\n\n  constructor(\n    private httpClient: HttpClient,\n    private _store: Store<IAppState>,\n    private _appConfig: AppConfig\n  ) {\n    this.routes = {\n      testResults: (searchIdentifier: string) =>\n        `${this._apiServer.APITestResultServerUri}/test-results/${searchIdentifier}`,\n      preparers: () => `${this._apiServer.APIPreparersServerUri}/preparers`,\n      testStation: () => `${this._apiServer.APITestStationsServerUri}/test-stations`,\n      updateTestResults: (systemNumber: string) =>\n        `${this._apiServer.APITestResultServerUri}/test-results/${systemNumber}`,\n      testResultById: (systemNumber: string, testResultId: string) =>\n        `${this._apiServer.APITestResultServerUri}/test-results/${systemNumber}?testResultId=${testResultId}&version=all`,\n      testTypeCategories: () => `${this._apiServer.APITestTypesServerUri}/test-types`\n    };\n  }\n\n  getTestResults(searchIdentifier: string): Observable<TestResultModel> {\n    this._store.dispatch(new LoadingTrue());\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.httpClient\n      .get<TestResultModel[]>(this.routes.testResults(searchIdentifier), { headers })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  getPreparers(): Observable<Preparer[]> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .get<Preparer[]>(this.routes.preparers(), { headers })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  getTestStations(): Observable<TestStation[]> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .get<TestStation[]>(this.routes.testStation(), { headers })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  updateTestResults(\n    systemNumber: string,\n    testResult: VehicleTestResultUpdate\n  ): Observable<TestResultModel> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .put<TestResultModel>(this.routes.updateTestResults(systemNumber), testResult, {\n        headers\n      })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  getTestResultById(systemNumber: string, testResultId: string): Observable<TestResultModel> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .get<TestResultModel>(this.routes.testResultById(systemNumber, testResultId), {\n        headers\n      })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n\n  downloadCertificate(fileName: string) {\n    const headers = new HttpHeaders().set('Accept', '*/*');\n    return this.httpClient.get(`${this._apiServer.APICertificatesBlobUri}${fileName}`, {\n      headers,\n      responseType: 'arraybuffer'\n    });\n  }\n\n  getTestTypeCategories(): Observable<TestTypeCategory[]> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    this._store.dispatch(new LoadingTrue());\n    return this.httpClient\n      .get<TestTypeCategory[]>(this.routes.testTypeCategories(), { headers })\n      .pipe(\n        delayedRetry(),\n        shareReplay(),\n        finalize(() => this._store.dispatch(new LoadingFalse()))\n      );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-0c388abdc94e938a0ddb74178e9faeb53f37bf19cf32765bc92dc1f8f7b85fb065ed391056a83651f288d8f7d0d205190e5bb3a7ed5bdb0eaf9b5ecef4720e02",
            "file": "src/app/user-service.ts",
            "properties": [
                {
                    "name": "_destroying$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUserName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { MsalService, MsalBroadcastService } from '@azure/msal-angular';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { EventMessage, EventType } from '@azure/msal-browser';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService implements OnDestroy {\n  private readonly _destroying$ = new Subject<void>();\n\n  constructor(private msalBroadcastService: MsalBroadcastService, private msal: MsalService) {\n    this.msalBroadcastService.msalSubject$\n      .pipe(\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\n        takeUntil(this._destroying$)\n      )\n      .subscribe((result: any) => {\n        this.setUserName(result.payload.account.name);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._destroying$.next();\n    this._destroying$.complete();\n  }\n\n  setUserName(name: string): void {\n    localStorage.setItem('username', name);\n  }\n\n  getUserName(): string {\n    return localStorage.getItem('username') || '';\n  }\n\n  logOut(): void {\n    this.msal.logout();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "msalBroadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "msalBroadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-3a2e55f1b63a3eee930ea112292e58b3f10bc7348b7e8acba22eea21521ea4b1535a38ce7461581b95aa4e6b6ffd216ac8051c7340e075ebf3dfe6f109c9ee60-1",
            "file": "archive/src/app/app-user.service.ts",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDetails",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "UserDetails",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUser",
                    "args": [
                        {
                            "name": "userProfile",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userProfile",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { UserDetails } from './models/user-details';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  private user: UserDetails;\n\n  constructor() {}\n\n  setUser(userProfile) {\n    this.user = {} as UserDetails;\n    this.user.msOid = userProfile.oid;\n    this.user.msUser = userProfile.unique_name;\n  }\n\n  getUser() {\n    return this.user;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UserService-1"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-0d36cbc47997460d15d827722f850ba3c13aaa1f62553694a44a1923d4c6fc868b561547eaa6711a7b713443e920bdce986c447d69f82a61dec999e894af5e66-2",
            "file": "src/app/user-service/user-service.ts",
            "properties": [
                {
                    "name": "_destroying$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "logIn",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\nimport { EventMessage, EventType } from '@azure/msal-browser';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport * as UserServiceActions from './user-service.actions';\nimport * as UserServiceState from './user-service.reducer';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService implements OnDestroy {\n  private readonly _destroying$ = new Subject<void>();\n\n  constructor(private store: Store, private msalBroadcastService: MsalBroadcastService, private msal: MsalService) {\n\n    this.msalBroadcastService.msalSubject$\n        .pipe(\n            filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\n            takeUntil(this._destroying$)\n        )\n        .subscribe((result: any) => {\n            this.logIn(result.payload.account.name);\n        });\n  }\n\n  ngOnDestroy(): void {\n    this._destroying$.next();\n    this._destroying$.complete();\n  }\n\n  logIn(name: string): void {\n   this.store.dispatch(UserServiceActions.Login({'name': name }));\n  }\n\n  get userName$(): Observable<string> {\n    return this.store.pipe(select(UserServiceState.username))\n  }\n\n  logOut(): void {\n    this.store.dispatch(UserServiceActions.Logout());\n    this.msal.logout();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalBroadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalBroadcastService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msal",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userName$": {
                    "name": "userName$",
                    "getSignature": {
                        "name": "userName$",
                        "type": "",
                        "returnType": "Observable<string>",
                        "line": 35
                    }
                }
            },
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "UserService-2"
        },
        {
            "name": "ValidationMapper",
            "id": "injectable-ValidationMapper-637532cc4900fb3019981f3ef139a00530e04706f1d6f20551a39469006797513c17cfcb9c5b886f7574bfa9a26533c56f8622d4e89fefa9fe2653f30a4ea933",
            "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts",
            "properties": [
                {
                    "name": "_state",
                    "defaultValue": "new Subject<ValidationState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methods": [
                {
                    "name": "getBatteryTypeValidationStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidationState",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getCurrentState",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ValidationState>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getOtherTypeValidationStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidationState",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getTankTypeValidationStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidationState",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getType",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapVehicleTypeToValidationState",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationState",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "vehicleTypeSelected",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nenum CHECKER {\n  BATTERY = 'battery',\n  TANK = 'tank',\n  NONE = 'na'\n}\n\nexport enum STATUS {\n  MANDATORY = 'MANDATORY',\n  HIDDEN = 'HIDDEN'\n}\n\nexport interface ValidationState {\n  tankDetailsEdit?: STATUS;\n  tankDocuments?: STATUS;\n  tankInspectionsEdit?: STATUS;\n  memoEdit?: STATUS;\n  batteryListApplicableEdit?: STATUS;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ValidationMapper {\n  _state = new Subject<ValidationState>();\n\n  constructor() {}\n\n  vehicleTypeSelected(selectedType: string): void {\n    const selectedState: ValidationState = this.mapVehicleTypeToValidationState(selectedType);\n    this._state.next(selectedState);\n  }\n\n  getCurrentState(): Observable<ValidationState> {\n    return this._state.asObservable();\n  }\n\n  private mapVehicleTypeToValidationState(selectedType: string): ValidationState {\n    const validationStatus = {\n      [CHECKER.BATTERY]: () => this.getBatteryTypeValidationStatus(),\n      [CHECKER.TANK]: () => this.getTankTypeValidationStatus(),\n      [CHECKER.NONE]: () => this.getOtherTypeValidationStatus()\n    };\n\n    return validationStatus[this.getType(selectedType)]();\n  }\n\n  private getType(type: string): string {\n    if (type.trim().includes(CHECKER.BATTERY)) {\n      return CHECKER.BATTERY;\n    }\n\n    if (type.includes(CHECKER.TANK)) {\n      return CHECKER.TANK;\n    }\n\n    return CHECKER.NONE;\n  }\n\n  private getBatteryTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.MANDATORY\n    };\n  }\n\n  private getTankTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.MANDATORY,\n      batteryListApplicableEdit: STATUS.HIDDEN\n    };\n  }\n\n  private getOtherTypeValidationStatus(): ValidationState {\n    return {\n      tankDetailsEdit: STATUS.HIDDEN,\n      tankDocuments: STATUS.HIDDEN,\n      tankInspectionsEdit: STATUS.HIDDEN,\n      memoEdit: STATUS.HIDDEN,\n      batteryListApplicableEdit: STATUS.HIDDEN\n    };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "type": "injectable"
        },
        {
            "name": "VehicleTechRecordModelEffects",
            "id": "injectable-VehicleTechRecordModelEffects-d94aca8acc47de582ab70c21505e6258f718c3620ca88d5fad0d934c9709154608176ec7948bc0ba97aa1d12eb5faaf7e8804e024d833884c1f7d8f19a05f351",
            "file": "archive/src/app/store/effects/VehicleTechRecordModel.effects.ts",
            "properties": [
                {
                    "name": "createTechnicalRecord$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<CreateVehicleTechRecord>(EVehicleTechRecordActions.CreateVehicleTechRecord),\n    switchMap(({ vehicleRecordEdit }) => {\n      // **************************************\n      // TODO: data should be coming from Store. Retrieve via the selector\n      vehicleRecordEdit.msUserDetails = { ...this.loggedUser.getUser() };\n\n      return this.technicalRecordService.createTechnicalRecord(vehicleRecordEdit).pipe(\n        map(\n          () =>\n            new GetVehicleTechRecordHavingStatusAll({\n              searchIdentifier: vehicleRecordEdit.vin,\n              searchCriteria: 'all'\n            })\n        ),\n        catchError(({ error }) => {\n          const errorMessages = error.errors;\n          return [new SetErrorMessage(errorMessages)];\n        })\n      );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "getTechnicalRecords$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<GetVehicleTechRecordHavingStatusAll>(\n      EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll\n    ),\n    map((action) => action.payload),\n    switchMap((searchParams: SearchParams) =>\n      this.technicalRecordService\n        .getTechnicalRecordsAllStatuses(\n          searchParams.searchIdentifier,\n          searchParams.searchCriteria\n        )\n        .pipe(\n          switchMap((vTechRecords: VehicleTechRecordModel[]) =>\n            of(new GetVehicleTechRecordHavingStatusAllSuccess(vTechRecords))\n          ),\n          tap(({ vehicleTechRecords }) => {\n            if (vehicleTechRecords.length > 1) {\n              this.router.navigate(['/multiple-records']);\n            } else {\n              this.store.dispatch(\n                new SetSelectedVehicleTechnicalRecord({\n                  vehicleRecord: vehicleTechRecords[0],\n                  viewState: VIEW_STATE.VIEW_ONLY\n                })\n              );\n            }\n          }),\n          catchError((error) => {\n            const errorMessage = this.getSearchResultError(error);\n            return [new SetErrorMessage([errorMessage])];\n          })\n        )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "setSelectedVehicleTechRecord$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<SetSelectedVehicleTechnicalRecord>(\n      EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord\n    ),\n    switchMap(({ vehicleRecordState }) => {\n      const { vehicleRecord, viewState } = vehicleRecordState;\n      const actions = [];\n\n      actions.push(\n        ...[new SetSelectedVehicleTechRecordSuccess(vehicleRecord), new SetViewState(viewState)]\n      );\n\n      if (vehicleRecord.systemNumber) {\n        actions.push(new GetVehicleTestResultModel(vehicleRecord.systemNumber));\n      }\n\n      return actions;\n    }),\n    tap(() => this.router.navigate(['/technical-record']))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "setVinOnCreate$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<SetVehicleTechRecordOnCreate>(EVehicleTechRecordActions.SetVehicleTechRecordOnCreate),\n    map((action) => action.payload),\n    switchMap((payload) => {\n      let requests: Observable<any>[] = [];\n      const requestErrors = [];\n\n      requests.push(\n        this.technicalRecordService\n          .getTechnicalRecordsAllStatuses(payload.vin, 'all')\n          .pipe(catchError((error) => of(undefined)))\n      );\n\n      if (payload.vType === 'PSV' || payload.vType === 'HGV') {\n        requests.push(\n          this.technicalRecordService\n            .getTechnicalRecordsAllStatuses(payload.vrm, 'all')\n            .pipe(catchError((error) => of(undefined)))\n        );\n      }\n\n      forkJoin(requests).subscribe(([res1, res2]) => {\n        if (res1) {\n          requestErrors.push(CREATE_PAGE_LABELS.CREATE_VIN_LABEL_ERROR);\n        }\n        if (res2) {\n          requestErrors.push(CREATE_PAGE_LABELS.CREATE_VRM_LABEL_ERROR);\n        }\n        if (!res1 && !res2) {\n          const vehicleRecord = this.getVehicleTechRecordOnCreate({\n            vin: payload.vin,\n            vrm: payload.vrm,\n            vType: payload.vType\n          });\n          this.store.dispatch(\n            new SetSelectedVehicleTechnicalRecord({\n              vehicleRecord,\n              viewState: VIEW_STATE.CREATE\n            })\n          );\n        }\n        requests = [];\n        if (requestErrors.length > 0) {\n          this.store.dispatch(new SetErrorMessage(requestErrors));\n        }\n      });\n\n      return of(payload);\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "updateVehicleRecord$",
                    "defaultValue": "this.actions$.pipe(\n    ofType<UpdateVehicleTechRecord>(EVehicleTechRecordActions.UpdateVehicleTechRecord),\n    withLatestFrom(\n      this.store.select(getActiveVehicleTechRecord).pipe(map((f) => f())),\n      this.store.select(getSelectedVehicleTechRecord)\n    ),\n    switchMap(([{ vehicleRecordEdit }, activeVehicleRecord, selectedVehicleRecord]) => {\n      // TODO: data should be coming from Store. Retrieve via the selector\n      vehicleRecordEdit.msUserDetails = { ...this.loggedUser.getUser() };\n\n      const updateParams: UpdateRecordInfo = {\n        vehicleRecord: vehicleRecordEdit,\n        systemNumber: selectedVehicleRecord.systemNumber,\n        oldStatusCode: this.getUpdatedStatus(\n          vehicleRecordEdit.techRecord[0],\n          activeVehicleRecord.techRecord[0]\n        )\n      };\n\n      return this.technicalRecordService.updateVehicleRecord(updateParams).pipe(\n        switchMap((updatedVehicleRecord: VehicleTechRecordModel) => {\n          updatedVehicleRecord.metadata = selectedVehicleRecord.metadata;\n          return [\n            new UpdateVehicleTechRecordSuccess(updatedVehicleRecord),\n            new SetSelectedVehicleTechRecordSuccess(updatedVehicleRecord),\n            new SetViewState(VIEW_STATE.VIEW_ONLY)\n          ];\n        }),\n        catchError(({ error }) => {\n          const errorMessages = error.errors;\n          return [new SetErrorMessage(errorMessages)];\n        })\n      );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 182,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSearchResultError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUpdatedStatus",
                    "args": [
                        {
                            "name": "editedTechRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentTechRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "editedTechRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentTechRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVehicleTechRecordOnCreate",
                    "args": [
                        {
                            "name": "identifier",
                            "type": "VehicleIdentifiers",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VehicleTechRecordModel",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "identifier",
                            "type": "VehicleIdentifiers",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\n\nimport {\n  CreateVehicleTechRecord,\n  EVehicleTechRecordActions,\n  GetVehicleTechRecordHavingStatusAll,\n  GetVehicleTechRecordHavingStatusAllSuccess,\n  SetSelectedVehicleTechnicalRecord,\n  SetSelectedVehicleTechRecordSuccess,\n  SetVehicleTechRecordOnCreate,\n  SetViewState,\n  UpdateVehicleTechRecord,\n  UpdateVehicleTechRecordSuccess\n} from '@app/store/actions/VehicleTechRecordModel.actions';\nimport { GetVehicleTestResultModel } from '../actions/VehicleTestResultModel.actions';\nimport { TechnicalRecordService } from '@app/technical-record-search/technical-record.service';\nimport { VehicleTechRecordState } from '../state/VehicleTechRecordModel.state';\nimport { SetErrorMessage } from '../actions/Error.actions';\nimport {\n  CREATE_PAGE_LABELS,\n  VEHICLE_TECH_RECORD_SEARCH_ERRORS,\n  VIEW_STATE,\n  RECORD_STATUS,\n  VEHICLE_TYPES\n} from '@app/app.enums';\nimport {\n  getSelectedVehicleTechRecord,\n  getActiveVehicleTechRecord\n} from '../selectors/VehicleTechRecordModel.selectors';\nimport {\n  VehicleTechRecordModel,\n  VehicleIdentifiers,\n  UpdateRecordInfo\n} from '@app/models/vehicle-tech-record.model';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { SearchParams } from '@app/models/search-params';\nimport { UserService } from '@app/app-user.service';\nimport { VrmModel } from '@app/models/vrm.model';\n\n@Injectable()\nexport class VehicleTechRecordModelEffects {\n  @Effect()\n  getTechnicalRecords$ = this.actions$.pipe(\n    ofType<GetVehicleTechRecordHavingStatusAll>(\n      EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll\n    ),\n    map((action) => action.payload),\n    switchMap((searchParams: SearchParams) =>\n      this.technicalRecordService\n        .getTechnicalRecordsAllStatuses(\n          searchParams.searchIdentifier,\n          searchParams.searchCriteria\n        )\n        .pipe(\n          switchMap((vTechRecords: VehicleTechRecordModel[]) =>\n            of(new GetVehicleTechRecordHavingStatusAllSuccess(vTechRecords))\n          ),\n          tap(({ vehicleTechRecords }) => {\n            if (vehicleTechRecords.length > 1) {\n              this.router.navigate(['/multiple-records']);\n            } else {\n              this.store.dispatch(\n                new SetSelectedVehicleTechnicalRecord({\n                  vehicleRecord: vehicleTechRecords[0],\n                  viewState: VIEW_STATE.VIEW_ONLY\n                })\n              );\n            }\n          }),\n          catchError((error) => {\n            const errorMessage = this.getSearchResultError(error);\n            return [new SetErrorMessage([errorMessage])];\n          })\n        )\n    )\n  );\n\n  @Effect()\n  setSelectedVehicleTechRecord$ = this.actions$.pipe(\n    ofType<SetSelectedVehicleTechnicalRecord>(\n      EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord\n    ),\n    switchMap(({ vehicleRecordState }) => {\n      const { vehicleRecord, viewState } = vehicleRecordState;\n      const actions = [];\n\n      actions.push(\n        ...[new SetSelectedVehicleTechRecordSuccess(vehicleRecord), new SetViewState(viewState)]\n      );\n\n      if (vehicleRecord.systemNumber) {\n        actions.push(new GetVehicleTestResultModel(vehicleRecord.systemNumber));\n      }\n\n      return actions;\n    }),\n    tap(() => this.router.navigate(['/technical-record']))\n  );\n\n  @Effect({ dispatch: false })\n  setVinOnCreate$ = this.actions$.pipe(\n    ofType<SetVehicleTechRecordOnCreate>(EVehicleTechRecordActions.SetVehicleTechRecordOnCreate),\n    map((action) => action.payload),\n    switchMap((payload) => {\n      let requests: Observable<any>[] = [];\n      const requestErrors = [];\n\n      requests.push(\n        this.technicalRecordService\n          .getTechnicalRecordsAllStatuses(payload.vin, 'all')\n          .pipe(catchError((error) => of(undefined)))\n      );\n\n      if (payload.vType === 'PSV' || payload.vType === 'HGV') {\n        requests.push(\n          this.technicalRecordService\n            .getTechnicalRecordsAllStatuses(payload.vrm, 'all')\n            .pipe(catchError((error) => of(undefined)))\n        );\n      }\n\n      forkJoin(requests).subscribe(([res1, res2]) => {\n        if (res1) {\n          requestErrors.push(CREATE_PAGE_LABELS.CREATE_VIN_LABEL_ERROR);\n        }\n        if (res2) {\n          requestErrors.push(CREATE_PAGE_LABELS.CREATE_VRM_LABEL_ERROR);\n        }\n        if (!res1 && !res2) {\n          const vehicleRecord = this.getVehicleTechRecordOnCreate({\n            vin: payload.vin,\n            vrm: payload.vrm,\n            vType: payload.vType\n          });\n          this.store.dispatch(\n            new SetSelectedVehicleTechnicalRecord({\n              vehicleRecord,\n              viewState: VIEW_STATE.CREATE\n            })\n          );\n        }\n        requests = [];\n        if (requestErrors.length > 0) {\n          this.store.dispatch(new SetErrorMessage(requestErrors));\n        }\n      });\n\n      return of(payload);\n    })\n  );\n\n  @Effect()\n  createTechnicalRecord$ = this.actions$.pipe(\n    ofType<CreateVehicleTechRecord>(EVehicleTechRecordActions.CreateVehicleTechRecord),\n    switchMap(({ vehicleRecordEdit }) => {\n      // **************************************\n      // TODO: data should be coming from Store. Retrieve via the selector\n      vehicleRecordEdit.msUserDetails = { ...this.loggedUser.getUser() };\n\n      return this.technicalRecordService.createTechnicalRecord(vehicleRecordEdit).pipe(\n        map(\n          () =>\n            new GetVehicleTechRecordHavingStatusAll({\n              searchIdentifier: vehicleRecordEdit.vin,\n              searchCriteria: 'all'\n            })\n        ),\n        catchError(({ error }) => {\n          const errorMessages = error.errors;\n          return [new SetErrorMessage(errorMessages)];\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateVehicleRecord$ = this.actions$.pipe(\n    ofType<UpdateVehicleTechRecord>(EVehicleTechRecordActions.UpdateVehicleTechRecord),\n    withLatestFrom(\n      this.store.select(getActiveVehicleTechRecord).pipe(map((f) => f())),\n      this.store.select(getSelectedVehicleTechRecord)\n    ),\n    switchMap(([{ vehicleRecordEdit }, activeVehicleRecord, selectedVehicleRecord]) => {\n      // TODO: data should be coming from Store. Retrieve via the selector\n      vehicleRecordEdit.msUserDetails = { ...this.loggedUser.getUser() };\n\n      const updateParams: UpdateRecordInfo = {\n        vehicleRecord: vehicleRecordEdit,\n        systemNumber: selectedVehicleRecord.systemNumber,\n        oldStatusCode: this.getUpdatedStatus(\n          vehicleRecordEdit.techRecord[0],\n          activeVehicleRecord.techRecord[0]\n        )\n      };\n\n      return this.technicalRecordService.updateVehicleRecord(updateParams).pipe(\n        switchMap((updatedVehicleRecord: VehicleTechRecordModel) => {\n          updatedVehicleRecord.metadata = selectedVehicleRecord.metadata;\n          return [\n            new UpdateVehicleTechRecordSuccess(updatedVehicleRecord),\n            new SetSelectedVehicleTechRecordSuccess(updatedVehicleRecord),\n            new SetViewState(VIEW_STATE.VIEW_ONLY)\n          ];\n        }),\n        catchError(({ error }) => {\n          const errorMessages = error.errors;\n          return [new SetErrorMessage(errorMessages)];\n        })\n      );\n    })\n  );\n\n  private getUpdatedStatus(editedTechRecord: TechRecord, currentTechRecord: TechRecord): string {\n    return editedTechRecord.statusCode !== currentTechRecord.statusCode\n      ? currentTechRecord.statusCode\n      : '';\n  }\n\n  private getVehicleTechRecordOnCreate(identifier: VehicleIdentifiers): VehicleTechRecordModel {\n    const { vin, vrm, vType } = identifier;\n    return {\n      vin,\n      vrms: [{ vrm, isPrimary: true }] as VrmModel[],\n      techRecord: [\n        {\n          statusCode: RECORD_STATUS.PROVISIONAL,\n          vehicleType: VEHICLE_TYPES[vType]\n        }\n      ] as TechRecord[]\n    } as VehicleTechRecordModel;\n  }\n\n  private getSearchResultError(error: any) {\n    let errorMessage: string;\n    switch (true) {\n      case error.error === 'No resources match the search criteria.':\n        errorMessage = VEHICLE_TECH_RECORD_SEARCH_ERRORS.NOT_FOUND;\n        break;\n      case error.error === 'The provided partial VIN returned more than one match.':\n        errorMessage = VEHICLE_TECH_RECORD_SEARCH_ERRORS.MULTIPLE_FOUND;\n        break;\n      case error.error.error !== undefined:\n        errorMessage = VEHICLE_TECH_RECORD_SEARCH_ERRORS.NO_INPUT;\n        break;\n      default:\n        errorMessage = error.error;\n    }\n\n    return errorMessage;\n  }\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<VehicleTechRecordState>,\n    private router: Router,\n    private technicalRecordService: TechnicalRecordService,\n    private loggedUser: UserService\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<VehicleTechRecordState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "technicalRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 255,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<VehicleTechRecordState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "technicalRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "VehicleTestResultModelEffects",
            "id": "injectable-VehicleTestResultModelEffects-efb80dc50df6bad9d97404d4fd1bf1aa67cd5584a0d2a26643b6d47e27b973e7a768b30eb044c534b5a21529355c1989a3e0881fc456b9037e3fbba160753d4b",
            "file": "archive/src/app/store/effects/VehicleTestResultModel.effects.ts",
            "properties": [
                {
                    "name": "downloadCertificate$",
                    "defaultValue": "this._actions$.pipe(\n    ofType<DownloadCertificate>(EVehicleTestResultModelActions.DownloadCertificate),\n    map((action) => action.payload),\n    switchMap((fileName: string) => {\n      return this._testResultService.downloadCertificate(fileName).pipe(\n        switchMap((response: ArrayBuffer) => {\n          const documentBlob = new Blob([response], { type: 'application/octet-stream' });\n          FileSaver.saveAs(documentBlob, fileName, { autoBom: false });\n          return of(undefined);\n        }),\n        catchError((error) => {\n          const errorMsg = `A digital certificate could not be found for this test.\n            Try resaving this test record to generate a new certificate or manually issue a copy using the information on this page.`;\n\n          this._store.dispatch(new SetErrorMessage([errorMsg]));\n          return of(undefined);\n        })\n      );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "getTestResults$",
                    "defaultValue": "this._actions$.pipe(\n    ofType<GetVehicleTestResultModel>(EVehicleTestResultModelActions.GetVehicleTestResultModel),\n    map((action) => action.payload),\n    switchMap((searchIdentifier: string) =>\n      this._testResultService.getTestResults(searchIdentifier).pipe(\n        switchMap((testResults: TestResultModel[]) => {\n          this._store.dispatch(new ClearErrorMessage());\n          return of(new GetVehicleTestResultModelSuccess(testResults));\n        }),\n        catchError((error) => {\n          return [new GetVehicleTestResultModelFailure(error)];\n        })\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "updateSelectedTestResult$",
                    "defaultValue": "this._actions$.pipe(\n    ofType<UpdateSelectedTestResultModel>(\n      EVehicleTestResultModelActions.UpdateSelectedTestResultModel\n    ),\n    withLatestFrom(\n      this._store.select(getSelectedVehicleTestResultModel),\n      this._store.select(getRouterParams)\n    ),\n    map(([{ payload }, selectedTestResult, routeParams]) => {\n      return {\n        payload,\n        selectedTestResult,\n        routeParams\n      };\n    }),\n    switchMap((params) => {\n      let updatedTestRecord: TestResultModel;\n      const { payload, selectedTestResult, routeParams } = params;\n\n      updatedTestRecord = this.updateTestTypeInTestRecord(\n        selectedTestResult,\n        routeParams.params.id,\n        payload\n      );\n\n      this.router.navigate(['/test-record', routeParams.params.id], {\n        queryParams: {\n          testResultId: selectedTestResult.testResultId,\n          systemNumber: selectedTestResult.systemNumber\n        }\n      });\n\n      return [new UpdateSelectedTestResultModelSuccess(updatedTestRecord)];\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "updateTestResult$",
                    "defaultValue": "this._actions$.pipe(\n    ofType<UpdateTestResult>(EVehicleTestResultModelActions.UpdateTestResult),\n    withLatestFrom(this._store.select(getVehicleTestResultModel)),\n    map(([{ testResultTestTypeNumber }, testResultsInState]): [\n      TestResultTestTypeNumber,\n      TestResultModel[]\n    ] => [testResultTestTypeNumber, testResultsInState]),\n    switchMap(([testResultTestTypeNumber, testResultsInState]) => {\n      const testResultTestTypeNumberObject = testResultTestTypeNumber;\n      let testResultObject: VehicleTestResultUpdate = {} as VehicleTestResultUpdate;\n      const { testResultUpdated } = testResultTestTypeNumber;\n\n      testResultObject = {\n        msUserDetails: { ...this.loggedUser.getUser() },\n        testResult: testResultUpdated\n      };\n\n      return this._testResultService\n        .updateTestResults(testResultObject.testResult.systemNumber, testResultObject)\n        .pipe(\n          switchMap((testRecordResult) => {\n            testResultTestTypeNumberObject.testResultUpdated = testRecordResult;\n            testResultTestTypeNumberObject.testResultsUpdated = this.updateTestResultsInState(\n              testResultsInState,\n              testResultTestTypeNumberObject\n            );\n            return [\n              new SetTestViewState(VIEW_STATE.VIEW_ONLY),\n              new UpdateTestResultSuccess(testResultTestTypeNumberObject),\n              new ClearErrorMessage()\n            ];\n          }),\n          catchError(({ error }) => {\n            const errorMessage = !!error ? error.errors : [''];\n            return [new SetErrorMessage(errorMessage)];\n          })\n        );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [
                {
                    "name": "updateTestResultsInState",
                    "args": [
                        {
                            "name": "testResultsInState",
                            "type": "TestResultModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testResultTestTypeNumberObject",
                            "type": "TestResultTestTypeNumber",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TestResultModel[]",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultsInState",
                            "type": "TestResultModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testResultTestTypeNumberObject",
                            "type": "TestResultTestTypeNumber",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTestTypeInTestRecord",
                    "args": [
                        {
                            "name": "selectedTestResult",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testNumber",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "treeData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TestResultModel",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedTestResult",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testNumber",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "treeData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  EVehicleTestResultModelActions,\n  GetVehicleTestResultModel,\n  GetVehicleTestResultModelFailure,\n  GetVehicleTestResultModelSuccess,\n  SetTestViewState,\n  UpdateSelectedTestResultModel,\n  UpdateSelectedTestResultModelSuccess,\n  UpdateTestResult,\n  UpdateTestResultSuccess,\n  DownloadCertificate\n} from '@app/store/actions/VehicleTestResultModel.actions';\nimport { TestResultService } from '@app/technical-record-search/test-result.service';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { ClearErrorMessage, SetErrorMessage } from '../actions/Error.actions';\nimport { IAppState } from '../state/app.state';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { VehicleTestResultUpdate } from '@app/models/vehicle-test-result-update';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { UserService } from '@app/app-user.service';\nimport {\n  getSelectedVehicleTestResultModel,\n  getVehicleTestResultModel\n} from '@app/store/selectors/VehicleTestResultModel.selectors';\nimport * as FileSaver from 'file-saver';\nimport { Router } from '@angular/router';\nimport { getRouterParams } from '@app/store/selectors/route.selectors';\n\n@Injectable()\nexport class VehicleTestResultModelEffects {\n  @Effect()\n  getTestResults$: Observable<Action> = this._actions$.pipe(\n    ofType<GetVehicleTestResultModel>(EVehicleTestResultModelActions.GetVehicleTestResultModel),\n    map((action) => action.payload),\n    switchMap((searchIdentifier: string) =>\n      this._testResultService.getTestResults(searchIdentifier).pipe(\n        switchMap((testResults: TestResultModel[]) => {\n          this._store.dispatch(new ClearErrorMessage());\n          return of(new GetVehicleTestResultModelSuccess(testResults));\n        }),\n        catchError((error) => {\n          return [new GetVehicleTestResultModelFailure(error)];\n        })\n      )\n    )\n  );\n\n  @Effect()\n  updateTestResult$ = this._actions$.pipe(\n    ofType<UpdateTestResult>(EVehicleTestResultModelActions.UpdateTestResult),\n    withLatestFrom(this._store.select(getVehicleTestResultModel)),\n    map(([{ testResultTestTypeNumber }, testResultsInState]): [\n      TestResultTestTypeNumber,\n      TestResultModel[]\n    ] => [testResultTestTypeNumber, testResultsInState]),\n    switchMap(([testResultTestTypeNumber, testResultsInState]) => {\n      const testResultTestTypeNumberObject = testResultTestTypeNumber;\n      let testResultObject: VehicleTestResultUpdate = {} as VehicleTestResultUpdate;\n      const { testResultUpdated } = testResultTestTypeNumber;\n\n      testResultObject = {\n        msUserDetails: { ...this.loggedUser.getUser() },\n        testResult: testResultUpdated\n      };\n\n      return this._testResultService\n        .updateTestResults(testResultObject.testResult.systemNumber, testResultObject)\n        .pipe(\n          switchMap((testRecordResult) => {\n            testResultTestTypeNumberObject.testResultUpdated = testRecordResult;\n            testResultTestTypeNumberObject.testResultsUpdated = this.updateTestResultsInState(\n              testResultsInState,\n              testResultTestTypeNumberObject\n            );\n            return [\n              new SetTestViewState(VIEW_STATE.VIEW_ONLY),\n              new UpdateTestResultSuccess(testResultTestTypeNumberObject),\n              new ClearErrorMessage()\n            ];\n          }),\n          catchError(({ error }) => {\n            const errorMessage = !!error ? error.errors : [''];\n            return [new SetErrorMessage(errorMessage)];\n          })\n        );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  downloadCertificate$ = this._actions$.pipe(\n    ofType<DownloadCertificate>(EVehicleTestResultModelActions.DownloadCertificate),\n    map((action) => action.payload),\n    switchMap((fileName: string) => {\n      return this._testResultService.downloadCertificate(fileName).pipe(\n        switchMap((response: ArrayBuffer) => {\n          const documentBlob = new Blob([response], { type: 'application/octet-stream' });\n          FileSaver.saveAs(documentBlob, fileName, { autoBom: false });\n          return of(undefined);\n        }),\n        catchError((error) => {\n          const errorMsg = `A digital certificate could not be found for this test.\n            Try resaving this test record to generate a new certificate or manually issue a copy using the information on this page.`;\n\n          this._store.dispatch(new SetErrorMessage([errorMsg]));\n          return of(undefined);\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateSelectedTestResult$ = this._actions$.pipe(\n    ofType<UpdateSelectedTestResultModel>(\n      EVehicleTestResultModelActions.UpdateSelectedTestResultModel\n    ),\n    withLatestFrom(\n      this._store.select(getSelectedVehicleTestResultModel),\n      this._store.select(getRouterParams)\n    ),\n    map(([{ payload }, selectedTestResult, routeParams]) => {\n      return {\n        payload,\n        selectedTestResult,\n        routeParams\n      };\n    }),\n    switchMap((params) => {\n      let updatedTestRecord: TestResultModel;\n      const { payload, selectedTestResult, routeParams } = params;\n\n      updatedTestRecord = this.updateTestTypeInTestRecord(\n        selectedTestResult,\n        routeParams.params.id,\n        payload\n      );\n\n      this.router.navigate(['/test-record', routeParams.params.id], {\n        queryParams: {\n          testResultId: selectedTestResult.testResultId,\n          systemNumber: selectedTestResult.systemNumber\n        }\n      });\n\n      return [new UpdateSelectedTestResultModelSuccess(updatedTestRecord)];\n    })\n  );\n\n  constructor(\n    private _testResultService: TestResultService,\n    private _store: Store<IAppState>,\n    private _actions$: Actions,\n    private loggedUser: UserService,\n    private router: Router\n  ) {}\n\n  updateTestResultsInState(\n    testResultsInState: TestResultModel[],\n    testResultTestTypeNumberObject: TestResultTestTypeNumber\n  ): TestResultModel[] {\n    return !!testResultsInState\n      ? testResultsInState.map((testResult) => {\n          if (\n            testResult.testTypes.some(\n              (testType) => testType.testNumber === testResultTestTypeNumberObject.testTypeNumber\n            )\n          ) {\n            return testResultTestTypeNumberObject.testResultUpdated;\n          } else {\n            return testResult;\n          }\n        })\n      : [{} as TestResultModel];\n  }\n\n  updateTestTypeInTestRecord(\n    selectedTestResult: TestResultModel,\n    testNumber,\n    treeData\n  ): TestResultModel {\n    selectedTestResult.testTypes.forEach((tType, index) => {\n      if (tType.testNumber === testNumber) {\n        const testType = selectedTestResult.testTypes[index];\n        testType.testTypeId = !!treeData ? treeData.key : testType.testTypeId;\n        testType.testTypeName = !!treeData ? treeData.value : testType.testTypeName;\n      }\n    });\n    return selectedTestResult;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 151,
                "jsdoctags": [
                    {
                        "name": "_testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "FormStateGuard",
            "id": "injectable-FormStateGuard-3739ded0aad8dbdbfd697a7907bf98b5f3ea3d6ada59f9cc8fd770103a639ebf75b66afcd5c54253c4d05619f16fb0ab76a0d2e77fdb0fb7727438c9f027020e",
            "file": "archive/src/app/guards/form-state.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAppFormDirty",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Params,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport { map, switchMap } from 'rxjs/operators';\nimport { getAppFormState } from '@app/store/selectors/app-form-state.selectors';\nimport { LoadModal } from '../modal/modal.actions';\nimport { APP_MODALS } from '@app/app.enums';\n\n@Injectable({ providedIn: 'root' })\nexport class FormStateGuard implements CanActivate {\n  constructor(private store: Store<IAppState>) {}\n\n  isAppFormDirty(): Observable<boolean> {\n    return this.store.select(getAppFormState);\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.isAppFormDirty().pipe(\n      switchMap((pristine) => {\n        if (!pristine) {\n          this.store.dispatch(\n            new LoadModal({\n              currentModal: APP_MODALS.LOSE_CHANGES,\n              urlToRedirect: `${getResolvedUrl(route)}${getQueryString(route.queryParams)}`\n            })\n          );\n        }\n        return of(pristine);\n      })\n    );\n  }\n}\n\nfunction getResolvedUrl(route: ActivatedRouteSnapshot): string {\n  return route.pathFromRoot\n    .map((v) => v.url.map((segment) => segment.toString()).join('/'))\n    .join('/');\n}\n\nfunction getQueryString(queryParams: Params): string {\n  return Object.keys(queryParams).reduce(function(str, key, i) {\n    let delimiter, val;\n    delimiter = i === 0 ? '?' : '&';\n    val = queryParams[key];\n    return [str, delimiter, key, '=', val].join('');\n  }, '');\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "PendingChangesGuard",
            "id": "injectable-PendingChangesGuard-c3785395990d3dbb0928a839f2f4191a1f78e56838f3b7ba6e099300c8d0664961d94d37ffb61f402dd8a62bf795bf4e323eb605aaea24d0f1795ac0ae77ea4e",
            "file": "archive/src/app/shared/pending-changes-guard/pending-changes.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canDeactivate",
                    "args": [
                        {
                            "name": "component",
                            "type": "ComponentCanDeactivate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "ComponentCanDeactivate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { PendingChangesService } from '../pending-changes-service/pending-changes.service';\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  constructor(private pendingChangesService: PendingChangesService) {}\n\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    return component.canDeactivate() ? true : this.pendingChangesService.confirm();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pendingChangesService",
                        "type": "PendingChangesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "pendingChangesService",
                        "type": "PendingChangesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "PreparersGuard",
            "id": "injectable-PreparersGuard-1b64b59cac4eca9379f471fa4a31eed4f3b3493c1f73983f15a29c389d03f2c5144a39796e73afbe806db25cc0abb390dd6f9730173d8f7b64c99843d9009d70",
            "file": "archive/src/app/test-record/guards/preparers.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasPreparers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateStoreWithDataFromApi",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, tap, switchMap, catchError, take } from 'rxjs/operators';\n\nimport { IAppState } from '@app/store/state/app.state';\nimport { TestResultService } from '@app/technical-record-search/test-result.service';\nimport { getPreparers } from '@app/store/selectors/ReferenceData.selectors';\nimport { LoadPreparersSuccess } from '@app/store/actions/ReferenceData.actions';\nimport { Preparer } from '@app/models/preparer';\n\n@Injectable({ providedIn: 'root' })\nexport class PreparersGuard implements CanActivate {\n  constructor(private store: Store<IAppState>, private testResultService: TestResultService) {}\n\n  hasPreparers(): Observable<boolean> {\n    return this.store.select(getPreparers).pipe(\n      map((preparers) => {\n        return !!preparers;\n      }),\n      take(1)\n    );\n  }\n\n  populateStoreWithDataFromApi(): Observable<boolean> {\n    return this.testResultService.getPreparers().pipe(\n      tap((preparers: Preparer[]) => {\n        this.store.dispatch(new LoadPreparersSuccess(preparers));\n      }),\n      map(Boolean),\n      catchError((_) => {\n        return of(false);\n      })\n    );\n  }\n\n  canActivate(): Observable<boolean> {\n    return this.hasPreparers().pipe(\n      switchMap((inStore) => {\n        if (inStore) {\n          return of(inStore);\n        }\n        return this.populateStoreWithDataFromApi();\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "TestStationsGuard",
            "id": "injectable-TestStationsGuard-b0adaa17f10fbacc5e9fe08ba30625c43f50b78b4f10c880d2f01608f2da0a94d1d63ef8be3735cde50a2bac66e844729c3e02d98ccc340cbaab24361f6d6018",
            "file": "archive/src/app/test-record/guards/test-stations.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasTestStationsInStore",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateStoreWithDataFromApi",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, tap, switchMap, catchError } from 'rxjs/operators';\n\nimport { IAppState } from '@app/store/state/app.state';\nimport { TestResultService } from '@app/technical-record-search/test-result.service';\nimport { TestStation } from '@app/models/test-station';\nimport { getTestStations } from '@app/store/selectors/ReferenceData.selectors';\nimport { LoadTestStationsSuccess } from '@app/store/actions/ReferenceData.actions';\n\n@Injectable({ providedIn: 'root' })\nexport class TestStationsGuard implements CanActivate {\n  constructor(private store: Store<IAppState>, private testResultService: TestResultService) {}\n\n  hasTestStationsInStore(): Observable<boolean> {\n    return this.store.pipe(\n      select(getTestStations),\n      map((testStations) => {\n        return !!testStations;\n      })\n    );\n  }\n\n  populateStoreWithDataFromApi(): Observable<boolean> {\n    return this.testResultService.getTestStations().pipe(\n      tap((testStations: TestStation[]) => {\n        this.store.dispatch(new LoadTestStationsSuccess(testStations));\n      }),\n      map(Boolean),\n      catchError((error) => {\n        return of(false);\n      })\n    );\n  }\n\n  canActivate(): Observable<boolean> {\n    return this.hasTestStationsInStore().pipe(\n      switchMap((inStore) => {\n        if (inStore) {\n          return of(inStore);\n        }\n        return this.populateStoreWithDataFromApi();\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "TestTypeCategoriesGuard",
            "id": "injectable-TestTypeCategoriesGuard-304199ad78ddc1e04adbad0d7e0b0530db2b97c8e0b31ad981688f2dfb14320776f1364ca4336708599e1ef1775bbe0800f5b57312cbbdd6ba92dd586f95e31c",
            "file": "archive/src/app/test-record/guards/test-type-categories.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasTestTypeCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateStoreWithDataFromApi",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { catchError, map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { IAppState } from '@app/store/state/app.state';\nimport { TestResultService } from '@app/technical-record-search/test-result.service';\nimport { TestTypeCategory } from '@app/models/test-type-category';\nimport { LoadTestTypeCategoriesSuccess } from '@app/store/actions/ReferenceData.actions';\nimport { getTestTypeCategories } from '@app/store/selectors/ReferenceData.selectors';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestTypeCategoriesGuard implements CanActivate {\n  constructor(private store: Store<IAppState>, private testResultService: TestResultService) {}\n\n  hasTestTypeCategories(): Observable<boolean> {\n    return this.store.select(getTestTypeCategories).pipe(\n      map((testTypesCategories) => {\n        return !!testTypesCategories;\n      }),\n      take(1)\n    );\n  }\n\n  populateStoreWithDataFromApi(): Observable<boolean> {\n    return this.testResultService.getTestTypeCategories().pipe(\n      tap((testTypesCategories: TestTypeCategory[]) => {\n        this.store.dispatch(new LoadTestTypeCategoriesSuccess(testTypesCategories));\n      }),\n      map(Boolean),\n      catchError((_) => {\n        return of(false);\n      })\n    );\n  }\n\n  canActivate(): Observable<boolean> {\n    return this.hasTestTypeCategories().pipe(\n      switchMap((inStore) => {\n        if (inStore) {\n          return of(inStore);\n        }\n        return this.populateStoreWithDataFromApi();\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testResultService",
                        "type": "TestResultService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "AuthTokenInterceptor",
            "id": "injectable-AuthTokenInterceptor-286b9ae55a2b90218e85d5acc7c0f4fe6307937b8d55b8c273f6c1ab4c130c1089b06c8c47ec98f8971bac35ff8c3aeff623e5c144b400fccf049c2f32ffe501",
            "file": "archive/src/app/technical-record-search/auth-token-interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpHandler, HttpInterceptor, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MsAdalAngular6Service } from 'microsoft-adal-angular6';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from './../app-user.service';\r\n\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n  constructor(private adal: MsAdalAngular6Service, private userSvc: UserService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const resource = this.adal.GetResourceForEndpoint(req.url);\r\n    if (!resource) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    if (!this.adal.isAuthenticated) {\r\n      return this.adal.acquireToken(resource).pipe(\r\n        mergeMap((token: string) => {\r\n          const authorizedRequest = req.clone({\r\n            headers: req.headers.set('Authorization', `Bearer ${token}`)\r\n          });\r\n          return next.handle(authorizedRequest);\r\n        })\r\n      );\r\n    }\r\n\r\n    const authorizedAdalRequest = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${this.adal.accessToken}`)\r\n    });\r\n\r\n    this.userSvc.setUser(this.adal.userInfo.profile);\r\n    return next.handle(authorizedAdalRequest);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "adal",
                        "type": "MsAdalAngular6Service",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userSvc",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "adal",
                        "type": "MsAdalAngular6Service",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userSvc",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ae9bd5f9254e2b7f77b34ca28024efc401075a7d8e5a24fa39efe192fcb763833a86af3747a44e90e0f912919c0443e067283d15aeae1bf216b8d21fe3ea4d85",
            "file": "archive/e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AuthenticationGuardMock",
            "id": "class-AuthenticationGuardMock-97a936ce07474e9780d638b25e095c73482ce684335060163cafc56361963dfd18a04abc2cb035d616fe9260f449dadfd02aa2f9fbc3423e46c462a6cce0866a",
            "file": "archive/testconfig/services-mocks/authentication-guard.mock.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Observable, of} from 'rxjs';\n\nexport class AuthenticationGuardMock  {\n  readonly LoggedInUserEmail: string;\n  readonly LoggedInUserName: any;\n  readonly userInfo: adal.User;\n  readonly accessToken: string;\n  readonly isAuthenticated: boolean;\n\n  login() {\n    return;\n  }\n\n  logout() {\n    return;\n  }\n\n  GetResourceForEndpoint() {\n    return 'mock';\n  }\n\n  RenewToken() {\n    return;\n  }\n\n  acquireToken(): Observable<any> {\n    return of({token: '342304932049234'});\n  }\n\n  getToken(): string {\n    return 'token';\n  }\n\n  handleCallback(): void {\n    return;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "accessToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "LoggedInUserEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "LoggedInUserName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "userInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "adal.User",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "acquireToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "GetResourceForEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleCallback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "RenewToken",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChangeView",
            "id": "class-ChangeView-1ba1d8f6d9b49ea1a2602e9cd4adcc5b01f905a9dad71b2017ae52f87d017116c8ec77225ccc98212f2ddbf1daec3ee3037a5912c5332b15be14824f98f4db6b",
            "file": "archive/src/app/modal/modal.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { ModalState } from './modal.reducer';\n\nexport enum EModalStateActions {\n  LoadModal = '[Load] Modal',\n  ResetModal = '[Reset] Modal',\n  ChangeView = '[ChangeView] Modal'\n}\n\nexport class LoadModal implements Action {\n  public readonly type = EModalStateActions.LoadModal;\n  constructor(public payload: ModalState) {}\n}\n\nexport class ResetModal implements Action {\n  public readonly type = EModalStateActions.ResetModal;\n  constructor(public payload?: string) {}\n}\n\nexport class ChangeView implements Action {\n  public readonly type = EModalStateActions.ChangeView;\n  constructor(public urlToRedirect: string) {}\n}\n\nexport type ModalStateActions = LoadModal | ResetModal | ChangeView;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "urlToRedirect",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "urlToRedirect",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EModalStateActions.ChangeView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "urlToRedirect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "ClearErrorMessage",
            "id": "class-ClearErrorMessage-715c3e2040e44f248ead343de1a003e314712b5e49ef596a74e9e8c9f1711089ecd43d159b96aae4ca42cfe7f4f1e1c02f1b08a9049b5e4916ff15e1cff068a4",
            "file": "archive/src/app/store/actions/Error.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum EErrorActions {\n  SetErrorMessage = '[Error] Set',\n  ClearErrorMessage = '[Error] Clear'\n}\n\nexport class SetErrorMessage implements Action {\n  public readonly type = EErrorActions.SetErrorMessage;\n  constructor(public payload: string[]) {}\n}\n\nexport class ClearErrorMessage implements Action {\n  public readonly type = EErrorActions.ClearErrorMessage;\n}\n\nexport type ErrorActions = SetErrorMessage | ClearErrorMessage;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EErrorActions.ClearErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "CreateVehicleTechRecord",
            "id": "class-CreateVehicleTechRecord-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleRecordEdit",
                        "type": "VehicleTechRecordEdit",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "vehicleRecordEdit",
                        "type": "VehicleTechRecordEdit",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.CreateVehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "vehicleRecordEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordEdit",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "DownloadCertificate",
            "id": "class-DownloadCertificate-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.DownloadCertificate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "FormFieldControl",
            "id": "class-FormFieldControl-fb3f830cfe85b7e0083264d423ad3520d485336671f9bca5812559f0442c43e700574e86c7eaa86f518530265abc5fa39207e7546fa546d2ff3a6a58c99004f6",
            "file": "archive/src/app/shared/components/control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { NgControl } from '@angular/forms';\n\nexport abstract class FormFieldControl {\n  id: string;\n  ariaDescribedBy: string | null;\n  errorMessages?: { rule: string; message: string }[];\n\n  readonly controlType: string;\n  readonly multi: boolean;\n  readonly ngControl: NgControl;\n}\n",
            "properties": [
                {
                    "name": "ariaDescribedBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetVehicleTechRecordHavingStatusAll",
            "id": "class-GetVehicleTechRecordHavingStatusAll-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "SearchParams",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "SearchParams",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchParams",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "GetVehicleTechRecordHavingStatusAllSuccess",
            "id": "class-GetVehicleTechRecordHavingStatusAllSuccess-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleTechRecords",
                        "type": "VehicleTechRecordModel[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "vehicleTechRecords",
                        "type": "VehicleTechRecordModel[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "vehicleTechRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel[]",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "GetVehicleTestResultModel",
            "id": "class-GetVehicleTestResultModel-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.GetVehicleTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "GetVehicleTestResultModelFailure",
            "id": "class-GetVehicleTestResultModelFailure-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.GetVehicleTestResultModelFailure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "GetVehicleTestResultModelSuccess",
            "id": "class-GetVehicleTestResultModelSuccess-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "TestResultModel[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "TestResultModel[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadingFalse",
            "id": "class-LoadingFalse-0a7cf674b4dc11a875bfa6c887b04e10a2ce976d202341182b332e507f25c1115b552eced429d1d00184e6931bf9ada1645f236e4be426d0016791aadd8425f8",
            "file": "archive/src/app/store/actions/Loader.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum ELoadingActions {\n  AppIsLoading = '[Loading] True',\n  AppIsNotLoading = '[Loading] False'\n}\n\nexport class LoadingTrue implements Action {\n  public readonly type = ELoadingActions.AppIsLoading;\n}\n\nexport class LoadingFalse implements Action {\n  public readonly type = ELoadingActions.AppIsNotLoading;\n}\n\nexport type LoadingActions = LoadingTrue | LoadingFalse;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "ELoadingActions.AppIsNotLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadingTrue",
            "id": "class-LoadingTrue-0a7cf674b4dc11a875bfa6c887b04e10a2ce976d202341182b332e507f25c1115b552eced429d1d00184e6931bf9ada1645f236e4be426d0016791aadd8425f8",
            "file": "archive/src/app/store/actions/Loader.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum ELoadingActions {\n  AppIsLoading = '[Loading] True',\n  AppIsNotLoading = '[Loading] False'\n}\n\nexport class LoadingTrue implements Action {\n  public readonly type = ELoadingActions.AppIsLoading;\n}\n\nexport class LoadingFalse implements Action {\n  public readonly type = ELoadingActions.AppIsNotLoading;\n}\n\nexport type LoadingActions = LoadingTrue | LoadingFalse;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "ELoadingActions.AppIsLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadModal",
            "id": "class-LoadModal-1ba1d8f6d9b49ea1a2602e9cd4adcc5b01f905a9dad71b2017ae52f87d017116c8ec77225ccc98212f2ddbf1daec3ee3037a5912c5332b15be14824f98f4db6b",
            "file": "archive/src/app/modal/modal.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { ModalState } from './modal.reducer';\n\nexport enum EModalStateActions {\n  LoadModal = '[Load] Modal',\n  ResetModal = '[Reset] Modal',\n  ChangeView = '[ChangeView] Modal'\n}\n\nexport class LoadModal implements Action {\n  public readonly type = EModalStateActions.LoadModal;\n  constructor(public payload: ModalState) {}\n}\n\nexport class ResetModal implements Action {\n  public readonly type = EModalStateActions.ResetModal;\n  constructor(public payload?: string) {}\n}\n\nexport class ChangeView implements Action {\n  public readonly type = EModalStateActions.ChangeView;\n  constructor(public urlToRedirect: string) {}\n}\n\nexport type ModalStateActions = LoadModal | ResetModal | ChangeView;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "ModalState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "ModalState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalState",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EModalStateActions.LoadModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadPreparers",
            "id": "class-LoadPreparers-0dfe90d5e53142751c2693415cd98292bc67f02c02aba85dbcd82d88737f8691bb28a00ad099ecf207a7a4a5addd79fdcdc6ec7d765dbacc135d18c249886b1c",
            "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport enum EReferenceDataActions {\n  LoadPreparers = 'LoadPreparers',\n  LoadPreparersSuccess = '[Preparers Guard] LoadPreparersSuccess',\n  LoadTestStations = 'LoadTestStations',\n  LoadTestStationsSuccess = '[TestStation Guard] LoadTestStationsSuccess',\n  LoadTestTypeCategoriesSuccess = '[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]'\n}\n\nexport class LoadPreparers implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparers;\n}\n\nexport class LoadTestStations implements Action {\n  readonly type = EReferenceDataActions.LoadTestStations;\n}\n\nexport class LoadPreparersSuccess implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparersSuccess;\n  constructor(public preparers: Preparer[]) {}\n}\n\nexport class LoadTestStationsSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestStationsSuccess;\n  constructor(public testStations: TestStation[]) {}\n}\n\nexport class LoadTestTypeCategoriesSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestTypeCategoriesSuccess;\n  constructor(public testTypeCategories: TestTypeCategory[]) {}\n}\n\nexport type ReferenceDataActions =\n  | LoadPreparers\n  | LoadTestStations\n  | LoadPreparersSuccess\n  | LoadTestStationsSuccess\n  | LoadTestTypeCategoriesSuccess;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EReferenceDataActions.LoadPreparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadPreparersSuccess",
            "id": "class-LoadPreparersSuccess-0dfe90d5e53142751c2693415cd98292bc67f02c02aba85dbcd82d88737f8691bb28a00ad099ecf207a7a4a5addd79fdcdc6ec7d765dbacc135d18c249886b1c",
            "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport enum EReferenceDataActions {\n  LoadPreparers = 'LoadPreparers',\n  LoadPreparersSuccess = '[Preparers Guard] LoadPreparersSuccess',\n  LoadTestStations = 'LoadTestStations',\n  LoadTestStationsSuccess = '[TestStation Guard] LoadTestStationsSuccess',\n  LoadTestTypeCategoriesSuccess = '[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]'\n}\n\nexport class LoadPreparers implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparers;\n}\n\nexport class LoadTestStations implements Action {\n  readonly type = EReferenceDataActions.LoadTestStations;\n}\n\nexport class LoadPreparersSuccess implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparersSuccess;\n  constructor(public preparers: Preparer[]) {}\n}\n\nexport class LoadTestStationsSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestStationsSuccess;\n  constructor(public testStations: TestStation[]) {}\n}\n\nexport class LoadTestTypeCategoriesSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestTypeCategoriesSuccess;\n  constructor(public testTypeCategories: TestTypeCategory[]) {}\n}\n\nexport type ReferenceDataActions =\n  | LoadPreparers\n  | LoadTestStations\n  | LoadPreparersSuccess\n  | LoadTestStationsSuccess\n  | LoadTestTypeCategoriesSuccess;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "preparers",
                        "type": "Preparer[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "preparers",
                        "type": "Preparer[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "preparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preparer[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EReferenceDataActions.LoadPreparersSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadTestStations",
            "id": "class-LoadTestStations-0dfe90d5e53142751c2693415cd98292bc67f02c02aba85dbcd82d88737f8691bb28a00ad099ecf207a7a4a5addd79fdcdc6ec7d765dbacc135d18c249886b1c",
            "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport enum EReferenceDataActions {\n  LoadPreparers = 'LoadPreparers',\n  LoadPreparersSuccess = '[Preparers Guard] LoadPreparersSuccess',\n  LoadTestStations = 'LoadTestStations',\n  LoadTestStationsSuccess = '[TestStation Guard] LoadTestStationsSuccess',\n  LoadTestTypeCategoriesSuccess = '[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]'\n}\n\nexport class LoadPreparers implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparers;\n}\n\nexport class LoadTestStations implements Action {\n  readonly type = EReferenceDataActions.LoadTestStations;\n}\n\nexport class LoadPreparersSuccess implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparersSuccess;\n  constructor(public preparers: Preparer[]) {}\n}\n\nexport class LoadTestStationsSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestStationsSuccess;\n  constructor(public testStations: TestStation[]) {}\n}\n\nexport class LoadTestTypeCategoriesSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestTypeCategoriesSuccess;\n  constructor(public testTypeCategories: TestTypeCategory[]) {}\n}\n\nexport type ReferenceDataActions =\n  | LoadPreparers\n  | LoadTestStations\n  | LoadPreparersSuccess\n  | LoadTestStationsSuccess\n  | LoadTestTypeCategoriesSuccess;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EReferenceDataActions.LoadTestStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadTestStationsSuccess",
            "id": "class-LoadTestStationsSuccess-0dfe90d5e53142751c2693415cd98292bc67f02c02aba85dbcd82d88737f8691bb28a00ad099ecf207a7a4a5addd79fdcdc6ec7d765dbacc135d18c249886b1c",
            "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport enum EReferenceDataActions {\n  LoadPreparers = 'LoadPreparers',\n  LoadPreparersSuccess = '[Preparers Guard] LoadPreparersSuccess',\n  LoadTestStations = 'LoadTestStations',\n  LoadTestStationsSuccess = '[TestStation Guard] LoadTestStationsSuccess',\n  LoadTestTypeCategoriesSuccess = '[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]'\n}\n\nexport class LoadPreparers implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparers;\n}\n\nexport class LoadTestStations implements Action {\n  readonly type = EReferenceDataActions.LoadTestStations;\n}\n\nexport class LoadPreparersSuccess implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparersSuccess;\n  constructor(public preparers: Preparer[]) {}\n}\n\nexport class LoadTestStationsSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestStationsSuccess;\n  constructor(public testStations: TestStation[]) {}\n}\n\nexport class LoadTestTypeCategoriesSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestTypeCategoriesSuccess;\n  constructor(public testTypeCategories: TestTypeCategory[]) {}\n}\n\nexport type ReferenceDataActions =\n  | LoadPreparers\n  | LoadTestStations\n  | LoadPreparersSuccess\n  | LoadTestStationsSuccess\n  | LoadTestTypeCategoriesSuccess;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "testStations",
                        "type": "TestStation[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "testStations",
                        "type": "TestStation[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "testStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestStation[]",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EReferenceDataActions.LoadTestStationsSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LoadTestTypeCategoriesSuccess",
            "id": "class-LoadTestTypeCategoriesSuccess-0dfe90d5e53142751c2693415cd98292bc67f02c02aba85dbcd82d88737f8691bb28a00ad099ecf207a7a4a5addd79fdcdc6ec7d765dbacc135d18c249886b1c",
            "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { Preparer } from '@app/models/preparer';\nimport { TestStation } from '@app/models/test-station';\nimport { TestTypeCategory } from '@app/models/test-type-category';\n\nexport enum EReferenceDataActions {\n  LoadPreparers = 'LoadPreparers',\n  LoadPreparersSuccess = '[Preparers Guard] LoadPreparersSuccess',\n  LoadTestStations = 'LoadTestStations',\n  LoadTestStationsSuccess = '[TestStation Guard] LoadTestStationsSuccess',\n  LoadTestTypeCategoriesSuccess = '[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]'\n}\n\nexport class LoadPreparers implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparers;\n}\n\nexport class LoadTestStations implements Action {\n  readonly type = EReferenceDataActions.LoadTestStations;\n}\n\nexport class LoadPreparersSuccess implements Action {\n  public readonly type = EReferenceDataActions.LoadPreparersSuccess;\n  constructor(public preparers: Preparer[]) {}\n}\n\nexport class LoadTestStationsSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestStationsSuccess;\n  constructor(public testStations: TestStation[]) {}\n}\n\nexport class LoadTestTypeCategoriesSuccess implements Action {\n  readonly type = EReferenceDataActions.LoadTestTypeCategoriesSuccess;\n  constructor(public testTypeCategories: TestTypeCategory[]) {}\n}\n\nexport type ReferenceDataActions =\n  | LoadPreparers\n  | LoadTestStations\n  | LoadPreparersSuccess\n  | LoadTestStationsSuccess\n  | LoadTestTypeCategoriesSuccess;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "testTypeCategories",
                        "type": "TestTypeCategory[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "testTypeCategories",
                        "type": "TestTypeCategory[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "testTypeCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestTypeCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EReferenceDataActions.LoadTestTypeCategoriesSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "MockStore",
            "id": "class-MockStore-56dcb486a14af10e2e8ec1735827f273f41af9dd36d0ae3b3a85aa1dd8aa9b5cca7f594e7fcdde3cd6e4717726653ba9d7f5672e9f239d48feb278b97b364d88",
            "file": "archive/src/app/utils/mockStore.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { Action } from '@ngrx/store';\nimport { getErrors } from '@app/store/selectors/error.selectors';\nimport {\n  getSelectedVehicleTechRecord,\n  getTechViewState,\n  getVehicleTechRecordMetaData,\n  getActiveVehicleTechRecord,\n  selectVehicleTechRecordModelHavingStatusAll\n} from '@app/store/selectors/VehicleTechRecordModel.selectors';\nimport {\n  getSelectedVehicleTestResultModel,\n  getTestViewState,\n  getVehicleTestResultModel,\n  selectTestTypeById\n} from '@app/store/selectors/VehicleTestResultModel.selectors';\nimport { getPreparers, getTestStations } from '@app/store/selectors/ReferenceData.selectors';\nimport { getRouterParams } from '@app/store/selectors/route.selectors';\nimport { getCurrentModalState } from '@app/modal/modal.selectors';\nimport { getAppFormState } from '@app/store/selectors/app-form-state.selectors';\n\nexport class MockStore {\n  mockSelector: BehaviorSubject<any>;\n\n  constructor(mockSelector) {\n    this.mockSelector = mockSelector;\n  }\n\n  select(selector: any) {\n    switch (selector) {\n      case selectVehicleTechRecordModelHavingStatusAll:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('selectVehicleTechRecordModelHavingStatusAll')\n              ? value['selectVehicleTechRecordModelHavingStatusAll']\n              : []\n          )\n        );\n\n      case getSelectedVehicleTechRecord:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getSelectedVehicleTechRecord')\n              ? value['getSelectedVehicleTechRecord']\n              : {}\n          )\n        );\n\n      case getActiveVehicleTechRecord:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getActiveVehicleTechRecord')\n              ? value['getActiveVehicleTechRecord']\n              : () => {}\n          )\n        );\n\n      case getVehicleTechRecordMetaData:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getVehicleTechRecordMetaData')\n              ? value['getVehicleTechRecordMetaData']\n              : {}\n          )\n        );\n\n      case getTechViewState:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getTechViewState') ? value['getTechViewState'] : {}\n          )\n        );\n\n      case getErrors:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getErrors') ? value['getErrors'] : []\n          )\n        );\n\n      case getVehicleTestResultModel:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getVehicleTestResultModel')\n              ? value['getVehicleTestResultModel']\n              : []\n          )\n        );\n\n      case selectTestTypeById(''):\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('selectTestTypeById') ? value['selectTestTypeById'] : {}\n          )\n        );\n\n      case getPreparers:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getPreparers') ? value['getPreparers'] : null\n          )\n        );\n\n      case getTestStations:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getTestStations') ? value['getTestStations'] : null\n          )\n        );\n\n      case getTestViewState:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getTestViewState') ? value['getTestViewState'] : {}\n          )\n        );\n\n      case getSelectedVehicleTestResultModel:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getSelectedVehicleTestResultModel')\n              ? value['getSelectedVehicleTestResultModel']\n              : {}\n          )\n        );\n\n      case getRouterParams:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getRouterParams') ? value['getRouterParams'] : {}\n          )\n        );\n      case getCurrentModalState:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getCurrentModalState')\n              ? value['getCurrentModalState']\n              : {}\n          )\n        );\n      case getAppFormState:\n        return this.mockSelector.pipe(\n          map((value: any) =>\n            value && value.hasOwnProperty('getCurrentModalState')\n              ? value['getCurrentModalState']\n              : {}\n          )\n        );\n\n      default:\n        return this.mockSelector;\n    }\n  }\n\n  dispatch(action: Action) {\n    return [];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "mockSelector",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "mockSelector",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "mockSelector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "selector",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selector",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ResetModal",
            "id": "class-ResetModal-1ba1d8f6d9b49ea1a2602e9cd4adcc5b01f905a9dad71b2017ae52f87d017116c8ec77225ccc98212f2ddbf1daec3ee3037a5912c5332b15be14824f98f4db6b",
            "file": "archive/src/app/modal/modal.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { ModalState } from './modal.reducer';\n\nexport enum EModalStateActions {\n  LoadModal = '[Load] Modal',\n  ResetModal = '[Reset] Modal',\n  ChangeView = '[ChangeView] Modal'\n}\n\nexport class LoadModal implements Action {\n  public readonly type = EModalStateActions.LoadModal;\n  constructor(public payload: ModalState) {}\n}\n\nexport class ResetModal implements Action {\n  public readonly type = EModalStateActions.ResetModal;\n  constructor(public payload?: string) {}\n}\n\nexport class ChangeView implements Action {\n  public readonly type = EModalStateActions.ChangeView;\n  constructor(public urlToRedirect: string) {}\n}\n\nexport type ModalStateActions = LoadModal | ResetModal | ChangeView;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EModalStateActions.ResetModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetAppFormDirty",
            "id": "class-SetAppFormDirty-72cb01c6ead14c90bd62ccf41af568fd8e8d2fdd6c2ad3ce383a23fd230c819684036f037129a09eaedae4660b02c8d8f9553f63c2b8c114c9fc7a95afe65e4a",
            "file": "archive/src/app/store/actions/app-form-state.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum EAppFormStateActions {\n  SetAppFormDirty = 'SetAppFormDirty',\n  SetAppFormPristine = 'SetAppFormPristine'\n}\n\nexport class SetAppFormDirty implements Action {\n  public readonly type = EAppFormStateActions.SetAppFormDirty;\n}\n\nexport class SetAppFormPristine implements Action {\n  public readonly type = EAppFormStateActions.SetAppFormPristine;\n}\n\nexport type AppFormStateActions = SetAppFormDirty | SetAppFormPristine;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EAppFormStateActions.SetAppFormDirty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetAppFormPristine",
            "id": "class-SetAppFormPristine-72cb01c6ead14c90bd62ccf41af568fd8e8d2fdd6c2ad3ce383a23fd230c819684036f037129a09eaedae4660b02c8d8f9553f63c2b8c114c9fc7a95afe65e4a",
            "file": "archive/src/app/store/actions/app-form-state.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum EAppFormStateActions {\n  SetAppFormDirty = 'SetAppFormDirty',\n  SetAppFormPristine = 'SetAppFormPristine'\n}\n\nexport class SetAppFormDirty implements Action {\n  public readonly type = EAppFormStateActions.SetAppFormDirty;\n}\n\nexport class SetAppFormPristine implements Action {\n  public readonly type = EAppFormStateActions.SetAppFormPristine;\n}\n\nexport type AppFormStateActions = SetAppFormDirty | SetAppFormPristine;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EAppFormStateActions.SetAppFormPristine",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetErrorMessage",
            "id": "class-SetErrorMessage-715c3e2040e44f248ead343de1a003e314712b5e49ef596a74e9e8c9f1711089ecd43d159b96aae4ca42cfe7f4f1e1c02f1b08a9049b5e4916ff15e1cff068a4",
            "file": "archive/src/app/store/actions/Error.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport enum EErrorActions {\n  SetErrorMessage = '[Error] Set',\n  ClearErrorMessage = '[Error] Clear'\n}\n\nexport class SetErrorMessage implements Action {\n  public readonly type = EErrorActions.SetErrorMessage;\n  constructor(public payload: string[]) {}\n}\n\nexport class ClearErrorMessage implements Action {\n  public readonly type = EErrorActions.ClearErrorMessage;\n}\n\nexport type ErrorActions = SetErrorMessage | ClearErrorMessage;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EErrorActions.SetErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetSelectedTestResultModel",
            "id": "class-SetSelectedTestResultModel-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.SetSelectedTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetSelectedTestResultModelSuccess",
            "id": "class-SetSelectedTestResultModelSuccess-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetSelectedVehicleTechnicalRecord",
            "id": "class-SetSelectedVehicleTechnicalRecord-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleRecordState",
                        "type": "VehicleTechRecordState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "vehicleRecordState",
                        "type": "VehicleTechRecordState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "vehicleRecordState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordState",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetSelectedVehicleTechRecordSuccess",
            "id": "class-SetSelectedVehicleTechRecordSuccess-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleTechRecord",
                        "type": "VehicleTechRecordModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "vehicleTechRecord",
                        "type": "VehicleTechRecordModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "vehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetTestViewState",
            "id": "class-SetTestViewState-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "editState",
                        "type": "VIEW_STATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "editState",
                        "type": "VIEW_STATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.SetTestViewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetVehicleTechRecordOnCreate",
            "id": "class-SetVehicleTechRecordOnCreate-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "VehicleIdentifiers",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "VehicleIdentifiers",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleIdentifiers",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.SetVehicleTechRecordOnCreate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetViewState",
            "id": "class-SetViewState-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewState",
                        "type": "VIEW_STATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "viewState",
                        "type": "VIEW_STATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.SetViewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VIEW_STATE",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "TechnicalRecordServiceMock",
            "id": "class-TechnicalRecordServiceMock-0ee009d86339f940ac17ba07aee5df9e38203e3fecfbbfdcff7bc00819e42d91dfccae492a68e7ad0f7ad0074edfedeff5dfd6802aa5a02eae0d5ff625b0eef8",
            "file": "archive/testconfig/services-mocks/technical-record-service.mock.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable, of } from 'rxjs';\n\nexport class TechnicalRecordServiceMock {\n\n  getTechnicalRecords(): Observable<any> {\n    return of({vin: 'XXXXX11XX1X111111', techRecord: [], vrms: []});\n  }\n\n  getTechnicalRecordsAllStatuses(): Observable<any> {\n    return of({ techRecord: [], vin: 'XXXXX11XX1X111111', vrms: []});\n  }\n\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTechnicalRecords",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTechnicalRecordsAllStatuses",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TestStore",
            "id": "class-TestStore-f35787aa9eac894eee84bf0b4344b6b7c50cf4438f4ded84c035eb61cb838a2ca697d5b73e82411829f0e7ab4753bb09acb821e356f3be98e106e51c5bcd1261",
            "file": "archive/testconfig/test-store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Observable } from 'rxjs';\n\nexport class TestStore<T> {\n  private state: BehaviorSubject<T> = new BehaviorSubject(undefined);\n\n  setState(data: T) {\n    this.state.next(data);\n  }\n\n  select(selector?: any): Observable<T> {\n    return this.state.asObservable();\n  }\n\n  dispatch(action: any) {}\n}\n",
            "properties": [
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "selector",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selector",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TreeNode",
            "id": "class-TreeNode-cb690a2a029ab8d5423fbe2d8bcb64ae9483de4a938871b0070b0c1a3d37483eed1d710acf659d5fbea2657769ccc357bae5311ba8f853d5680e2e94add79b79",
            "file": "archive/src/app/shared/components/tree/tree.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\nimport { KeyValue } from '@angular/common';\nimport { TreeData } from '@app/models/tree-data';\n\nexport class TreeNode {\n  children: BehaviorSubject<TreeNode[]>;\n  isActive?: boolean;\n  constructor(public nodeName: string, public id: string, children?: TreeNode[]) {\n    this.children = new BehaviorSubject(children === undefined ? [] : children);\n  }\n}\n\n@Component({\n  selector: 'vtm-tree-component',\n  templateUrl: './tree.component.html'\n})\nexport class TreeComponent implements OnInit {\n  @Input() treeData: TreeData[];\n  @Output() sendTreeData = new EventEmitter<KeyValue<string, string>>();\n\n  levels = new Map<TreeNode, number>();\n\n  activeNode: KeyValue<string, string>;\n\n  treeControl: FlatTreeControl<TreeNode>;\n  treeFlattener: MatTreeFlattener<TreeNode, TreeNode>;\n  dataSource: MatTreeFlatDataSource<TreeNode, TreeNode>;\n\n  constructor() {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer.bind(this),\n      this.getLevel.bind(this),\n      this.isExpandable.bind(this),\n      this.getChildren.bind(this)\n    );\n\n    this.treeControl = new FlatTreeControl<TreeNode>(\n      this.getLevel.bind(this),\n      this.isExpandable.bind(this)\n    );\n\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.treeData ? this.convertToTreeNodes(this.treeData) : [];\n  }\n\n  convertToTreeNodes(treeData): TreeNode[] {\n    return treeData\n      .map(this.mapTreeDataToTreeNodes.bind(this))\n      .sort(this.sortTreeNodeByChildren.bind(this));\n  }\n\n  private mapTreeDataToTreeNodes(obj) {\n    const hasChildren = obj.children && obj.children.length;\n\n    if (hasChildren) {\n      return new TreeNode(obj.nodeName, obj.id, this.convertToTreeNodes(obj.children));\n    } else {\n      return new TreeNode(obj.nodeName, obj.id);\n    }\n  }\n\n  sortTreeNodeByChildren(a, b) {\n    if (a.children && a.children.value < b.children && b.children.value) {\n      return -1;\n    }\n    if (a.children && a.children.value > b.children && b.children.value) {\n      return 1;\n    }\n    return 0;\n  }\n\n  getLevel(node: TreeNode): number {\n    return this.levels.get(node) || 0;\n  }\n\n  isExpandable(node: TreeNode): boolean {\n    return node.children.value.length > 0;\n  }\n\n  getChildren(node: TreeNode) {\n    return node.children;\n  }\n\n  transformer(node: TreeNode, level: number) {\n    this.levels.set(node, level);\n    return node;\n  }\n\n  hasChildren(index: number, node: TreeNode): boolean {\n    return node.children.value.length > 0;\n  }\n\n  setActiveNode(node) {\n    this.treeControl.dataNodes.forEach((dnode) => (dnode.isActive = false));\n    node.isActive = !node.isActive;\n\n    this.activeNode = { key: node.id, value: node.nodeName };\n\n    this.sendTreeData.emit(this.activeNode);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "nodeName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "children",
                        "type": "TreeNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "nodeName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "children",
                        "type": "TreeNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TreeNode[]>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "nodeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UpdateSelectedTestResultModel",
            "id": "class-UpdateSelectedTestResultModel-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "KeyValue<string | string>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 67,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "KeyValue<string | string>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValue<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.UpdateSelectedTestResultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "UpdateSelectedTestResultModelSuccess",
            "id": "class-UpdateSelectedTestResultModelSuccess-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 72,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultModel",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "UpdateTestResult",
            "id": "class-UpdateTestResult-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "testResultTestTypeNumber",
                        "type": "TestResultTestTypeNumber",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "testResultTestTypeNumber",
                        "type": "TestResultTestTypeNumber",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "testResultTestTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultTestTypeNumber",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.UpdateTestResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "UpdateTestResultSuccess",
            "id": "class-UpdateTestResultSuccess-41a128043e1f334ebf15639dc6455ae23b22bb3cb95272002c5584cbbb708a63f6cbd48316c50c5f3aa7ea32f5749d3457d6f8d8c6ac11a22069369b5e881755",
            "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { TestResultModel } from '../../models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\nimport { KeyValue } from '@angular/common';\n\nexport enum EVehicleTestResultModelActions {\n  GetVehicleTestResultModel = '[TestResultModel] Get TestResultModel',\n  GetVehicleTestResultModelSuccess = '[TestResultModel] Get TestResultModel Success',\n  GetVehicleTestResultModelFailure = '[TestResultModel] Get TestResultModel Failure',\n  SetTestViewState = '[TestResultComponent] SetTestViewState',\n  UpdateTestResult = '[UpdateTestResult] Update Test Result',\n  UpdateTestResultSuccess = '[UpdateTestResultSuccess]',\n  SetSelectedTestResultModel = '[SetSelectedVehicleTestResultModel]',\n  SetSelectedTestResultModelSuccess = '[SetSelectedVehicleTestResultModelSuccess]',\n  UpdateSelectedTestResultModel = '[UpdateSelectedTestResultModel]',\n  UpdateSelectedTestResultModelSuccess = '[UpdateSelectedTestResultModelSuccess]',\n  DownloadCertificate = '[DownloadCertificate]'\n}\n\nexport class GetVehicleTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class GetVehicleTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelSuccess;\n  constructor(public payload: TestResultModel[]) {}\n}\n\nexport class GetVehicleTestResultModelFailure implements Action {\n  public readonly type = EVehicleTestResultModelActions.GetVehicleTestResultModelFailure;\n  constructor(public payload: string) {}\n}\n\nexport class SetTestViewState implements Action {\n  readonly type = EVehicleTestResultModelActions.SetTestViewState;\n  constructor(public editState: VIEW_STATE) {}\n}\n\nexport class UpdateTestResult implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResult;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class UpdateTestResultSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateTestResultSuccess;\n  constructor(public testResultTestTypeNumber: TestResultTestTypeNumber) {}\n}\n\nexport class SetSelectedTestResultModel implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModel;\n  constructor(public payload: string) {}\n}\n\nexport class SetSelectedTestResultModelSuccess implements Action {\n  public readonly type = EVehicleTestResultModelActions.SetSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport class DownloadCertificate implements Action {\n  public readonly type = EVehicleTestResultModelActions.DownloadCertificate;\n  constructor(public payload: string) {}\n}\n\nexport class UpdateSelectedTestResultModel implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModel;\n  constructor(public payload: KeyValue<string, string>) {}\n}\n\nexport class UpdateSelectedTestResultModelSuccess implements Action {\n  readonly type = EVehicleTestResultModelActions.UpdateSelectedTestResultModelSuccess;\n  constructor(public payload: TestResultModel) {}\n}\n\nexport type VehicleTestResultModelActions =\n  | GetVehicleTestResultModel\n  | GetVehicleTestResultModelSuccess\n  | GetVehicleTestResultModelFailure\n  | SetTestViewState\n  | UpdateTestResult\n  | UpdateTestResultSuccess\n  | SetSelectedTestResultModel\n  | SetSelectedTestResultModelSuccess\n  | UpdateSelectedTestResultModel\n  | UpdateSelectedTestResultModelSuccess\n  | DownloadCertificate;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "testResultTestTypeNumber",
                        "type": "TestResultTestTypeNumber",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "testResultTestTypeNumber",
                        "type": "TestResultTestTypeNumber",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "testResultTestTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestResultTestTypeNumber",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "EVehicleTestResultModelActions.UpdateTestResultSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "UpdateVehicleTechRecord",
            "id": "class-UpdateVehicleTechRecord-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleRecordEdit",
                        "type": "VehicleTechRecordEdit",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "vehicleRecordEdit",
                        "type": "VehicleTechRecordEdit",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.UpdateVehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "vehicleRecordEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordEdit",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "UpdateVehicleTechRecordSuccess",
            "id": "class-UpdateVehicleTechRecordSuccess-3bff3dc7d4a5500e6cd9bc9a3cb89c00feca3a8e03224addc6da6772656a668841f0daa34a736580469a2cd2d50bc3bace00354b68c8a875f251b1a62a323f7c",
            "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\r\nimport {\r\n  VehicleIdentifiers,\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { SearchParams } from '@app/models/search-params';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\nexport enum EVehicleTechRecordActions {\r\n  GetVehicleTechRecordHavingStatusAll = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll',\r\n  GetVehicleTechRecordHavingStatusAllSuccess = '[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success',\r\n\r\n  CreateVehicleTechRecord = '[TechRecordContainer] Create VehicleTechRecord',\r\n\r\n  UpdateVehicleTechRecord = '[TechRecordContainer] Update VehicleTechRecord',\r\n  UpdateVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success',\r\n\r\n  SetVehicleTechRecordOnCreate = '[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create',\r\n  SetSelectedVehicleTechnicalRecord = '[MultipleTechRecordContainer] Set Selected Vehicle Technical Record',\r\n  SetSelectedVehicleTechRecordSuccess = '[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess',\r\n  SetViewState = '[VehicleTechnicalRecordEffect] Set ViewState'\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAll implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAll;\r\n\r\n  constructor(public payload: SearchParams) {}\r\n}\r\n\r\nexport class GetVehicleTechRecordHavingStatusAllSuccess implements Action {\r\n  public readonly type = EVehicleTechRecordActions.GetVehicleTechRecordHavingStatusAllSuccess;\r\n\r\n  constructor(public vehicleTechRecords: VehicleTechRecordModel[]) {}\r\n}\r\n\r\nexport class SetVehicleTechRecordOnCreate implements Action {\r\n  public readonly type = EVehicleTechRecordActions.SetVehicleTechRecordOnCreate;\r\n  constructor(public payload: VehicleIdentifiers) {}\r\n}\r\n\r\nexport class CreateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.CreateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecord implements Action {\r\n  public readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecord;\r\n  constructor(public vehicleRecordEdit: VehicleTechRecordEdit) {}\r\n}\r\n\r\nexport class UpdateVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechnicalRecord implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechnicalRecord;\r\n  constructor(public vehicleRecordState: VehicleTechRecordState) {}\r\n}\r\n\r\nexport class SetSelectedVehicleTechRecordSuccess implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetSelectedVehicleTechRecordSuccess;\r\n  constructor(public vehicleTechRecord: VehicleTechRecordModel) {}\r\n}\r\n\r\nexport class SetViewState implements Action {\r\n  readonly type = EVehicleTechRecordActions.SetViewState;\r\n  constructor(public viewState: VIEW_STATE) {}\r\n}\r\n\r\nexport type VehicleTechRecordActions =\r\n  | GetVehicleTechRecordHavingStatusAll\r\n  | GetVehicleTechRecordHavingStatusAllSuccess\r\n  | SetVehicleTechRecordOnCreate\r\n  | CreateVehicleTechRecord\r\n  | UpdateVehicleTechRecord\r\n  | UpdateVehicleTechRecordSuccess\r\n  | SetSelectedVehicleTechnicalRecord\r\n  | SetSelectedVehicleTechRecordSuccess\r\n  | SetViewState;\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vehicleTechRecord",
                        "type": "VehicleTechRecordModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "vehicleTechRecord",
                        "type": "VehicleTechRecordModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "EVehicleTechRecordActions.UpdateVehicleTechRecordSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "vehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        }
    ],
    "directives": [
        {
            "name": "BackButtonDirective",
            "id": "directive-BackButtonDirective-dfa2ec7de3459938e25b4171f25b057abebced48ef7030ae05226997db28401ead24597f0286e6b200fa068780f7506a7db4ef5bc1eccc7bbbfa5de2299bad38",
            "file": "archive/src/app/shared/directives/back-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener, Input } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Directive({\n  selector: '[vtmBackButton]'\n})\nexport class BackButtonDirective {\n  constructor(private location: Location) {}\n\n  @HostListener('click')\n  onClick() {\n    this.location.back();\n  }\n}\n",
            "selector": "[vtmBackButton]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FormConnectorDirective",
            "id": "directive-FormConnectorDirective-c0091250653d6aac1b783de3b893291a051c016a9959395908b63583b12da3ec262ca4e97a47e678c5dfe85629f7f2f4152d84f6cd77f1b778e4ebb7865d4f8e",
            "file": "archive/src/app/directives/form-connector/form-connector.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroupDirective, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, withLatestFrom, tap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport { SetAppFormDirty } from '@app/store/actions/app-form-state.actions';\nimport { getAppFormState } from '../../store/selectors/app-form-state.selectors';\n\n@Directive({\n  selector: '[vtmFormConnector]'\n})\nexport class FormConnectorDirective implements OnInit, OnDestroy {\n  @Input('vtmFormConnector') path: string;\n  @Input() debounce = 400;\n  // @Output() error = new EventEmitter();\n  // @Output() success = new EventEmitter();\n\n  formChange: Subscription;\n  formSuccess: Subscription;\n  formError: Subscription;\n\n  constructor(private formGroupDirective: FormGroupDirective, private store: Store<IAppState>) {}\n\n  ngOnInit(): void {\n    this.formChange = this.formGroupDirective.form.valueChanges\n      .pipe(\n        debounceTime(this.debounce),\n        withLatestFrom(this.store.select(getAppFormState)),\n        tap(([formValue, appForm]: [FormGroup, boolean]) => {\n          // TODO: to be removed\n          console.log('VALUE: ', formValue, 'PATH: ', this.path);\n          if (!this.formGroupDirective.form.pristine && appForm) {\n            this.store.dispatch(new SetAppFormDirty());\n          }\n        })\n      )\n      .subscribe();\n    // TODO: to be removed\n    console.log(this.formGroupDirective.form);\n  }\n\n  ngOnDestroy(): void {\n    this.formChange.unsubscribe();\n  }\n}\n",
            "selector": "[vtmFormConnector]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "debounce",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "vtmFormConnector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "formChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "formError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "formSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "NullValueDirective",
            "id": "directive-NullValueDirective-585032d986d28326c3ea106871fe742a4b434366cc8f24ca0e1105c1faf46ab000855b80331dfc891bdf9ba9959ac85d752d4a283c247e4d3307cdd4fa5dcc58",
            "file": "archive/src/app/shared/directives/null-value.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[vtmNullValue]'\n})\nexport class NullValueDirective {\n  constructor(private control: NgControl) {}\n\n  @HostListener('keyup', ['$event.target'])\n  @HostListener('change', ['$event.target'])\n  onEvent(target: HTMLInputElement) {\n    if (target.value === '') {\n      this.control.control.patchValue(null);\n    }\n  }\n}\n",
            "selector": "[vtmNullValue]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                },
                {
                    "name": "keyup",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onEvent",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keyup', ['$event.target']"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change', ['$event.target']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-2c65aa1b51220f82b2a18d8fa26a89b280e74682f3523f73313027db7203da2eda3f12c740463ae46693d63b36f9e8baa1a2bd6bb0ee8e7fb4088223f58ee11d",
            "file": "archive/src/app/shared/libraries/accordion/accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'vtm-accordion',\n  templateUrl: './accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccordionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-accordion\" data-module=\"govuk-accordion\" id=\"accordion-default\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "AccordionItemComponent",
            "id": "component-AccordionItemComponent-53b78b1aa3df89494b14037a07f481352f28be02e0c747101929ba6a7a40ac91dc560fc6200fcac1a0cd233ebf98e44ad92fd018558c80366ee92dda7cf7258f",
            "file": "archive/src/app/shared/libraries/accordion-item/accordion-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-accordion-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "titleTrimmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'vtm-accordion-item',\n  templateUrl: './accordion-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccordionItemComponent implements OnInit {\n  @Input() title: string;\n  titleTrimmed: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.titleTrimmed = !!this.title ? this.title.replace(/\\s/g, '') : '';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-accordion__section\">\n  <div class=\"govuk-accordion__section-header\">\n    <h2 class=\"govuk-accordion__section-heading\">\n      <span class=\"govuk-link govuk-!-font-size-36 govuk-!-font-weight-bold\">{{ title }}</span>\n      <span\n        class=\"govuk-accordion__section-button\"\n        id=\"test-accordion-default-heading-{{ this.titleTrimmed }}\"\n      ></span>\n    </h2>\n  </div>\n  <div\n    id=\"test-accordion-default-content-{{ this.titleTrimmed }}\"\n    class=\"govuk-accordion__section-content\"\n  >\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "AdditionalAdrDetailEditComponent",
            "id": "component-AdditionalAdrDetailEditComponent-c0faf92d3fa39ee7a3c0a680d1c46aea8f0e910a069f71d1794290a36499aab60eb266186d9a24c28050d40e7e5e96b8d57f99e0e0158530ade49a51b4c11c6c",
            "file": "archive/src/app/technical-record/adr/additional-adr-details/edit/additional-adr-detail-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-additional-adr-detail-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./additional-adr-detail-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-additional-adr-detail-edit',\n  templateUrl: './additional-adr-detail-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdditionalAdrDetailEditComponent extends AdrComponent implements OnInit {\n  adrForm: FormGroup;\n  @Input() adrDetails: AdrDetails;\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n\n    this.adrForm.addControl(\n      'additionalExaminerNotes',\n      this.fb.control(this.adrDetails.additionalExaminerNotes)\n    );\n\n    this.adrForm.addControl(\n      'adrCertificateNotes',\n      this.fb.control(this.adrDetails.adrCertificateNotes)\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m govuk-!-margin-bottom-1\">\n            Additional ADR details\n          </h2>\n\n          <div class=\"govuk-form-group\">\n            <label for=\"additionalExaminerNotes\" class=\"govuk-label govuk-!-font-weight-bold\"\n              >Additional ADR notes (optional)</label\n            >\n            <span id=\"additional-details-hint\" class=\"govuk-hint\" for=\"additionalExaminerNotes\">\n              Will not be present on the ADR certificate\n            </span>\n            <textarea\n              id=\"additionalExaminerNotes\"\n              aria-describedby=\"additionalExaminerNotes-hint\"\n              name=\"additionalExaminerNotes\"\n              formControlName=\"additionalExaminerNotes\"\n              rows=\"8\"\n              class=\"govuk-textarea\"\n            >\n            </textarea>\n          </div>\n\n          <div class=\"govuk-form-group\">\n            <label for=\"adrCertificateNotes\" class=\"govuk-label govuk-!-font-weight-bold\"\n              >ADR certificate notes (optional)</label\n            >\n            <textarea\n              id=\"adrCertificateNotes\"\n              aria-describedby=\"adrCertificateNotes-hint\"\n              name=\"adrCertificateNotes\"\n              formControlName=\"adrCertificateNotes\"\n              rows=\"8\"\n              class=\"govuk-textarea\"\n            >\n            </textarea>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "AdditionalAdrDetailsComponent",
            "id": "component-AdditionalAdrDetailsComponent-4d89951c4ba87313b6760a0b67a10b28b9bd86aee4ddc721ad9b196862e58d771784b2b16d11c6a27635ad5c53e44412d5e9c2c16e350589481866b1d9a87f49",
            "file": "archive/src/app/technical-record/adr/additional-adr-details/additional-adr-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-additional-adr-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./additional-adr-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-additional-adr-details',\n  templateUrl: './additional-adr-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdditionalAdrDetailsComponent implements OnInit {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Additional ADR details</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Additional ADR notes</dt>\n      <dd class=\"govuk-summary-list__value\">\n        <span id=\"test-additionalExaminerNotes\">\n          {{ adrDetails.additionalExaminerNotes | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">ADR certificate notes</dt>\n      <dd class=\"govuk-summary-list__value\">\n        <span id=\"test-adrCertificateNotes\">\n          {{ adrDetails.adrCertificateNotes | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"edit\">\n  <vtm-additional-adr-detail-edit [adrDetails]=\"adrDetails\"></vtm-additional-adr-detail-edit>\n</ng-container>\n"
        },
        {
            "name": "AdrComponent",
            "id": "component-AdrComponent-76382bef6161d8ca2b61ae395ade12d44d14f43a654b0405f3dd63dd6fece03ed6c9963c164e8c2f80da528dcc5bfcf54709eb3c83a27dd73a153392f77ba256",
            "file": "archive/src/app/technical-record/adr/adr.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-adr",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./adr.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { FormGroup, ControlContainer, FormGroupDirective, FormBuilder } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AdrDetails } from '@app/models/adr-details';\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { MetaData } from '@app/models/meta-data';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { ValidationMapper } from './adr-validation.mapper';\nimport { BOOLEAN_RADIO_OPTIONS } from '../technical-record.constants';\n\n@Component({\n  selector: 'vtm-adr',\n  templateUrl: './adr.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class AdrComponent implements OnChanges, OnInit, OnDestroy {\n  showAdrView: boolean;\n  adrDetails: AdrDetails;\n  metaData$: Observable<MetaData>;\n  booleanOptions = BOOLEAN_RADIO_OPTIONS;\n\n  protected onDestroy$ = new Subject();\n\n  @Input() params: { [key: string]: boolean };\n  @Input() editState: VIEW_STATE;\n  @Input() activeRecord: TechRecord;\n  @Input() vehicleMetaData: MetaData;\n\n  constructor(\n    private parent: FormGroupDirective,\n    protected fb: FormBuilder,\n    protected validationMapper: ValidationMapper,\n    protected detectChange: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { params, activeRecord, editState } = changes;\n    if (params) {\n      this.showAdrView = params.currentValue.showAdrDetails;\n    }\n\n    if (activeRecord) {\n      if (!!activeRecord.currentValue.adrDetails) {\n        this.adrDetails = activeRecord.currentValue.adrDetails;\n      } else {\n        this.adrDetails = {} as AdrDetails;\n      }\n    }\n\n    if (editState) {\n      const techRecord = this.parent.form.get('techRecord') as FormGroup;\n      techRecord.removeControl('adrDetails');\n      techRecord.addControl('adrDetails', new FormGroup({}));\n    }\n  }\n\n  ngOnInit() {}\n\n  protected setUp(): FormGroup {\n    return this.parent.form.get('techRecord.adrDetails') as FormGroup;\n  }\n\n  switchAdrDisplay($event): void {\n    const techRecord = this.parent.form.get('techRecord') as FormGroup;\n    this.showAdrView = $event.currentTarget.value === 'true';\n\n    if (!this.showAdrView) {\n      techRecord.removeControl('adrDetails');\n    } else {\n      techRecord.addControl('adrDetails', new FormGroup({}));\n    }\n  }\n\n  unsorted(): number {\n    return 0;\n  }\n\n  protected vehicleTypeChangedHandler(selectedType: string): void {\n    this.validationMapper.vehicleTypeSelected(selectedType);\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "validationMapper",
                        "type": "ValidationMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "validationMapper",
                        "type": "ValidationMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Able to carry dangerous goods\n      <ng-container *ngIf=\"!!editState\">\n        <div id=\"radioADR\" class=\"govuk-radios govuk-radios--inline govuk-!-margin-top-4\">\n          <div\n            class=\"govuk-radios__item\"\n            *ngFor=\"let option of booleanOptions | keyvalue: unsorted\"\n          >\n            <input\n              class=\"govuk-radios__input\"\n              id=\"hasADR-{{ option.key }}\"\n              name=\"hasADR\"\n              type=\"radio\"\n              [checked]=\"showAdrView === option.value\"\n              [value]=\"option.value\"\n              (change)=\"switchAdrDisplay($event)\"\n            />\n            <label class=\"govuk-label govuk-radios__label\" for=\"hasADR-{{ option.key }}\">\n              {{ option.key }}\n            </label>\n          </div>\n        </div>\n      </ng-container>\n    </dt>\n\n    <dd id=\"test-ableToCarry\" class=\"govuk-summary-list__value\">\n      <div *ngIf=\"!editState\">\n        <span> {{ showAdrView ? 'Yes' : 'No' }}</span>\n      </div>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<ng-container *ngIf=\"showAdrView\">\n  <!-- Applicant Details -->\n  <vtm-applicant-details [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-applicant-details>\n\n  <!-- ADR Details -->\n  <vtm-adr-details\n    [edit]=\"!!editState\"\n    [adrDetails]=\"adrDetails\"\n    [metaData]=\"vehicleMetaData\"\n  ></vtm-adr-details>\n\n  <!-- Tank Details -->\n  <vtm-tank-details [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-tank-details>\n\n  <!-- Tank Inspections -->\n  <vtm-tank-inpections [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-tank-inpections>\n\n  <!-- Memo -->\n  <vtm-memo [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-memo>\n\n  <!-- Tank Documents -->\n  <vtm-tank-documents [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-tank-documents>\n\n  <!-- Battery List Applicable -->\n  <vtm-battery-list-applicable\n    [edit]=\"!!editState\"\n    [adrDetails]=\"adrDetails\"\n  ></vtm-battery-list-applicable>\n\n  <!-- Declaration Seen -->\n  <vtm-declaration-seen [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-declaration-seen>\n\n  <!-- Certificate -->\n  <vtm-certificate [edit]=\"!!editState\" [adrDetails]=\"adrDetails\"></vtm-certificate>\n\n  <vtm-additional-adr-details\n    [edit]=\"!!editState\"\n    [adrDetails]=\"adrDetails\"\n  ></vtm-additional-adr-details>\n</ng-container>\n"
        },
        {
            "name": "AdrDetailsComponent",
            "id": "component-AdrDetailsComponent-f646957ade0d58ca4d9cee367815fa937c0eddf57a4f3100905fa807d9ed30ac2693c603f968e9d61da83230e16947900fd7ccfc0118c4ef1744c3b16a4e82dc",
            "file": "archive/src/app/technical-record/adr/adr-details/adr-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-adr-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./adr-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "MetaData",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\nimport { MetaData } from '@app/models/meta-data';\n\n@Component({\n  selector: 'vtm-adr-details',\n  templateUrl: './adr-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdrDetailsComponent implements OnInit {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n  @Input() metaData: MetaData;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">ADR details</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Vehicle type</dt>\n      <dd id=\"test-ADR-type\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.vehicleDetails?.type | DefaultNullOrEmpty | titlecase }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Date processed</dt>\n      <dd id=\"test-ADR-approvalDate\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"adrDetails.vehicleDetails?.approvalDate; else hyphen\">\n          {{ adrDetails.vehicleDetails?.approvalDate | date: 'dd/MM/yyyy' }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Permitted dangerous goods</dt>\n      <dd id=\"test-ADR-permittedDangerousGoods\" class=\"govuk-summary-list__value\">\n        <div *ngIf=\"adrDetails.permittedDangerousGoods; else hyphen\">\n          <div *ngFor=\"let perGood of adrDetails.permittedDangerousGoods; let i = index\">\n            <p>\n              <span id=\"test-ADR-permittedDangerousGoods-{{ i }}\">{{ perGood }}</span>\n            </p>\n          </div>\n        </div>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Compatibility group J</dt>\n      <dd id=\"test-ADR-compatibilityGroupJ\" class=\"govuk-summary-list__value\">\n        {{ adrDetails?.compatibilityGroupJ | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Guidance notes</dt>\n      <dd id=\"test-ADR-additionalNotes-number\" class=\"govuk-summary-list__value\">\n        <div\n          *ngIf=\"\n            this.adrDetails.additionalNotes && adrDetails.additionalNotes.number[0];\n            else hyphen\n          \"\n        >\n          <div *ngFor=\"let number of adrDetails.additionalNotes.number; let i = index\">\n            <p>\n              <span id=\"test-ADR-additionalNotes-number-{{ i }}\">{{ number }}</span>\n            </p>\n          </div>\n        </div>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">ADR type approval number</dt>\n      <dd id=\"test-ADR-adrTypeApprovalNo\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.adrTypeApprovalNo | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<!-- Edit Applicant Details -->\n<ng-container *ngIf=\"edit\">\n  <vtm-adr-details-edit [adrDetails]=\"adrDetails\" [metaData]=\"metaData\"></vtm-adr-details-edit>\n</ng-container>\n"
        },
        {
            "name": "AdrDetailsEditComponent",
            "id": "component-AdrDetailsEditComponent-f907bb7d6dc866fb8637f317156b04f18ed3ab98940b9c15b8a39641c6fe4f2892dd31eedf7c05b93e5205ee6bf7d76038316926457ef8b43ce7567fbdec839c",
            "file": "archive/src/app/technical-record/adr/adr-details/edit/adr-details-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-adr-details-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./adr-details-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "MetaData",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "approvalDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "defaultVehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "explosive_types",
                    "defaultValue": "EXPLOSIVE_TYPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "guidanceNotesOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "options",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "permittedDangerousGoodsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "selectedVehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "showCompatibilityGroupJ",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "vehicleTypeDefault",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "vehicleTypeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasGoodsWithCompatibilityGroupJ",
                    "args": [
                        {
                            "name": "goodsOptions",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "goodsOptions",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initControls",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mapToFormGroup",
                    "args": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup[]",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "permittedDangerousGoodsChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormArray, Validators } from '@angular/forms';\nimport { tap, takeUntil, debounceTime } from 'rxjs/operators';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { SelectOption } from '@app/models/select-option';\nimport { AdrDetails } from '@app/models/adr-details';\nimport { MetaData } from '@app/models/meta-data';\nimport { EXPLOSIVE_TYPES } from './../../adr.constants';\nimport { BOOLEAN_RADIO_OPTIONS } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-adr-details-edit',\n  templateUrl: './adr-details-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdrDetailsEditComponent extends AdrComponent implements OnInit {\n  submitted: boolean;\n  selectedVehicleType: string;\n  defaultVehicleType: SelectOption;\n  vehicleTypeOptions: SelectOption[];\n  vehicleTypeDefault: string;\n  approvalDate: string;\n  showCompatibilityGroupJ: boolean;\n  permittedDangerousGoodsOptions: SelectOption[];\n  explosive_types = EXPLOSIVE_TYPES;\n  guidanceNotesOptions: SelectOption[];\n  options = BOOLEAN_RADIO_OPTIONS;\n  adrForm: FormGroup;\n\n  @Input() adrDetails: AdrDetails;\n  @Input() metaData: MetaData;\n\n  get vehicleDetails() {\n    return this.adrForm.get('vehicleDetails') as FormGroup;\n  }\n\n  get permittedDangerousGoods() {\n    return this.adrForm.get('permittedDangerousGoods') as FormArray;\n  }\n\n  get additionalNotes() {\n    return this.adrForm.get('additionalNotes') as FormGroup;\n  }\n\n  get number() {\n    return this.additionalNotes.get('number') as FormArray;\n  }\n\n  ngOnInit(): void {\n    this.adrForm = super.setUp();\n\n    this.vehicleTypeOptions = new DisplayOptionsPipe().transform(\n      this.metaData.adrDetails.vehicleDetails.typeFe\n    );\n\n    const { vehicleDetails } = this.adrDetails;\n    if (vehicleDetails && vehicleDetails.type) {\n      const defaultType: SelectOption = this.vehicleTypeOptions.find(\n        (type) => type.name.toLowerCase() === this.adrDetails.vehicleDetails.type.toLowerCase()\n      );\n      this.vehicleTypeDefault = !!defaultType ? defaultType.name.toLowerCase() : '';\n    }\n\n    if (vehicleDetails && vehicleDetails.approvalDate) {\n      this.approvalDate = vehicleDetails.approvalDate;\n    }\n\n    // const selectedDangerousGoods = ['Explosives (type 2)', 'Explosives (type 3)'];\n    const selectedDangerousGoods = this.adrDetails.permittedDangerousGoods\n      ? this.adrDetails.permittedDangerousGoods\n      : [];\n    this.permittedDangerousGoodsOptions = new DisplayOptionsPipe().transform(\n      this.metaData.adrDetails.permittedDangerousGoodsFe,\n      selectedDangerousGoods\n    );\n    this.showCompatibilityGroupJ = this.hasGoodsWithCompatibilityGroupJ(\n      this.permittedDangerousGoodsOptions\n    );\n\n    const selectedGuidanceNotes =\n      this.adrDetails.additionalNotes && this.adrDetails.additionalNotes.number\n        ? this.adrDetails.additionalNotes.number\n        : [];\n    this.guidanceNotesOptions = new DisplayOptionsPipe().transform(\n      this.metaData.adrDetails.additionalNotes.numberFe,\n      selectedGuidanceNotes\n    );\n\n    this.initControls();\n    this.handleFormChanges();\n  }\n\n  initControls() {\n    this.adrForm.addControl(\n      'vehicleDetails',\n      this.fb.group({\n        type: this.fb.control(this.vehicleTypeDefault, [Validators.required]),\n        approvalDate: this.fb.control(this.approvalDate, [Validators.required])\n      })\n    );\n\n    this.adrForm.addControl(\n      'permittedDangerousGoods',\n      this.fb.array(this.mapToFormGroup(this.permittedDangerousGoodsOptions), [\n        Validators.required\n      ])\n    );\n\n    this.adrForm.addControl(\n      'compatibilityGroupJ',\n      this.fb.control(this.adrDetails.compatibilityGroupJ)\n    );\n\n    this.adrForm.addControl(\n      'adrTypeApprovalNo',\n      this.fb.control(this.adrDetails.adrTypeApprovalNo)\n    );\n\n    this.adrForm.addControl(\n      'additionalNotes',\n      this.fb.group({\n        number: this.fb.array(this.mapToFormGroup(this.guidanceNotesOptions))\n      })\n    );\n  }\n\n  mapToFormGroup(options: SelectOption[]): FormGroup[] {\n    return options.map((option) => {\n      return this.fb.group({\n        name: option.name,\n        selected: option.selected\n      });\n    });\n  }\n\n  hasGoodsWithCompatibilityGroupJ(goodsOptions: SelectOption[]): boolean {\n    return goodsOptions.some(\n      (option) => option.selected && this.explosive_types.includes(option.name)\n    );\n  }\n\n  unsorted(): number {\n    return super.unsorted();\n  }\n\n  handleFormChanges() {\n    this.vehicleTypeChanges();\n    this.permittedDangerousGoodsChanges();\n  }\n\n  vehicleTypeChanges() {\n    this.vehicleDetails\n      .get('type')\n      .valueChanges.pipe(\n        debounceTime(1000),\n        tap((value) => {\n          super.vehicleTypeChangedHandler(value);\n        })\n      )\n      .subscribe();\n  }\n\n  permittedDangerousGoodsChanges() {\n    this.permittedDangerousGoods.valueChanges\n      .pipe(\n        tap((items: SelectOption[]) => {\n          this.showCompatibilityGroupJ = this.hasGoodsWithCompatibilityGroupJ(items);\n          if (!this.showCompatibilityGroupJ) {\n            // reset regardless\n            this.adrForm.get('compatibilityGroupJ').reset(false);\n          }\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "vehicleDetails": {
                    "name": "vehicleDetails",
                    "getSignature": {
                        "name": "vehicleDetails",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                },
                "permittedDangerousGoods": {
                    "name": "permittedDangerousGoods",
                    "getSignature": {
                        "name": "permittedDangerousGoods",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                },
                "additionalNotes": {
                    "name": "additionalNotes",
                    "getSignature": {
                        "name": "additionalNotes",
                        "type": "",
                        "returnType": "",
                        "line": 43
                    }
                },
                "number": {
                    "name": "number",
                    "getSignature": {
                        "name": "number",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <!-- ADR DETAILS -->\n          <h2 class=\"govuk-heading-m\">ADR details</h2>\n\n          <div [formGroup]=\"vehicleDetails\">\n            <div class=\"govuk-form-group\">\n              <label for=\"vehicleType\" class=\"govuk-label govuk-!-font-weight-bold\">\n                Vehicle type\n              </label>\n              <select id=\"vehicleType\" formControlName=\"type\" class=\"govuk-select\">\n                <option\n                  *ngFor=\"let vehicleType of vehicleTypeOptions\"\n                  [ngValue]=\"vehicleType.name.toLowerCase()\"\n                >\n                  {{ vehicleType.name }}\n                </option>\n              </select>\n            </div>\n\n            <div\n              class=\"govuk-form-group\"\n              [class.govuk-form-group--error]=\"\n                submitted && adrForm.get('vehicleDetails.approvalDate').invalid\n              \"\n            >\n              <fieldset class=\"govuk-fieldset\" role=\"group\" aria-describedby=\"approval-date\">\n                <label class=\"govuk-label govuk-!-font-weight-bold\">\n                  Date processed\n                </label>\n                <vtm-date-input\n                  id=\"approvalDate\"\n                  ariaDescribedBy=\"approvalDate\"\n                  formControlName=\"approvalDate\"\n                ></vtm-date-input>\n              </fieldset>\n            </div>\n          </div>\n\n          <div class=\"govuk-form-group govuk-!-margin-top-6\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\">\n              Permitted dangerous goods\n            </label>\n            <div class=\"govuk-checkboxes\" formArrayName=\"permittedDangerousGoods\">\n              <ng-container\n                *ngFor=\"let permittedGood of permittedDangerousGoods.controls; let i = index\"\n                [formGroup]=\"permittedGood\"\n              >\n                <div class=\"govuk-checkboxes__item\">\n                  <input\n                    id=\"permittedGood_{{ i }}\"\n                    type=\"checkbox\"\n                    [value]=\"permittedDangerousGoodsOptions[i].selected\"\n                    [formControl]=\"permittedGood.get('selected')\"\n                    class=\"govuk-checkboxes__input\"\n                  />\n                  <label for=\"permittedGood_{{ i }}\" class=\"govuk-label govuk-checkboxes__label\">\n                    {{ permittedGood.get('name').value }}\n                  </label>\n                </div>\n              </ng-container>\n              <div\n                id=\"conditional-permittedGood\"\n                class=\"govuk-inset-text govuk-!-margin-top-0\"\n                [class.govuk-checkboxes__conditional--hidden]=\"!showCompatibilityGroupJ\"\n              >\n                <ng-container *ngTemplateOutlet=\"compatibilityGroup\"></ng-container>\n              </div>\n            </div>\n          </div>\n\n          <ng-template #compatibilityGroup>\n            <div class=\"govuk-form-group govuk-!-margin-left-3\">\n              <h4 class=\"govuk-heading-m\">Compatibility group J (optional)</h4>\n              <div class=\"govuk-radios govuk-radios--inline\">\n                <div\n                  class=\"govuk-radios__item\"\n                  *ngFor=\"let option of options | keyvalue: unsorted\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"compatibilityGroupJ-{{ option.key }}\"\n                    name=\"compatibilityGroupJ\"\n                    type=\"radio\"\n                    [value]=\"option.value\"\n                    formControlName=\"compatibilityGroupJ\"\n                  />\n                  <label\n                    class=\"govuk-label govuk-radios__label\"\n                    for=\"compatibilityGroupJ-{{ option.key }}\"\n                  >\n                    {{ option.key }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"adrTypeApprovalNo\">\n              ADR type approval number (optional)\n            </label>\n            <input\n              id=\"adrTypeApprovalNo\"\n              type=\"text\"\n              formControlName=\"adrTypeApprovalNo\"\n              class=\"govuk-input govuk-input--width-10\"\n            />\n          </div>\n\n          <!-- Guidance notes -->\n          <div class=\"govuk-form-group\" [formGroup]=\"additionalNotes\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\">\n              Guidance notes (optional)\n            </label>\n            <div class=\"govuk-checkboxes\" formArrayName=\"number\">\n              <ng-container\n                *ngFor=\"let note of number.controls; let i = index\"\n                [formGroup]=\"note\"\n              >\n                <div class=\"govuk-checkboxes__item\">\n                  <input\n                    id=\"note_{{ i }}\"\n                    type=\"checkbox\"\n                    [value]=\"guidanceNotesOptions[i].selected\"\n                    [formControl]=\"note.get('selected')\"\n                    class=\"govuk-checkboxes__input\"\n                  />\n                  <label class=\"govuk-label govuk-checkboxes__label\" for=\"permittedGood_{{ i }}\">\n                    {{ note.get('name').value }}\n                  </label>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "AdrReasonModalComponent",
            "id": "component-AdrReasonModalComponent-93b1eed718b84309952ba24cce3c7d055766aeb8bdcb6b3a88eb1a3349e48bda93bf7ed7bdeb8b0b10ee8030c11de87af4ad23625611179d7a29c5b5e5c33f0f",
            "file": "archive/src/app/shared/adr-reason-modal/adr-reason-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-adr-reason-modal",
            "styleUrls": [
                "./adr-reason-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./adr-reason-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<AdrReasonModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "modalData",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modalData",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  response: string;\r\n  context: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'vtm-adr-reason-modal',\r\n  templateUrl: './adr-reason-modal.component.html',\r\n  styleUrls: ['./adr-reason-modal.component.scss']\r\n})\r\nexport class AdrReasonModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AdrReasonModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) {}\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  save(modalData: string): void {\r\n    this.dialogRef.close({ isSave: true, data: modalData });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.enter-reason-for-cha {\n  color: #0b0c0c;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 43px;\n  text-align: left;\n  width: fit-content;\n}\ntextarea {\n  width: 80% !important;\n}\n\n.cancel {\n  color: #005ea5;\n  font-family: 'GDS Transport', Arial, sans-serif;\n  font-size: 19px;\n  font-weight: 300;\n  line-height: 44px;\n  text-align: left;\n  padding-left: 2rem;\n  cursor: pointer;\n  span {\n    border-bottom: solid;\n    border-bottom-width: 2px;\n  }\n}\n",
                    "styleUrl": "./adr-reason-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<AdrReasonModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<AdrReasonModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div mat-dialog-content>\r\n  <h1 class=\"govuk-heading-m enter-reason-for-cha\">{{ data.context }}</h1>\r\n  <textarea\r\n    class=\"govuk-textarea\"\r\n    id=\"reasonForCreation\"\r\n    rows=\"8\"\r\n    [(ngModel)]=\"data.response\"\r\n    aria-describedby=\"reasonForCreation\"\r\n  >\r\n  </textarea>\r\n</div>\r\n\r\n<button\r\n  class=\"govuk-button\"\r\n  data-module=\"govuk-button\"\r\n  cdkFocusInitial\r\n  (click)=\"save(data.response)\"\r\n>\r\n  Save technical record\r\n</button>\r\n\r\n<a class=\"cancel\" (click)=\"close()\">\r\n  <span>Cancel</span>\r\n</a>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b77381b8d9b709cef4f4b323d18bff49f1ab3aafc1d43c2941926db88dfd146c83d31d5d7ceb8141f95ed0ca81d7fb52b30fc1d4d62c6490d45decb37fd54142",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'vtm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { initAll } from 'govuk-frontend/govuk/all';\nimport { UserService } from './user-service/user-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'vtm';\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit() {\n    initAll();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-header [username]=\"userService.userName$ | async\" (logOutEvent)=\"userService.logOut()\"></app-header>\n\n<div class=\"govuk-width-container\">\n  <main class=\"govuk-main-wrapper\">\n    <router-outlet></router-outlet>\n  </main>\n</div>\n\n<app-footer></app-footer>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d86b0a94cd27f14c90be931d26163ab408dfe4cd1d8362da8ae9383e82ee7978e066b8aa12aa135b9ff8acb8885ed1a1eea7ffb59e060429adba78b87a4d7da2-1",
            "file": "archive/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-app",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { initAll } from 'govuk-frontend';\n\n@Component({\n  selector: 'vtm-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    initAll();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.form-state {\n  margin: 20px 20px 20px 10px;\n  overflow: auto;\n  min-width: 500px;\n  max-width: 1248px;\n}\n\n.isDisabled {\n  color: currentColor;\n  cursor: not-allowed;\n  opacity: 0.5;\n  text-decoration: none;\n}\n\n$font-stack: GDSTransportWebsite;\n.expander-icon {\n  color: #0b0c0c;\n  font-size: 15px;\n  font-weight: 300;\n  letter-spacing: -0.21px;\n  line-height: 55px;\n  width: 20.8px;\n  text-align: center;\n}\n\n.ng-animating mat-card mat-expansion-panel-header {\n  height: 80px;\n}\n\n.ng-animating mat-card div.mat-expansion-panel-content {\n  height: 0px;\n  visibility: hidden;\n}\n\n.no-animate {\n  -webkit-transition: none !important;\n  transition: none !important;\n}\n\n.mt-1 {\n  margin-top: 1rem;\n}\n\n.mb-1 {\n  margin-bottom: 1rem;\n}\n\n.no-padding {\n  padding: 0 !important;\n}\n\n.no-margin {\n  margin: 0 !important;\n}\n\ndd {\n  & ul {\n    padding-left: 0%;\n  }\n}\n\n::ng-deep .mat-expansion-panel-body {\n  padding: 0 !important;\n}\n\n::ng-deep .auto-pad .mat-expansion-panel-spacing {\n  margin: 0 !important;\n}\n\n.custom-header .mat-expansion-panel-header-title,\n.custom-header .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.custom-header .mat-expansion-panel-header {\n  padding: 0;\n}\n\n.custom-header,\n.open-close-all {\n  border-bottom-color: $govuk-border-colour;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n\n.custom-header .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: end;\n  flex-direction: row-reverse;\n  margin-right: 0%;\n}\n\n.disable_ripple:hover {\n  background: #fff !important;\n  text-decoration-line: underline;\n  text-decoration-style: solid;\n  text-decoration-color: blue;\n}\n\n.rotate_90 {\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -o-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n::ng-deep .custom-header > .mat-expansion-indicator:after {\n  color: #777;\n  font-weight: bold;\n  float: right;\n  margin-left: 5px;\n}\n\n.expansion-icon {\n  color: $govuk-text-colour;\n  font-size: 18px;\n  font-weight: 300;\n  letter-spacing: -0.21px;\n  line-height: 55px;\n  width: 20.8px;\n  text-align: center;\n}\n\n.item-technical-record {\n  color: $govuk-brand-colour;\n  font-size: 36px;\n  font-weight: 700;\n  letter-spacing: -0.11px;\n  line-height: 43px;\n  width: 284.96px;\n  text-align: left;\n  margin-top: 2%;\n  white-space: nowrap;\n}\n\n.accordion {\n  background-color: #eee;\n  color: #1a1a1a;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n  border-bottom-color: #a5acbd;\n  border-top-color: #a5acbd;\n  border-top-width: thin;\n}\n\n.active,\n.accordion:hover {\n  background-color: #54fa50;\n}\n\n.accordion:after {\n  content: '\\002B';\n  color: #777;\n  font-weight: bold;\n  float: right;\n  margin-left: 5px;\n}\n\n.active:after {\n  content: '\\2212';\n  border-bottom-color: #a5acbd;\n  border-top-color: #a5acbd;\n  border-top-width: thin;\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n\n.title {\n  color: $govuk-text-colour;\n  font-size: 48px;\n  font-weight: 700;\n  letter-spacing: -0.09px;\n  line-height: 58px;\n  width: 379px;\n  text-align: left;\n}\n\n.left-pad {\n  margin-left: 5%;\n\n  .rectangle {\n    background-color: $govuk-border-colour;\n    width: 10px;\n    height: 60px;\n  }\n\n  .grid-container-technical-record-status {\n    display: grid;\n    grid-column-gap: 10px;\n    grid-template-columns: 10px 80px 100px auto;\n    width: 50%;\n  }\n\n  .grid-item-technical-record-status {\n    text-align: left;\n    padding-top: 25%;\n    font-family: 'GDS Transport', Arial, sans-serif;\n  }\n\n  .grid-item-technical-record-status-value {\n    text-align: left;\n    padding-top: 20%;\n    margin-left: -17%;\n    font-family: 'GDS Transport', Arial, sans-serif;\n  }\n}\n\n.auto-pad {\n  margin-left: 5%;\n  margin-right: 5%;\n\n  &.technical-record-details {\n    margin-top: 5%;\n  }\n}\n\n.records-container {\n  width: 100%;\n  overflow-x: scroll;\n  border: 1px solid rgba(0, 0, 0, 0.03);\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\n  margin: 4px;\n\n  & .records-container-title {\n    align-content: center;\n    align-items: center;\n    display: block;\n    justify-content: center;\n    padding: 8px 20px;\n    color: rgba(0, 0, 0, 0.54);\n    background: rgba(0, 0, 0, 0.03);\n\n    & .records-container-title-spacer {\n      display: flex;\n      flex-wrap: wrap;\n      color: rgba(0, 0, 0, 0.54);\n\n      > div {\n        flex: 0 50%;\n      }\n\n      & .record-search-title-text {\n        padding-top: 1%;\n      }\n    }\n  }\n\n  & .records-container-body {\n    padding: 30px;\n    display: flex;\n  }\n}\n\n.mat-expanded {\n  border: none !important;\n}\n\n.open-close-all {\n  display: flex;\n  justify-content: flex-end;\n\n  ::ng-deep a {\n    color: $govuk-link-colour;\n    font-size: 19px;\n    font-weight: 500;\n    letter-spacing: -0.09px;\n    line-height: 45px;\n    width: 73px;\n    text-align: right;\n    flex: 1;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n\n::ng-deep .item-technical-record:hover,\n.mat-expansion-panel-header:hover {\n  color: $govuk-link-colour;\n  background: none !important;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.notes-section {\n  font-weight: 100 !important;\n}\n\n::ng-deep .govuk-summary-list__key {\n  width: 355px !important;\n  white-space: nowrap;\n}\n\n::ng-deep .main-details {\n  padding: 1.5% 0 1.5% 0 !important;\n}\n\n@media only screen and (max-width: 600px) {\n  .item-technical-record {\n    white-space: normal !important;\n    font-size: 24px !important;\n  }\n}\n\n::ng-deep .table-details thead tr th:nth-child(1),\n.table-details tbody tr th:nth-child(1) {\n  width: 312px !important;\n}\n\n::ng-deep .table-details tbody tr > *:not(:first-child) {\n  width: 200px !important;\n}\n",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<vtm-shell></vtm-shell>\n"
        },
        {
            "name": "ApplicantComponent",
            "id": "component-ApplicantComponent-edf5e85073b269f11fbcdb1ccb0dc426c14fa9662fe9230a9695c598ddba7366ea102ca5b5d8e82231752c6a7e5d4464eaa2e28d9c8c245fa032c0220115a517",
            "file": "archive/src/app/technical-record/applicant/applicant.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-applicant",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./applicant.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "address1And2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Applicant",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { Applicant, TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-applicant',\n  templateUrl: './applicant.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApplicantComponent implements OnChanges {\n  @Input() techRecord: TechRecord;\n  @Input() editState: boolean;\n\n  address1And2: string;\n  applicantDetails: Applicant;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { techRecord } = changes;\n\n    if (techRecord) {\n      this.applicantDetails = !!this.techRecord.applicantDetails\n        ? this.techRecord.applicantDetails\n        : ({} as Applicant);\n\n      this.address1And2 = Object.keys(this.applicantDetails).length\n        ? `${this.applicantDetails.address1} ${this.applicantDetails.address2}`\n        : '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Name</dt>\n      <dd id=\"test-applicantDetails-name\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.name | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Building and street</dt>\n      <dd id=\"test-applicantDetails-address\" class=\"govuk-summary-list__value\">\n        {{ address1And2 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Town or city</dt>\n      <dd id=\"test-applicantDetails-postTown\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.postTown | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">County</dt>\n      <dd id=\"test-applicantDetails-address3\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.address3 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Postcode</dt>\n      <dd id=\"test-applicantDetails-postCode\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.postCode | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Telephone number</dt>\n      <dd id=\"test-applicantDetails-telephoneNumber\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.telephoneNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Email address</dt>\n      <dd id=\"test-applicantDetails-emailAddress\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails?.emailAddress | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-applicant-edit [applicant]=\"applicantDetails\"></vtm-applicant-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "ApplicantDetailsComponent",
            "id": "component-ApplicantDetailsComponent-ddd167184b53c8f957ebacee70509d6b385f10d6f502b4ef7b6483eea2cf5c5c33a78f4cc6af6b42ffc98668cc91646032dc5ab4e04715e0388bca3851cfae50",
            "file": "archive/src/app/technical-record/adr/applicant-details/applicant-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-applicant-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./applicant-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicantDetails",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { ApplicantDetails, AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-applicant-details',\n  templateUrl: './applicant-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApplicantDetailsComponent implements OnChanges {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  applicantDetails: ApplicantDetails;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    this.applicantDetails = !!this.adrDetails.applicantDetails\n      ? this.adrDetails.applicantDetails\n      : ({} as ApplicantDetails);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Owner/operator details</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Name</dt>\n      <dd id=\"test-ownerDetails-name\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails.name | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Street</dt>\n      <dd id=\"test-ownerDetails-street\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails.street | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Town</dt>\n      <dd id=\"test-ownerDetails-town\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails.town | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">City</dt>\n      <dd id=\"test-ownerDetails-city\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails.city | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Postcode</dt>\n      <dd id=\"test-ownerDetails-postcode\" class=\"govuk-summary-list__value\">\n        {{ applicantDetails.postcode | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"edit\">\n  <vtm-applicant-details-edit [applicantDetails]=\"applicantDetails\"></vtm-applicant-details-edit>\n</ng-container>\n"
        },
        {
            "name": "ApplicantDetailsEditComponent",
            "id": "component-ApplicantDetailsEditComponent-914d74f277b2929f7dbf42179304585c0d4e666e7e9ee1b941f8fe4d54a5f1f8fe0c14c6e3f8cb98807f15d9ade49d4732127f631b2bb216050aaa70e5f93245",
            "file": "archive/src/app/technical-record/adr/applicant-details/edit/applicant-details-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-applicant-details-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./applicant-details-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ApplicantDetails",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, ViewChild, Input } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { ApplicantDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-applicant-details-edit',\n  templateUrl: './applicant-details-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApplicantDetailsEditComponent extends AdrComponent implements OnInit {\n  adrForm: FormGroup;\n\n  @Input() applicantDetails: ApplicantDetails;\n\n  ngOnInit(): void {\n    this.adrForm = super.setUp();\n\n    const details: ApplicantDetails = !!this.applicantDetails\n      ? this.applicantDetails\n      : ({} as ApplicantDetails);\n\n    this.adrForm.addControl(\n      'applicantDetails',\n      this.fb.group({\n        name: this.fb.control(details.name, [Validators.required]),\n        street: this.fb.control(details.street, [Validators.required]),\n        town: this.fb.control(details.town, [Validators.required]),\n        city: this.fb.control(details.city, [Validators.required]),\n        postcode: this.fb.control(details.postcode, [Validators.required])\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m\">Owner/operator details</h2>\n\n          <div class=\"govuk-form-group\" formGroupName=\"applicantDetails\">\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"name\">\n                Name\n              </label>\n              <input\n                id=\"name\"\n                formControlName=\"name\"\n                type=\"text\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"street\">\n                Street\n              </label>\n              <input\n                id=\"street\"\n                type=\"text\"\n                formControlName=\"street\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"town\">\n                Town\n              </label>\n              <input\n                id=\"town\"\n                type=\"text\"\n                formControlName=\"town\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"city\">\n                City\n              </label>\n              <input\n                id=\"city\"\n                type=\"text\"\n                formControlName=\"city\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"postcode\">\n                Postcode\n              </label>\n              <input\n                id=\"postcode\"\n                formControlName=\"postcode\"\n                class=\"govuk-input govuk-input--width-10\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ApplicantEditComponent",
            "id": "component-ApplicantEditComponent-1d871901b0479d0d675f695d2ceabc4cca8ab4fb68166d9b1bff95cbf70aa8a5b9485e3b49594581c7417e1feec4a248e2897fba8503b4e9917f758586d7b732",
            "file": "archive/src/app/technical-record/applicant/edit/applicant-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-applicant-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./applicant-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "applicant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Applicant",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, ControlContainer, FormGroupDirective, FormBuilder } from '@angular/forms';\n\nimport { Applicant } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-applicant-edit',\n  templateUrl: './applicant-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class ApplicantEditComponent implements OnInit {\n  @Input() applicant: Applicant;\n\n  techRecordFg: FormGroup;\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  get applicantDetails() {\n    return this.techRecordFg.get('applicantDetails') as FormGroup;\n  }\n\n  ngOnInit() {\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n\n    const applicantdDetails: Applicant = !!this.applicant ? this.applicant : ({} as Applicant);\n\n    this.techRecordFg.addControl(\n      'applicantDetails',\n      this.fb.group({\n        name: this.fb.control(applicantdDetails.name),\n        address1: this.fb.control(applicantdDetails.address1),\n        address2: this.fb.control(applicantdDetails.address2),\n        postTown: this.fb.control(applicantdDetails.postTown),\n        address3: this.fb.control(applicantdDetails.address3),\n        postCode: this.fb.control(applicantdDetails.postCode),\n        telephoneNumber: this.fb.control(applicantdDetails.telephoneNumber),\n        emailAddress: this.fb.control(applicantdDetails.emailAddress)\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "applicantDetails": {
                    "name": "applicantDetails",
                    "getSignature": {
                        "name": "applicantDetails",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <h2 class=\"govuk-heading-m\">Applicant</h2>\n\n          <ng-container class=\"govuk-form-group\" [formGroup]=\"applicantDetails\">\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-name\">\n                Name\n              </label>\n              <input\n                id=\"test-edit-name\"\n                formControlName=\"name\"\n                type=\"text\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-address1\">\n                Building and street\n              </label>\n              <input\n                id=\"test-edit-address1\"\n                type=\"text\"\n                formControlName=\"address1\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-address2\">\n              </label>\n              <input\n                id=\"test-edit-address2\"\n                type=\"text\"\n                formControlName=\"address2\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-postTown\">\n                Town or city\n              </label>\n              <input\n                id=\"test-edit-postTown\"\n                type=\"text\"\n                formControlName=\"postTown\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-address3\">\n                County (optional)\n              </label>\n              <input\n                id=\"test-edit-address3\"\n                type=\"text\"\n                formControlName=\"address3\"\n                class=\"govuk-input govuk-input--width-20\"\n                vtmNullValue\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-psotCode\">\n                Postcode (optional)\n              </label>\n              <input\n                id=\"test-edit-postCode\"\n                type=\"text\"\n                formControlName=\"postCode\"\n                class=\"govuk-input govuk-input--width-20\"\n                vtmNullValue\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-telephoneNumber\">\n                Telephone number (optional)\n              </label>\n              <input\n                id=\"test-edit-telephoneNumber\"\n                type=\"text\"\n                formControlName=\"telephoneNumber\"\n                class=\"govuk-input govuk-input--width-20\"\n                vtmNullValue\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-emailAddress\">\n                Email address (optional)\n              </label>\n              <input\n                id=\"test-edit-emailAddress\"\n                type=\"text\"\n                formControlName=\"emailAddress\"\n                class=\"govuk-input govuk-input--width-20\"\n                vtmNullValue\n              />\n            </div>\n          </ng-container>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "AuthorisationIntoServiceComponent",
            "id": "component-AuthorisationIntoServiceComponent-beee70241031cd1c3a032afc893f35f88a5a624d3017262a6cc6a96c988654a3d360f1b7b4f793488b44328af0d2e47d720087177c58f080e84e2d77319757aa",
            "file": "archive/src/app/technical-record/authorisation-into-service/authorisation-into-service.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-authorisation-into-service",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./authorisation-into-service.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "authIntoService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "AuthIntoService",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AuthIntoService } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-authorisation-into-service',\n  templateUrl: './authorisation-into-service.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthorisationIntoServiceComponent implements OnInit {\n  @Input() authIntoService: AuthIntoService;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">COC issue date</dt>\n    <dd id=\"test-cocIssueDate\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"authIntoService?.cocIssueDate; else hyphen\">\n        {{ authIntoService?.cocIssueDate | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Date received</dt>\n    <dd id=\"test-dateReceived\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"authIntoService?.dateReceived; else hyphen\">\n        {{ authIntoService?.dateReceived | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Date pending</dt>\n    <dd id=\"test-datePending\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"authIntoService?.datePending; else hyphen\">\n        {{ authIntoService?.datePending | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Date authorised</dt>\n    <dd id=\"test-dateAuthorised\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"authIntoService?.datePending; else hyphen\">\n        {{ authIntoService?.dateAuthorised | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Date rejected</dt>\n    <dd id=\"test-dateRejected\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"authIntoService?.dateRejected; else hyphen\">\n        {{ authIntoService?.dateRejected | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-2412d6e79dfb45c7e2ed3acb4f8cb33bb349898c962f76a56be50ca4380367190566a1d74cebb20196c9c7aeb95ed754db0e729280ab1ec2f2e25ba0e95a1a65",
            "file": "archive/src/app/shared/components/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AutocompleteComponent), multi: true\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: FormFieldControl, useExisting: AutocompleteComponent\n}",
                    "type": "component"
                }
            ],
            "selector": "vtm-autocomplete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "aria-describedby",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "autocompleteData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "govInputLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autocompleteInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "controlType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "externalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.id'"
                        }
                    ]
                },
                {
                    "name": "internalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "onchange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "inputValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "inputValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  OnInit,\n  forwardRef,\n  OnDestroy,\n  HostBinding,\n  Injector,\n  Type\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { FormFieldControl } from '@app/shared/components/control';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'vtm-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    },\n    {\n      provide: FormFieldControl,\n      useExisting: AutocompleteComponent\n    }\n  ]\n})\nexport class AutocompleteComponent\n  implements ControlValueAccessor, FormFieldControl, OnInit, OnDestroy {\n  @Input() autocompleteData;\n  @Input('aria-describedby') ariaDescribedBy: string | null;\n  @Input('value') _value = '';\n  @Input('govInputLength') govInputLength: string | null;\n\n  @HostBinding('attr.id')\n  externalId = '';\n\n  autocompleteInput: FormControl;\n  errorMessages?: { rule: string; message: string }[];\n  controlType = 'text';\n  multi = true;\n\n  private internalId = '';\n  private onDestroy$: Subject<void> = new Subject();\n  private onchange: any = () => {};\n\n  @Input()\n  set id(value: string) {\n    this.internalId = value;\n    this.externalId = null;\n  }\n  get id() {\n    return `${this.internalId}`;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onchange(val);\n  }\n  get value() {\n    return this._value;\n  }\n\n  constructor(private injector: Injector) {}\n\n  ngOnInit() {\n    this.autocompleteInput = new FormControl();\n    this.autocompleteInput.valueChanges\n      .pipe(\n        tap((result) => (this.value = result)),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  get ngControl(): NgControl {\n    return this.injector.get<NgControl>(NgControl as Type<NgControl>);\n  }\n\n  writeValue(inputValue: string): void {\n    this.autocompleteInput.patchValue(inputValue);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onchange = fn;\n  }\n\n  registerOnTouched(_: any): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "FormFieldControl",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 63
                    }
                },
                "ngControl": {
                    "name": "ngControl",
                    "getSignature": {
                        "name": "ngControl",
                        "type": "",
                        "returnType": "NgControl",
                        "line": 84
                    }
                }
            },
            "templateData": "<input\n  class=\"govuk-input govuk-input--width-20 autocomplete-input\"\n  type=\"text\"\n  name=\"{{ id }}\"\n  id=\"{{ id }}\"\n  [attr.list]=\"id + '-autocomplete'\"\n  [formControl]=\"autocompleteInput\"\n/>\n<datalist id=\"{{ id + '-autocomplete' }}\">\n  <option *ngFor=\"let item of autocompleteData\" [value]=\"item\">{{ item }}</option>\n</datalist>\n"
        },
        {
            "name": "AxleBrakesComponent",
            "id": "component-AxleBrakesComponent-2b045320f84d7f2764b5682984d1a59172a3a0fb84bbf944615be371d701233a90b824bb435d224665de3ded05d6f143c9e5d938756f30b5601064c5280c280d",
            "file": "archive/src/app/technical-record/brakes/axle-brakes/axle-brakes.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-axle-brakes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./axle-brakes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "axle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Axle",
                    "decorators": []
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Axle } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-axle-brakes',\n  templateUrl: './axle-brakes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AxleBrakesComponent implements OnInit {\n  @Input() vehicleType: string;\n  @Input() axle: Axle;\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt id=\"test-axleNumber-{{ axle.axleNumber }}\" class=\"govuk-summary-list__key\">\n      Axle ({{ axle.axleNumber }})\n    </dt>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Brake actuator</dt>\n    <dd id=\"test-brakeActuator-{{ axle.axleNumber }}\" class=\"govuk-summary-list__value\">\n      {{ axle?.brakes?.brakeActuator | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Lever length</dt>\n    <dd id=\"test-leverLength-{{ axle.axleNumber }}\" class=\"govuk-summary-list__value\">\n      {{ axle?.brakes?.leverLength | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Spring brake parking</dt>\n    <dd id=\"test-springBrakeParking-{{ axle.axleNumber }}\" class=\"govuk-summary-list__value\">\n      {{ axle?.brakes?.springBrakeParking | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n"
        },
        {
            "name": "BatteryListApplicableComponent",
            "id": "component-BatteryListApplicableComponent-8740b173dc00b0ad3b1cfa98de7dff472d17b56fe5b27aea769c6ed6e429302f45c053e6348f270150f03b7fa6c8d76323fa7c8ab72d7b46aeceb0767684b56d",
            "file": "archive/src/app/technical-record/adr/battery-list-applicable/battery-list-applicable.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-battery-list-applicable",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./battery-list-applicable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnInit } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-battery-list-applicable',\n  templateUrl: './battery-list-applicable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BatteryListApplicableComponent implements OnInit {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Battery list</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Applicable</dt>\n      <dd id=\"test-listStatementApplicable\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.listStatementApplicable | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Reference number</dt>\n      <dd id=\"test-batteryListNumber\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.batteryListNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<!-- Edit Battery List -->\n<ng-container *ngIf=\"edit\">\n  <vtm-battery-list-applicable-edit [adrDetails]=\"adrDetails\"></vtm-battery-list-applicable-edit>\n</ng-container>\n"
        },
        {
            "name": "BatteryListApplicableEditComponent",
            "id": "component-BatteryListApplicableEditComponent-66a27a84e18961cbca3a9e8ed8022f76f2147bfd44f0470746909811433a98b6a2248f22ac65b3b818b8a368653bc6a674b1aab6d4eb192d0e45e8392df2c843",
            "file": "archive/src/app/technical-record/adr/battery-list-applicable/edit/battery-list-applicable-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-battery-list-applicable-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./battery-list-applicable-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "batterListValidationState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ValidationState>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showBatteryListSection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listStatementApplicableChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangesForBatteryList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { AdrDetails } from '@app/models/adr-details';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { ValidationState, STATUS } from '../../adr-validation.mapper';\nimport { BOOLEAN_RADIO_OPTIONS } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-battery-list-applicable-edit',\n  templateUrl: './battery-list-applicable-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BatteryListApplicableEditComponent extends AdrComponent implements OnInit {\n  options;\n  adrForm: FormGroup;\n  showBatteryListSection = true;\n  batterListValidationState$: Observable<ValidationState>;\n\n  @Input() adrDetails: AdrDetails;\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n    this.options = BOOLEAN_RADIO_OPTIONS;\n    this.batterListValidationState$ = this.validationMapper.getCurrentState();\n\n    this.adrForm.addControl(\n      'listStatementApplicable',\n      this.fb.control(this.adrDetails.listStatementApplicable)\n    );\n\n    this.adrForm.addControl(\n      'batteryListNumber',\n      this.fb.control(this.adrDetails.batteryListNumber)\n    );\n\n    this.handleFormChanges();\n\n    const { vehicleDetails } = this.adrDetails;\n    if (vehicleDetails && vehicleDetails.type) {\n      this.validationMapper.vehicleTypeSelected(vehicleDetails.type);\n    }\n  }\n\n  handleFormChanges() {\n    this.listStatementApplicableChanges();\n    this.vehicleTypeChangesForBatteryList();\n  }\n\n  listStatementApplicableChanges() {\n    this.adrForm\n      .get('listStatementApplicable')\n      .valueChanges.pipe(\n        tap((value) => {\n          const batteryListRefNum = this.adrForm.get('batteryListNumber') as FormControl;\n\n          if (!value) {\n            batteryListRefNum.reset();\n            batteryListRefNum.clearValidators();\n            batteryListRefNum.setErrors(null);\n          } else {\n            batteryListRefNum.setValidators([Validators.required]);\n          }\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  vehicleTypeChangesForBatteryList() {\n    this.batterListValidationState$\n      .pipe(\n        tap(({ batteryListApplicableEdit }) => {\n          if (batteryListApplicableEdit === STATUS.HIDDEN) {\n            this.showBatteryListSection = false;\n            this.adrForm.get('listStatementApplicable').reset();\n          } else {\n            this.showBatteryListSection = true;\n          }\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  unsorted(): number {\n    return super.unsorted();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\" *ngIf=\"showBatteryListSection\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div [formGroup]=\"adrForm\">\n          <!-- Battery list applicable -->\n          <h2 class=\"govuk-heading-m\">Battery list applicable (optional)</h2>\n\n          <div class=\"govuk-radios govuk-radios--inline\">\n            <div class=\"govuk-radios__item\" *ngFor=\"let option of options | keyvalue: unsorted\">\n              <input\n                class=\"govuk-radios__input\"\n                id=\"listStatementApplicable-{{ option.key }}\"\n                name=\"listStatementApplicable\"\n                formControlName=\"listStatementApplicable\"\n                type=\"radio\"\n                [value]=\"option.value\"\n              />\n              <label\n                class=\"govuk-label govuk-radios__label\"\n                for=\"listStatementApplicable-{{ option.key }}\"\n              >\n                {{ option.key }}\n              </label>\n            </div>\n            <div\n              id=\"conditional-battery-list-applicable\"\n              class=\"govuk-inset-text govuk-!-margin-top-0\"\n              [class.govuk-radios__conditional--hidden]=\"\n                !adrForm.get('listStatementApplicable').value\n              \"\n            >\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"batteryListNumber\">\n                  Reference number\n                </label>\n                <input\n                  id=\"batteryListNumber\"\n                  type=\"text\"\n                  name=\"batteryListNumber\"\n                  formControlName=\"batteryListNumber\"\n                  class=\"govuk-input govuk-input--width-10\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BodyComponent",
            "id": "component-BodyComponent-ee7562cc3cd335ee4333dfac5fbac45c72b609079d147a35eb9b0f7228169e6e9b11051c8a8f365a434628fd63c1212b7ff5ecf563882dee86fbec89f10fc5e5",
            "file": "archive/src/app/technical-record/body/body.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-body",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./body.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBody",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { IBody } from '@app/models/body-type';\n\n@Component({\n  selector: 'vtm-body',\n  templateUrl: './body.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BodyComponent implements OnInit {\n  @Input() editState: boolean;\n  @Input() activeRecord: TechRecord;\n\n  body: IBody;\n\n  constructor() {}\n\n  ngOnInit() {\n    const { make, model, functionCode, conversionRefNo, bodyType } = this.activeRecord;\n\n    this.body = {\n      make,\n      model,\n      functionCode,\n      conversionRefNo,\n      bodyType\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list \">\n    <!-- Make and model have different keys for psv -->\n    <div\n      class=\"govuk-summary-list__row\"\n      *ngIf=\"activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl'\"\n    >\n      <dt class=\"govuk-summary-list__key\">\n        Make\n      </dt>\n      <dd id=\"test-make\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.make | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div\n      class=\"govuk-summary-list__row\"\n      *ngIf=\"activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl'\"\n    >\n      <dt class=\"govuk-summary-list__key\">\n        Model\n      </dt>\n      <dd id=\"test-model\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.model | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Body type\n      </dt>\n      <dd id=\"test-bodyTypeDescription\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.bodyType?.description | DefaultNullOrEmpty | titlecase }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Function\n      </dt>\n      <dd id=\"test-functionCode\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.functionCode | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Conversion reference number\n      </dt>\n      <dd id=\"test-conversionRefNo\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.conversionRefNo | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n\n  <ng-container *ngIf=\"activeRecord.vehicleType === 'psv'\">\n    <vtm-body-psv [activeRecord]=\"activeRecord\"></vtm-body-psv>\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-body-edit [bodyDetails]=\"body\"></vtm-body-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "BodyEditComponent",
            "id": "component-BodyEditComponent-16bb85bfecca4e30e1d751214bf4897417243c34704446cff69d84fadc53d505a298c33273bfc9ca4285f12e2fa37a550e2ea814d3bb57693636fdbc1eb54174",
            "file": "archive/src/app/technical-record/body/edit/body-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-body-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./body-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bodyDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "IBody",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bodyTypeDescOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "functionOptions",
                    "defaultValue": "FUNCTION_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "makeOptions",
                    "defaultValue": "makeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormGroupDirective, FormBuilder } from '@angular/forms';\n\nimport { IBody, BodyType } from '@app/models/body-type';\nimport { SelectOption } from '@app/models/select-option';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport {\n  BODY_TYPE_DESC,\n  FUNCTION_OPTIONS\n} from '@app/technical-record/technical-record.constants';\nimport { makeOptions } from './../bodyList';\n\n@Component({\n  selector: 'vtm-body-edit',\n  templateUrl: './body-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BodyEditComponent implements OnInit {\n  @Input() bodyDetails: IBody;\n\n  techRecordFg: FormGroup;\n  bodyTypeDescOptions: SelectOption[];\n  functionOptions = FUNCTION_OPTIONS;\n  makeOptions: string[] = makeOptions;\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.bodyTypeDescOptions = new DisplayOptionsPipe().transform(BODY_TYPE_DESC);\n\n    const bodyType = this.bodyDetails.bodyType ? this.bodyDetails.bodyType : ({} as BodyType);\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl('make', this.fb.control(this.bodyDetails.make));\n    this.techRecordFg.addControl('model', this.fb.control(this.bodyDetails.model));\n    this.techRecordFg.addControl('functionCode', this.fb.control(this.bodyDetails.functionCode));\n    this.techRecordFg.addControl(\n      'conversionRefNo',\n      this.fb.control(this.bodyDetails.conversionRefNo)\n    );\n\n    this.techRecordFg.addControl(\n      'bodyType',\n      this.fb.group({\n        description: this.fb.control(bodyType.description)\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <!-- Make -->\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-make\">\n              Make\n            </label>\n            <vtm-autocomplete\n              [autocompleteData]=\"makeOptions\"\n              [govInputLength]=\"20\"\n              id=\"test-edit-make\"\n              ariaDescribedBy=\"make\"\n              formControlName=\"make\"\n              ngDefaultControl\n            ></vtm-autocomplete>\n          </div>\n\n          <!-- Model -->\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-model\">\n              Model\n            </label>\n            <input\n              id=\"test-edit-model\"\n              type=\"text\"\n              maxlength=\"30\"\n              formControlName=\"model\"\n              class=\"govuk-input govuk-input--width-20\"\n            />\n          </div>\n\n          <!-- Body type -->\n          <div class=\"govuk-form-group\" [formGroup]=\"techRecordFg.get('bodyType')\">\n            <label\n              for=\"test-edit-bodyType-description\"\n              class=\"govuk-label govuk-!-font-weight-bold\"\n            >\n              Body type\n            </label>\n            <select\n              id=\"test-edit-bodyType-description\"\n              formControlName=\"description\"\n              class=\"govuk-select\"\n            >\n              <option *ngFor=\"let desc of bodyTypeDescOptions\" [ngValue]=\"desc.name\">\n                {{ desc.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Function -->\n          <div class=\"govuk-radios govuk-!-margin-bottom-6\">\n            <label for=\"test-edit-functionCode\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Function (optional)\n            </label>\n            <div class=\"govuk-radios__item\" *ngFor=\"let option of functionOptions | keyvalue\">\n              <input\n                class=\"govuk-radios__input\"\n                id=\"test-edit-functionCode-{{ option.key }}\"\n                name=\"functionCode\"\n                formControlName=\"functionCode\"\n                type=\"radio\"\n                [value]=\"option.value\"\n              />\n              <label\n                class=\"govuk-label govuk-radios__label\"\n                for=\"test-edit-functionCode-{{ option.key }}\"\n              >\n                {{ option.key }}\n              </label>\n            </div>\n          </div>\n\n          <!-- Conversion reference number -->\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-conversionRefNo\">\n              Conversion reference number (optional)\n            </label>\n            <input\n              id=\"test-edit-conversionRefNo\"\n              type=\"text\"\n              maxlength=\"10\"\n              formControlName=\"conversionRefNo\"\n              class=\"govuk-input govuk-input--width-10\"\n              vtmNullValue\n            />\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BodyPsvComponent",
            "id": "component-BodyPsvComponent-62e3998001eaa9571d284a759e9d464b50c4c3d6196703391ae1824c9e423639f4ffac6e1ed681ed7a2696d81cc36f660d60fed6d0364a25775af26d53c7483d",
            "file": "archive/src/app/technical-record/body/body-psv/body-psv.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-body-psv",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./body-psv.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-body-psv',\n  templateUrl: './body-psv.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BodyPsvComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Make\n    </dt>\n    <dd id=\"test-bodyMake\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.bodyMake | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Model\n    </dt>\n    <dd id=\"test-bodyModel\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.bodyModel | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Model literal\n    </dt>\n    <dd id=\"test-modelLiteral\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.modelLiteral | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Chassis make\n    </dt>\n    <dd id=\"test-chassisMake\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.chassisMake | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Chassis model\n    </dt>\n    <dd id=\"test-chassisModel\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.chassisModel | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n"
        },
        {
            "name": "BrakesComponent",
            "id": "component-BrakesComponent-433b08388dfed1b4ff5867b88ecc0ee7e78d774586137a5f4bb7a429a6c11da1f96861c38c3781ef8fb1fc188fccc722f8515bf4f513f03d00ef3d55131e1c1d",
            "file": "archive/src/app/technical-record/brakes/brakes.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-brakes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./brakes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "axles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Axle[]",
                    "decorators": []
                },
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Brakes",
                    "decorators": []
                },
                {
                    "name": "currentVehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Brakes, Axle } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-brakes',\n  templateUrl: './brakes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrakesComponent implements OnInit {\n  @Input() currentVehicleType: string;\n  @Input() brakes: Brakes;\n  @Input() axles: Axle[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Load sensing valve</dt>\n    <dd id=\"test-loadSensingValve\" class=\"govuk-summary-list__value\">\n      {{ brakes?.loadSensingValve | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Antilock braking system</dt>\n    <dd id=\"test-antilockBrakingSystem\" class=\"govuk-summary-list__value\">\n      {{ brakes?.antilockBrakingSystem | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<ng-container *ngIf=\"axles && currentVehicleType === 'trl'\">\n  <ng-container *ngFor=\"let axle of axles\">\n    <vtm-axle-brakes [axle]=\"axle\" [vehicleType]=\"currentVehicleType\"></vtm-axle-brakes>\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"currentVehicleType === 'psv'\">\n  <vtm-brakes-psv [brakes]=\"brakes\"></vtm-brakes-psv>\n</ng-container>\n"
        },
        {
            "name": "BrakesPsvComponent",
            "id": "component-BrakesPsvComponent-2e2156fa6d0e461523c82eeefb87fb5da9fccdf0aa5f4e77ec3f61121550b5bcd1068af8a61283effb410921895b6e712401809ba3f7d382203e06da946e1c5f",
            "file": "archive/src/app/technical-record/brakes/brakes-psv/brakes-psv.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-brakes-psv",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./brakes-psv.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "brakes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Brakes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { Brakes } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-brakes-psv',\n  templateUrl: './brakes-psv.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrakesPsvComponent implements OnInit {\n  @Input() brakes: Brakes;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Brake code</dt>\n    <dd id=\"test-brakeCode\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeCode | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Service brake information</dt>\n    <dd id=\"test-dataTrBrakeOne\" class=\"govuk-summary-list__value\">\n      {{ brakes?.dataTrBrakeOne | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Secondary brake information</dt>\n    <dd id=\"test-dataTrBrakeTwo\" class=\"govuk-summary-list__value\">\n      {{ brakes?.dataTrBrakeTwo | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Parking brake information</dt>\n    <dd id=\"test-dataTrBrakeThree\" class=\"govuk-summary-list__value\">\n      {{ brakes?.dataTrBrakeThree | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Retarder brake one</dt>\n    <dd id=\"test-retarderBrakeOne\" class=\"govuk-summary-list__value\">\n      {{ brakes?.retarderBrakeOne | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Retarder brake two</dt>\n    <dd id=\"test-retarderBrakeTwo\" class=\"govuk-summary-list__value\">\n      {{ brakes?.retarderBrakeTwo | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <br />\n  <h2 class=\"govuk-heading-m\">Brake force wheels not locked</h2>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Service</dt>\n    <dd id=\"test-serviceBrakeForceA\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsNotLocked?.serviceBrakeForceA | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Secondary</dt>\n    <dd id=\"test-secondaryBrakeForceA\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsNotLocked?.secondaryBrakeForceA | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Parking</dt>\n    <dd id=\"test-parkingBrakeForceA\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsNotLocked?.parkingBrakeForceA | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <br />\n  <h2 class=\"govuk-heading-m\">Brake force wheels up to half locked</h2>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Service</dt>\n    <dd id=\"test-serviceBrakeForceB\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsUpToHalfLocked?.serviceBrakeForceB | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Secondary</dt>\n    <dd id=\"test-secondaryBrakeForceB\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsUpToHalfLocked?.secondaryBrakeForceB | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Parking</dt>\n    <dd id=\"test-parkingBrakeForceB\" class=\"govuk-summary-list__value\">\n      {{ brakes?.brakeForceWheelsUpToHalfLocked?.parkingBrakeForceB | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n"
        },
        {
            "name": "CertificateComponent",
            "id": "component-CertificateComponent-3a82725f5b8698c8b74978bd46e5830c8bd52bc60f4887148d9ecdb4c55075f74dab87ccf248b6931553e482317c52d7d8cf445c87e72af2c5624941b24fbdeb",
            "file": "archive/src/app/technical-record/adr/certificate/certificate.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-certificate",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./certificate.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isCertificateRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getCertificateRequested",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapGuidanceNotesToCodes",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\nimport { NOTES } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-certificate',\n  templateUrl: './certificate.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CertificateComponent implements OnChanges {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  isCertificateRequested: boolean;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    const isAvailable =\n      !!this.adrDetails.additionalNotes && !!this.adrDetails.additionalNotes.guidanceNotes;\n\n    this.isCertificateRequested = isAvailable\n      ? this.getCertificateRequested(this.adrDetails.additionalNotes)\n      : null;\n  }\n\n  getCertificateRequested({ guidanceNotes }: { guidanceNotes: string[] }) {\n    if (guidanceNotes) {\n      return guidanceNotes.some(\n        (value) => NOTES.GUIDANCENOTE_CODE === this.mapGuidanceNotesToCodes(value)\n      );\n    }\n  }\n\n  mapGuidanceNotesToCodes(value: string): string {\n    if (value) {\n      return value\n        .toLowerCase()\n        .trim()\n        .replace(/ /gi, '');\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Certificate</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Required</dt>\n      <dd id=\"test-guidanceNotes\" class=\"govuk-summary-list__value\">\n        <ng-container *ngIf=\"isCertificateRequested; else hyphen\">\n          Yes\n        </ng-container>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<!-- Edit Certificate required -->\n<ng-container *ngIf=\"edit\">\n  <vtm-certificate-edit [hasCertificateRequested]=\"isCertificateRequested\"></vtm-certificate-edit>\n</ng-container>\n"
        },
        {
            "name": "CertificateEditComponent",
            "id": "component-CertificateEditComponent-558b3e5d57473e23c0c903ca5ee31a5644fa1522173862bf404b9388f3e43e0edb43597bf3cc38f1703b4f0cc53094cbde4108dc5c61a321044d37e2a7238fa0",
            "file": "archive/src/app/technical-record/adr/certificate/edit/certificate-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-certificate-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./certificate-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasCertificateRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { BOOLEAN_RADIO_OPTIONS } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-certificate-edit',\n  templateUrl: './certificate-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CertificateEditComponent extends AdrComponent implements OnInit {\n  adrForm: FormGroup;\n  options;\n\n  @Input() hasCertificateRequested: boolean;\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n    this.options = BOOLEAN_RADIO_OPTIONS;\n\n    const group: FormGroup = this.adrForm.get('additionalNotes') as FormGroup;\n\n    if (group !== null) {\n      group.addControl('guidanceNotes', this.fb.control(this.hasCertificateRequested));\n    } else {\n      this.adrForm.addControl(\n        'additionalNotes',\n        this.fb.group({\n          guidanceNotes: this.fb.control(this.hasCertificateRequested)\n        })\n      );\n    }\n  }\n\n  unsorted(): number {\n    return super.unsorted();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m\">Certificate required (optional)</h2>\n\n          <div\n            class=\"govuk-radios govuk-radios--inline\"\n            [formGroup]=\"adrForm.get('additionalNotes')\"\n          >\n            <div class=\"govuk-radios__item\" *ngFor=\"let option of options | keyvalue: unsorted\">\n              <input\n                class=\"govuk-radios__input\"\n                id=\"guidanceNotes-{{ option.key }}\"\n                name=\"guidanceNotes\"\n                formControlName=\"guidanceNotes\"\n                type=\"radio\"\n                [value]=\"option.value\"\n              />\n              <label class=\"govuk-label govuk-radios__label\" for=\"guidanceNotes-{{ option.key }}\">\n                {{ option.key }}\n              </label>\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DateInputComponent",
            "id": "component-DateInputComponent-d8b343dbd7dbefd5cda54c308526b3f93521fdb11a4f5e0576f38dfd30e912f8536cd7c00231db4e1cb17128bf72200de8ca7c8931ec00a29dc3c3c2f0e1cca3",
            "file": "archive/src/app/shared/components/date-input/date-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DateInputComponent), multi: true\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: FormFieldControl, useExisting: DateInputComponent\n}",
                    "type": "component"
                }
            ],
            "selector": "vtm-date-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "aria-describedby",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "controlType",
                    "defaultValue": "'date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "dateInputs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "<p>TODO:\nAdd to implement validator\nEnable validation display in the html\nCheck for entered date is correct i.e not 03-02-2999\nImplement custom validators i.e. minDate, maxDate\nSet some standard internal date error messages</p>\n",
                    "line": 72,
                    "rawdescription": "\n\nTODO:\nAdd to implement validator\nEnable validation display in the html\nCheck for entered date is correct i.e not 03-02-2999\nImplement custom validators i.e. minDate, maxDate\nSet some standard internal date error messages\n"
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "externalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.id'"
                        }
                    ]
                },
                {
                    "name": "internalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "onchange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  forwardRef,\n  HostBinding,\n  Injector,\n  Type,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport {\n  FormGroup,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  FormControl,\n  NgControl\n} from '@angular/forms';\nimport { map, tap, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { FormFieldControl } from '../control';\n\n/**\n * @usageNotes\n *\n * Date component - receives as input a formControl in the\n * this format\n *\n * ```approvalDate: new FormControl('2020-03-10'),\n *\n * <vtm-date-input\n *   id=\"approvalDate\"\n *   ariaDescribedBy=\"approvalDate\"\n *   formControlName=\"approvalDate\"\n * ></vtm-date-input>\n *\n * ```\n */\n\nlet index = 0;\n\nfunction pad(num: number): string {\n  const value = String(num);\n  return value.length >= 2 ? value : new Array(2 - value.length + 1).join('0') + value;\n}\n\n@Component({\n  selector: 'vtm-date-input',\n  templateUrl: './date-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DateInputComponent),\n      multi: true\n    },\n    {\n      provide: FormFieldControl,\n      useExisting: DateInputComponent\n    }\n  ]\n})\nexport class DateInputComponent\n  implements ControlValueAccessor, FormFieldControl, OnInit, OnDestroy {\n  /**\n   * TODO:\n   * Add to implement validator\n   * Enable validation display in the html\n   * Check for entered date is correct i.e not 03-02-2999\n   * Implement custom validators i.e. minDate, maxDate\n   * Set some standard internal date error messages\n   */\n\n  dateInputs: FormGroup;\n  errorMessages?: { rule: string; message: string }[];\n  controlType = 'date';\n  multi = true;\n\n  @Input('aria-describedby') ariaDescribedBy: string | null;\n\n  @HostBinding('attr.id')\n  externalId = '';\n\n  @Input()\n  set id(value: string) {\n    this.internalId = value;\n    this.externalId = null;\n  }\n  get id() {\n    return `${this.internalId}-${index}`;\n  }\n  private internalId = '';\n\n  @Input('value') _value = '';\n  set value(val) {\n    this._value = val;\n    this.onchange(val);\n  }\n  get value() {\n    return this._value;\n  }\n\n  private onDestroy$: Subject<void> = new Subject();\n  private onchange: any = () => {};\n\n  constructor(private injector: Injector) {\n    index += 1;\n  }\n\n  ngOnInit(): void {\n    this.dateInputs = new FormGroup({\n      day: new FormControl(''),\n      month: new FormControl(''),\n      year: new FormControl('')\n    });\n\n    // get a composite value of the 3 inputs\n    this.dateInputs.valueChanges\n      .pipe(\n        map(({ day, month, year }) => {\n          if (day || month || year) {\n            return [year ? year : '', month ? pad(month) : '', day ? pad(day) : ''].join('-');\n          }\n          return null;\n        }),\n        tap((result) => (this.value = result)),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  get ngControl(): NgControl {\n    // console.log('Value of ngControl', this.injector.get(NgControl));\n    // return this.injector.get(NgControl);\n    return this.injector.get<NgControl>(NgControl as Type<NgControl>);\n  }\n\n  writeValue(dateString: string): void {\n    let day = '';\n    let month = '';\n    let year = '';\n\n    [year, month, day] = (dateString || '').split('-');\n\n    this.dateInputs.patchValue({ day, month, year });\n  }\n\n  registerOnChange(fn: any): void {\n    this.onchange = fn;\n  }\n\n  registerOnTouched(_: any): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 102,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "FormFieldControl",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 83,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 87
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 97
                    }
                },
                "ngControl": {
                    "name": "ngControl",
                    "getSignature": {
                        "name": "ngControl",
                        "type": "",
                        "returnType": "NgControl",
                        "line": 135
                    }
                }
            },
            "templateData": "<ng-container [formGroup]=\"dateInputs\">\n  <div class=\"govuk-date-input\">\n    <div class=\"govuk-date-input__item\">\n      <div class=\"govuk-form-group\">\n        <label class=\"govuk-label govuk-date-input__label\" for=\"{{ id }}-day\">\n          Day\n        </label>\n        <input\n          class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n          [class.govuk-input--error]=\"false\"\n          formControlName=\"day\"\n          id=\"{{ id }}-day\"\n          name=\"dateDay\"\n          type=\"number\"\n          [attr.aria-describedby]=\"ariaDescribedBy\"\n          pattern=\"[0-9]*\"\n          maxlength=\"2\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n\n    <div class=\"govuk-date-input__item\">\n      <div class=\"govuk-form-group\">\n        <label class=\"govuk-label govuk-date-input__label\" for=\"{{ id }}-month\">\n          Month\n        </label>\n        <input\n          class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n          [class.govuk-input--error]=\"false\"\n          formControlName=\"month\"\n          id=\"{{ id }}-month\"\n          name=\"dateMonth\"\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          maxlength=\"2\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n\n    <div class=\"govuk-date-input__item\">\n      <div class=\"govuk-form-group\">\n        <label class=\"govuk-label govuk-date-input__label\" for=\"{{ id }}-year\">\n          Year\n        </label>\n        <input\n          class=\"govuk-input govuk-date-input__input govuk-input--width-4\"\n          [class.govuk-input--error]=\"false\"\n          formControlName=\"year\"\n          id=\"{{ id }}-year\"\n          name=\"dateYear\"\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          minlength=\"4\"\n          maxlength=\"4\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "DdaComponent",
            "id": "component-DdaComponent-171891d466ac33e196f83c7192a250b4d8369ac552165248e41122dcdbb1288532ea46e2043869303767fd98828179c6246137e42661dcf388abe505b364d377",
            "file": "archive/src/app/technical-record/dda/dda.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dda",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dda.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ddaDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "DDA",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DDA } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-dda',\n  templateUrl: './dda.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DdaComponent implements OnInit {\n  @Input() ddaDetails: DDA;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">DDA certificate issued (Yes/No)</dt>\n    <dd id=\"test-certificateIssued\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.certificateIssued | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair capacity</dt>\n    <dd id=\"test-wheelchairCapacity\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairCapacity | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair fittings</dt>\n    <dd id=\"test-wheelchairFittings\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairFittings | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair lift present</dt>\n    <dd id=\"test-wheelchairLiftPresent\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairLiftPresent | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair lift information</dt>\n    <dd id=\"test-wheelchairLiftInformation\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairLiftInformation | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair ramp present</dt>\n    <dd id=\"test-wheelchairRampPresent\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairRampPresent | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Wheelchair ramp information</dt>\n    <dd id=\"test-wheelchairRampInformation\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.wheelchairRampInformation | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Minimum emergency exits needed</dt>\n    <dd id=\"test-minEmergencyExits\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.minEmergencyExits | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Outswing</dt>\n    <dd id=\"test-outswing\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.outswing | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">DDA schedules</dt>\n    <dd id=\"test-ddaSchedules\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.ddaSchedules | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Seatbelts fitted</dt>\n    <dd id=\"test-seatbeltsFitted\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.seatbeltsFitted | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">DDA notes</dt>\n    <dd id=\"test-ddaNotes\" class=\"govuk-summary-list__value\">\n      {{ ddaDetails?.ddaNotes | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n"
        },
        {
            "name": "DeclarationSeenComponent",
            "id": "component-DeclarationSeenComponent-a54035501bea8cb43d92e8755ee2347308e9df48144f178f41fc97705e9eb58a9b37c0b128fe1c5024e4a80a68dbae2d3723a387a589657d248a214b1ab2d812",
            "file": "archive/src/app/technical-record/adr/declaration-seen/declaration-seen.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-declaration-seen",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./declaration-seen.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasNullEmptyWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-declaration-seen',\n  templateUrl: './declaration-seen.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeclarationSeenComponent implements OnChanges {\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  hasNullEmptyWeight: boolean;\n  weight: number;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    this.hasNullEmptyWeight = !this.adrDetails.weight;\n    if (!this.hasNullEmptyWeight) {\n      this.weight = +this.adrDetails.weight * 1000;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Declarations seen</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Manufacturer brake declaration</dt>\n      <dd id=\"test-brakeDeclarationsSeen\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.brakeDeclarationsSeen | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Issuer</dt>\n      <dd id=\"test-brakeDeclarationIssuer\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.brakeDeclarationIssuer | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Brake endurance</dt>\n      <dd id=\"test-brakeEndurance\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.brakeEndurance | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Brake endurance weight (kg)</dt>\n      <dd id=\"test-weight\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"hasNullEmptyWeight\">-</span>\n        <span *ngIf=\"!hasNullEmptyWeight\">{{ weight }}</span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Owner/operator declaration</dt>\n      <dd id=\"test-declarationsSeen\" class=\"govuk-summary-list__value\">\n        {{ adrDetails.declarationsSeen | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"edit\">\n  <vtm-declaration-seen-edit [adrDetails]=\"adrDetails\"></vtm-declaration-seen-edit>\n</ng-container>\n"
        },
        {
            "name": "DeclarationSeenEditComponent",
            "id": "component-DeclarationSeenEditComponent-a44e1fa93de1d4210f8deae2d810a60950abdf7c502e93d97b96b1d673acbee47dbc76ed06a623ef4dfcda590cfa17860bee802eff7de38eace5373bdedd503c",
            "file": "archive/src/app/technical-record/adr/declaration-seen/edit/declaration-seen-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-declaration-seen-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./declaration-seen-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initControls",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-declaration-seen-edit',\n  templateUrl: './declaration-seen-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeclarationSeenEditComponent extends AdrComponent implements OnInit {\n  adrForm: FormGroup;\n  @Input() adrDetails: AdrDetails;\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n\n    this.initControls();\n    this.handleFormChanges();\n  }\n\n  initControls() {\n    this.adrForm.addControl(\n      'brakeDeclarationsSeen',\n      this.fb.control(this.adrDetails.brakeDeclarationsSeen)\n    );\n\n    this.adrForm.addControl(\n      'brakeDeclarationIssuer',\n      this.fb.control(this.adrDetails.brakeDeclarationIssuer)\n    );\n\n    this.adrForm.addControl('brakeEndurance', this.fb.control(this.adrDetails.brakeEndurance));\n\n    this.adrForm.addControl(\n      'weight',\n      this.fb.control(\n        this.adrDetails.weight\n          ? (+this.adrDetails.weight * 1000).toString()\n          : this.adrDetails.weight\n      )\n    );\n\n    this.adrForm.addControl(\n      'declarationsSeen',\n      this.fb.control(this.adrDetails.declarationsSeen)\n    );\n  }\n\n  handleFormChanges(): void {\n    this.adrForm\n      .get('brakeDeclarationsSeen')\n      .valueChanges.pipe(\n        tap((value) => {\n          if (!value) {\n            this.adrForm.get('brakeDeclarationIssuer').reset();\n            this.adrForm.get('brakeEndurance').reset();\n          }\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n\n    this.adrForm\n      .get('brakeEndurance')\n      .valueChanges.pipe(\n        tap((value) => {\n          const weightCtrl = this.adrForm.get('weight') as FormControl;\n\n          if (!value) {\n            weightCtrl.reset();\n            weightCtrl.clearValidators();\n            weightCtrl.setErrors(null);\n          } else {\n            weightCtrl.setValidators([Validators.required]);\n          }\n          // weightCtrl.updateValueAndValidity();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m\">Declarations seen</h2>\n\n          <div class=\"govuk-form-group\">\n            <!-- Manufacturer brake declaration -->\n            <div class=\"govuk-checkboxes\">\n              <div class=\"govuk-checkboxes__item\">\n                <input\n                  id=\"brakeDeclarationsSeen\"\n                  type=\"checkbox\"\n                  [value]=\"adrForm.get('brakeDeclarationsSeen').value\"\n                  formControlName=\"brakeDeclarationsSeen\"\n                  class=\"govuk-checkboxes__input\"\n                />\n                <label for=\"brakeDeclarationsSeen\" class=\"govuk-label govuk-checkboxes__label\">\n                  Manufacturer brake declaration (optional)\n                </label>\n              </div>\n              <!-- Issuer -->\n              <div\n                id=\"conditional-brakeDeclarationsSeen\"\n                class=\"govuk-inset-text govuk-!-margin-top-0\"\n                [class.govuk-checkboxes__conditional--hidden]=\"\n                  !adrForm.get('brakeDeclarationsSeen').value\n                \"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    declarationInput;\n                    context: {\n                      $implicit: { input: 'brakeDeclarationIssuer', label: 'Issuer (optional)' }\n                    }\n                  \"\n                ></ng-container>\n\n                <!-- Brake endurance -->\n                <div class=\"govuk-checkboxes__item govuk-!-margin-left-3\">\n                  <input\n                    id=\"brakeEndurance\"\n                    type=\"checkbox\"\n                    [value]=\"adrForm.get('brakeEndurance').value\"\n                    formControlName=\"brakeEndurance\"\n                    class=\"govuk-checkboxes__input\"\n                  />\n                  <label for=\"brakeEndurance\" class=\"govuk-label govuk-checkboxes__label\">\n                    Brake endurance (optional)\n                  </label>\n                </div>\n                <!-- Weight(kg) -->\n                <div\n                  id=\"conditional-brakeEndurance\"\n                  class=\"govuk-inset-text govuk-!-margin-top-0 govuk-!-margin-left-3\"\n                  [class.govuk-checkboxes__conditional--hidden]=\"\n                    !adrForm.get('brakeEndurance').value\n                  \"\n                >\n                  <ng-container\n                    *ngTemplateOutlet=\"\n                      declarationInput;\n                      context: { $implicit: { input: 'weight', label: 'Weight(kg)' } }\n                    \"\n                  ></ng-container>\n                </div>\n              </div>\n\n              <!-- Owner/operator declaration -->\n              <div class=\"govuk-checkboxes__item\">\n                <input\n                  id=\"declarationsSeen\"\n                  type=\"checkbox\"\n                  [value]=\"adrForm.get('declarationsSeen').value\"\n                  formControlName=\"declarationsSeen\"\n                  class=\"govuk-checkboxes__input\"\n                />\n                <label for=\"declarationsSeen\" class=\"govuk-label govuk-checkboxes__label\">\n                  Owner/operator declaration (optional)\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <ng-template let-decInput #declarationInput>\n            <div class=\"govuk-form-group govuk-!-margin-left-3\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"{{ decInput.input }}\">\n                {{ decInput.label }}\n              </label>\n              <input\n                id=\"{{ decInput.input }}\"\n                type=\"text\"\n                name=\"{{ decInput.input }}\"\n                formControlName=\"{{ decInput.input }}\"\n                class=\"govuk-input govuk-input--width-10\"\n              />\n            </div>\n          </ng-template>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DefectsComponent",
            "id": "component-DefectsComponent-228f752efecefb443635664110a8beff1c733d93fab3bd32cec1d53f313ab0f9db9b295bc5e7c4e87fab369ce7deee50b8f7d62192977d73cf4ec8a156044046",
            "file": "archive/src/app/test-record/defects/defects.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-defects",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./defects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TestType",
                    "decorators": []
                },
                {
                    "name": "testTypesApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestTypesApplicable",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { TestTypesApplicable } from '@app/test-record/test-record.mapper';\n\n@Component({\n  selector: 'vtm-defects',\n  templateUrl: './defects.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefectsComponent implements OnInit {\n  @Input() testType: TestType;\n  @Input() testRecord: TestResultModel;\n  @Input() testTypesApplicable: TestTypesApplicable;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!testTypesApplicable.specialistTestApplicable[testType.testTypeId]\">\n  <dl *ngFor=\"let defect of testType.defects; let i = index\" class=\"govuk-summary-list\">\n    <h2 class=\"govuk-heading-l govuk-!-width-full\">\n      <span class=\"govuk-!-margin-top-3\" id=\"test-deficiencyRef-{{ i }}\">\n        {{ [defect.imNumber, defect.itemNumber] | DisplayByDelimiter: '.' | DefaultNullOrEmpty }}\n        <span *ngIf=\"defect.deficiencyId; else space\">\n          {{ ' (' + defect.deficiencyId + ')' }}\n        </span>\n        <span *ngIf=\"defect.deficiencySubId; else space\">\n          {{ ' (' + defect.deficiencySubId + ')' }}\n        </span>\n      </span>\n      -\n      <span\n        class=\"govuk-tag govuk-!-font-size-24 govuk-!-padding-top-0 govuk-!-padding-bottom-0 govuk-!-padding-left-1 govuk-!-padding-right-1\"\n        [class.tag--black]=\"defect.deficiencyCategory === 'dangerous'\"\n        [class.tag--red]=\"defect.deficiencyCategory === 'major'\"\n        [class.tag--yellow]=\"defect.deficiencyCategory === 'minor'\"\n        [class.tag--white]=\"defect.deficiencyCategory === 'advisory'\"\n      >\n        {{ defect.deficiencyCategory }}\n      </span>\n    </h2>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Category\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-imNumber-imDescription-{{ i }}\">\n        {{\n          [defect.imNumber, defect.imDescription] | DisplayByDelimiter: '. ' | DefaultNullOrEmpty\n        }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Item\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-itemNumber-itemDescription-{{ i }}\">\n        {{\n          [defect.itemNumber, defect.itemDescription]\n            | DisplayByDelimiter: '. '\n            | DefaultNullOrEmpty\n        }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Description\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-deficiencyId-{{ i }}\">\n        <span *ngIf=\"defect.deficiencyId; else space\">\n          {{ ' (' + defect.deficiencyId + ')' }}\n        </span>\n        <span *ngIf=\"defect.deficiencySubId; else space\">\n          {{ ' (' + defect.deficiencySubId + ') ' }}\n        </span>\n        {{ defect.deficiencyText | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Location\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-location-{{ i }}\">\n        {{\n          [\n            defect?.additionalInformation?.location?.vertical | titlecase,\n            defect?.additionalInformation?.location?.horizontal | titlecase,\n            defect?.additionalInformation?.location?.lateral | titlecase,\n            defect?.additionalInformation?.location?.longitudinal | titlecase,\n            defect?.additionalInformation?.location?.rowNumber,\n            defect?.additionalInformation?.location?.seatNumber,\n            defect?.additionalInformation?.location?.axleNumber\n          ]\n            | DisplayByDelimiter: '/'\n            | DefaultNullOrEmpty\n        }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Repaired during test\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-defect-prs-{{ i }}\">\n        {{ defect.prs | DefaultNullOrEmpty | titlecase }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Prohibition issued\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-prohibition-{{ i }}\">\n        {{ defect.prohibitionIssued | DefaultNullOrEmpty | titlecase }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key border--bottom-none\">\n        Additional defect details\n      </dt>\n      <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-additionalInfo-{{ i }}\">\n        {{ defect?.additionalInformation?.notes | DefaultNullOrEmpty | CapitalizeString }}\n      </dd>\n    </div>\n  </dl>\n</ng-container>\n<ng-container *ngIf=\"testTypesApplicable.specialistTestApplicable[testType.testTypeId]\">\n  <dl\n    *ngFor=\"let customDefect of testType.customDefects; let i = index\"\n    class=\"govuk-summary-list\"\n  >\n    <h2 class=\"govuk-heading-l govuk-!-width-full\">\n      <span class=\"govuk-!-margin-top-3\" id=\"test-referenceNumber-{{ i }}\">\n        {{ customDefect.referenceNumber | DefaultNullOrEmpty }}\n      </span>\n    </h2>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Defect name\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-defectName-{{ i }}\">\n        {{ customDefect.defectName | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key border--bottom-none\">\n        Defect notes\n      </dt>\n      <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-defectNotes-{{ i }}\">\n        {{ customDefect.defectNotes | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n  </dl>\n</ng-container>\n<ng-template #space>\n  <span>&nbsp;</span>\n</ng-template>\n"
        },
        {
            "name": "DefectsEditComponent",
            "id": "component-DefectsEditComponent-b2050b56752933e6520b2b99a8dd73f7e27c5157e755081d0acf52f41fab3dad21a6f2c1a6d9c5961de93340d84d5e652ae9ea76f6b6bcf8c1a2c3cce21153a9",
            "file": "archive/src/app/test-record/defects/edit/defects-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-defects-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./defects-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'vtm-defects-edit',\n  templateUrl: './defects-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefectsEditComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  defects-edit works!\n</p>\n"
        },
        {
            "name": "DialogBoxComponent",
            "id": "component-DialogBoxComponent-8bbdd20cb89488a51a7afe651448c68772aa95023922620919a770595033055bae40e382e1f2095574a20998b9c185dd56fdbcddecbfb67a91ed402782e2dc63",
            "file": "archive/src/app/shared/dialog-box/dialog-box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dialog-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogBoxComponent>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "modalData",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modalData",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DialogData } from '@app/models/dialog-data';\n\n@Component({\n  selector: 'vtm-dialog-box',\n  templateUrl: './dialog-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogBoxComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  save(modalData: string): void {\n    this.dialogRef.close({ isSave: true, data: modalData });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogBoxComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogBoxComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div mat-dialog-content>\n  <h2 class=\"govuk-heading-l\">{{ data.context }}</h2>\n  <textarea\n    class=\"govuk-textarea govuk-!-width-three-quarters\"\n    id=\"test-reasonForCreation\"\n    rows=\"8\"\n    [(ngModel)]=\"data.response\"\n    aria-describedby=\"reasonForCreation\"\n  >\n  </textarea>\n</div>\n\n<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0\">\n    <button\n      class=\"govuk-button\"\n      id=\"test-{{ data.actionName }}\"\n      data-module=\"govuk-button\"\n      (click)=\"save(data.response)\"\n      cdkFocusInitial\n    >\n      {{ data.actionName }}\n    </button>\n  </div>\n  <div\n    class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0 govuk-!-padding-top-2\"\n  >\n    <a class=\"govuk-link govuk-!-margin-left-2\" (click)=\"close()\" href=\"javascript:void(0)\">\n      <span>Cancel</span>\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "DialogBoxConfirmationComponent",
            "id": "component-DialogBoxConfirmationComponent-d73c4cbb164c48e53576b8def292213c35c9b6e2696ab44b0eca048f6123b30be2e307d830c43c6ba4d65fd7d67d52bd7d51d696fa64ee952b5cc6d8de38e2ed",
            "file": "archive/src/app/shared/dialog-box-confirmation/dialog-box-confirmation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dialog-box-confirmation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog-box-confirmation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogBoxComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DialogBoxComponent } from '@app/shared/dialog-box/dialog-box.component';\n\nexport interface DialogData {\n  context: string;\n  actionName: string;\n}\n\n@Component({\n  selector: 'vtm-dialog-box-confirmation',\n  templateUrl: './dialog-box-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogBoxConfirmationComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  save(): void {\n    this.dialogRef.close(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogBoxComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogBoxComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div mat-dialog-content [innerHtml]=\"data.context\"></div>\n  </div>\n</div>\n\n<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0\">\n    <button\n      class=\"govuk-button\"\n      id=\"test-{{ data.actionName }}\"\n      data-module=\"govuk-button\"\n      (click)=\"save()\"\n      cdkFocusInitial\n    >\n      {{ data.actionName }}\n    </button>\n  </div>\n\n  <div\n    class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0 govuk-!-padding-top-2\"\n  >\n    <a\n      class=\"govuk-link govuk-link--no-visited-state\"\n      id=\"test-cancel\"\n      (click)=\"close()\"\n      href=\"javascript:void(0)\"\n    >\n      <span>Cancel</span>\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "DialogMinistryPlatesComponent",
            "id": "component-DialogMinistryPlatesComponent-f392a02fe1535828bce085457d16245bfb9b94600b35b002e3de49072d5b8e41600901c5c4c43ce6015fffdc7a91c4440c60c7b2b914543605a65072b60ce2c8",
            "file": "archive/src/app/shared/dialog-ministry-plates/dialog-ministry-plates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dialog-ministry-plates",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog-ministry-plates.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DialogMinistryPlatesComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "plateComponent",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "plateComponent",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Applicant } from '@app/models/tech-record.model';\n\nexport interface DialogData {\n  applicantDetails: Applicant;\n}\n\n@Component({\n  selector: 'vtm-dialog-ministry-plates',\n  templateUrl: './dialog-ministry-plates.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogMinistryPlatesComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogMinistryPlatesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit() {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  save(plateComponent): void {\n    const plate = plateComponent.platesForm.getRawValue();\n    this.dialogRef.close(plate);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogMinistryPlatesComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DialogMinistryPlatesComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <div mat-dialog-content>\n      <vtm-ministry-plates\n        [applicantDetails]=\"data.applicantDetails\"\n        #plateComponent=\"plateComponent\"\n      ></vtm-ministry-plates>\n      <div class=\"govuk-grid-row\">\n        <div class=\"govuk-grid-column-one-third govuk-!-margin-right-0 govuk-!-padding-right-0\">\n          <button\n            class=\"govuk-button\"\n            id=\"test-send-ministry-plate\"\n            data-module=\"govuk-button\"\n            (click)=\"save(plateComponent)\"\n            cdkFocusInitial\n          >\n            Send ministry plate\n          </button>\n        </div>\n\n        <div\n          class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0 govuk-!-padding-top-2\"\n        >\n          <a\n            class=\"govuk-link govuk-link--no-visited-state\"\n            id=\"test-cancel\"\n            (click)=\"close()\"\n            href=\"javascript:void(0)\"\n          >\n            <span>Cancel</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DimensionsComponent",
            "id": "component-DimensionsComponent-efe5f277218e0d572b70b71d256cb9d434fbdfbbf2e6b19c1aa0f563dfbe5ce3fa8c387b6b180a030abf3328f2f802cdf9be0a9dbb1ac54a88962615a76f0c0c",
            "file": "archive/src/app/technical-record/dimensions/dimensions.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dimensions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dimensions.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-dimensions',\n  templateUrl: './dimensions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DimensionsComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n  @Input() editState: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <table class=\"govuk-table table-details\">\n    <thead class=\"govuk-table__head\">\n      <tr class=\"govuk-table__row\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Length (mm)</th>\n        <td id=\"test-length\" class=\"govuk-table__cell\">\n          {{ activeRecord?.dimensions?.length | DefaultNullOrEmpty }}\n        </td>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n      </tr>\n    </thead>\n\n    <tbody class=\"govuk-table__body\">\n      <tr class=\"govuk-table__row\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Width (mm)</th>\n        <td id=\"test-width\" class=\"govuk-table__cell\">\n          {{ activeRecord?.dimensions?.width | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'psv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Height (mm)</th>\n        <td id=\"test-height\" class=\"govuk-table__cell\">\n          {{ activeRecord?.dimensions?.height | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Front axle to rear axle (mm)</th>\n        <td id=\"test-frontAxleToRearAxle\" class=\"govuk-table__cell\">\n          {{ activeRecord.frontAxleToRearAxle | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'trl'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Rear axle to rear trailer</th>\n        <td id=\"test-rearAxleToRearTrl\" class=\"govuk-table__cell\">\n          {{ activeRecord.rearAxleToRearTrl | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType === 'trl'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n          Centre of rearmost axle to rear of trailer\n        </th>\n        <td id=\"test-centreOfRearmostAxleToRearOfTrl\" class=\"govuk-table__cell\">\n          {{ activeRecord.centreOfRearmostAxleToRearOfTrl | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <ng-container\n        *ngIf=\"\n          (activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl') &&\n          activeRecord?.dimensions?.axleSpacing &&\n          activeRecord?.dimensions?.axleSpacing.length\n        \"\n      >\n        <ng-container *ngFor=\"let item of activeRecord?.dimensions.axleSpacing; let i = index\">\n          <tr class=\"govuk-table__row\">\n            <th\n              id=\"test-axleSpacing-axles-{{ i + 1 }}\"\n              class=\"govuk-table__cell govuk-!-font-weight-bold\"\n            >\n              Axle {{ item.axles.split('-')[0] }} to {{ item.axles.split('-')[1] }} (mm)\n            </th>\n            <td id=\"test-axleSpacing-value-{{ i + 1 }}\" class=\"govuk-table__cell\">\n              {{ item.value | DefaultNullOrEmpty }}\n            </td>\n            <td class=\"govuk-table__cell\"></td>\n            <td class=\"govuk-table__cell\"></td>\n            <td class=\"govuk-table__cell\"></td>\n            <td class=\"govuk-table__cell\"></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n\n      <tr\n        class=\"govuk-table__row\"\n        *ngIf=\"activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl'\"\n      >\n        <th class=\"govuk-table__cell\"></th>\n        <td class=\"govuk-table__cell govuk-!-font-weight-bold\">Minimum (mm)</td>\n        <td class=\"govuk-table__cell govuk-!-font-weight-bold\">Maximum (mm)</td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'hgv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n          Front of vehicle to 5th wheel coupling\n        </th>\n        <td id=\"test-frontAxleTo5thWheelCouplingMin\" class=\"govuk-table__cell\">\n          {{ activeRecord.frontAxleTo5thWheelCouplingMin | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-frontAxleTo5thWheelCouplingMax\" class=\"govuk-table__cell\">\n          {{ activeRecord.frontAxleTo5thWheelCouplingMax | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'hgv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Front axle to 5th wheel</th>\n        <td id=\"test-frontAxleTo5thWheelMin\" class=\"govuk-table__cell\">\n          {{ activeRecord.frontAxleTo5thWheelMin | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-frontAxleTo5thWheelMax\" class=\"govuk-table__cell\">\n          {{ activeRecord.frontAxleTo5thWheelMax | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'trl'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Coupling center to rear axle</th>\n        <td id=\"test-couplingCenterToRearAxleMin\" class=\"govuk-table__cell\">\n          {{ activeRecord.couplingCenterToRearAxleMin | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-couplingCenterToRearAxleMax\" class=\"govuk-table__cell\">\n          {{ activeRecord.couplingCenterToRearAxleMax | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType == 'trl'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n          Coupling center to rear trailer\n        </th>\n        <td id=\"test-couplingCenterToRearTrlMin\" class=\"govuk-table__cell\">\n          {{ activeRecord.couplingCenterToRearTrlMin | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-couplingCenterToRearTrlMax\" class=\"govuk-table__cell\">\n          {{ activeRecord.couplingCenterToRearTrlMax | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n\n<!-- Edit Dimensions -->\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-dimensions-edit [techRecord]=\"activeRecord\"></vtm-dimensions-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "DimensionsEditComponent",
            "id": "component-DimensionsEditComponent-ed5e11e5c0d94ed79c80a0e392e5e33c95fd6a7134279b74f1a4dd8530103ef73c4e7f30583f2aec61052107be49202af4dea85741de7ced1f5211b61cdbff1b",
            "file": "archive/src/app/technical-record/dimensions/edit/dimensions-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-dimensions-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dimensions-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHgvVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "numberOfAxles$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "addAxleSpacingGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleSpacingArray",
                    "args": [
                        {
                            "name": "axleSpacing",
                            "type": "AxleSpacing[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axleSpacing",
                            "type": "AxleSpacing[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleSpacingGroup",
                    "args": [
                        {
                            "name": "spacing",
                            "type": "AxleSpacing",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "spacing",
                            "type": "AxleSpacing",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createAxleSpacingGroupByNumberOfAxles",
                    "args": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAxleSpacingGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { FormGroup, FormGroupDirective, FormBuilder, FormArray } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { TechRecord, Dimensions, AxleSpacing } from '@app/models/tech-record.model';\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\nimport { VEHICLE_TYPES } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-dimensions-edit',\n  templateUrl: './dimensions-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DimensionsEditComponent implements OnInit {\n  @Input() techRecord: TechRecord;\n\n  techRecordFg: FormGroup;\n  numberOfAxles$: Observable<number>;\n  onDestroy$ = new Subject();\n  isHgvVehicle: boolean;\n\n  get axleSpacing() {\n    const dimensionsFg = this.techRecordFg.get('dimensions') as FormGroup;\n    return dimensionsFg.get('axleSpacing') as FormArray;\n  }\n\n  constructor(\n    private parent: FormGroupDirective,\n    private fb: FormBuilder,\n    private techRecHelper: TechRecordHelperService,\n    private detectChange: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.numberOfAxles$ = this.techRecHelper.getNumberOfAxles();\n    this.isHgvVehicle = this.techRecord.vehicleType === VEHICLE_TYPES.HGV;\n\n    const dimensions: Dimensions = this.techRecord.dimensions\n      ? this.techRecord.dimensions\n      : ({} as Dimensions);\n\n    const axleSpacing = dimensions.axleSpacing ? dimensions.axleSpacing : ([] as AxleSpacing[]);\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl(\n      'dimensions',\n      this.fb.group({\n        length: this.fb.control(dimensions.length),\n        width: this.fb.control(dimensions.width),\n        axleSpacing: this.buildAxleSpacingArray(axleSpacing)\n      })\n    );\n    this.techRecordFg.addControl(\n      'frontAxleToRearAxle',\n      this.fb.control(this.techRecord.frontAxleToRearAxle)\n    );\n    this.techRecordFg.addControl(\n      'frontAxleTo5thWheelCouplingMin',\n      this.fb.control(this.techRecord.frontAxleTo5thWheelCouplingMin)\n    );\n    this.techRecordFg.addControl(\n      'frontAxleTo5thWheelCouplingMax',\n      this.fb.control(this.techRecord.frontAxleTo5thWheelCouplingMax)\n    );\n    this.techRecordFg.addControl(\n      'frontAxleTo5thWheelMin',\n      this.fb.control(this.techRecord.frontAxleTo5thWheelMin)\n    );\n    this.techRecordFg.addControl(\n      'frontAxleTo5thWheelMax',\n      this.fb.control(this.techRecord.frontAxleTo5thWheelMax)\n    );\n\n    this.handleFormChanges();\n  }\n\n  buildAxleSpacingArray(axleSpacing: AxleSpacing[]): FormArray {\n    return this.fb.array(axleSpacing.map(this.buildAxleSpacingGroup.bind(this)));\n  }\n\n  buildAxleSpacingGroup(spacing: AxleSpacing): FormGroup {\n    const { axles, value } = spacing;\n    const [from, to] = spacing.axles.split('-');\n\n    return this.fb.group({ axles, from, to, value });\n  }\n\n  handleFormChanges() {\n    this.numberOfAxles$\n      .pipe(\n        tap((numAxles) => {\n          this.createAxleSpacingGroupByNumberOfAxles(numAxles);\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  private createAxleSpacingGroupByNumberOfAxles(numOfAxles: number): void {\n    const numOfIterations: number =\n      numOfAxles === 1 && this.axleSpacing.controls.length === 1\n        ? numOfAxles\n        : this.axleSpacing.controls.length - (numOfAxles - 1);\n\n    numOfIterations < 0\n      ? this.addAxleSpacingGroupByIterations(numOfIterations)\n      : this.removeAxleSpacingGroupByIterations(numOfIterations);\n\n    if (numOfAxles > 1) {\n      this.axleSpacing.markAsDirty();\n    }\n  }\n\n  private addAxleSpacingGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index < 0; index++) {\n      const latestPosition = this.axleSpacing.controls.length - 1;\n      const latestSpacing: string = this.axleSpacing.controls[latestPosition]\n        ? this.axleSpacing.controls[latestPosition].get('axles').value\n        : '';\n      const [from, to] = latestSpacing\n        ? latestSpacing.split('-').map((axle) => +axle + 1)\n        : ['1', '2'];\n      const axleSpacingGroup = this.buildAxleSpacingGroup({\n        axles: `${from}-${to}`,\n        value: null\n      } as AxleSpacing);\n\n      this.axleSpacing.push(axleSpacingGroup);\n    }\n  }\n\n  private removeAxleSpacingGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index > 0; index--) {\n      this.axleSpacing.removeAt(--this.axleSpacing.controls.length);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "axleSpacing": {
                    "name": "axleSpacing",
                    "getSignature": {
                        "name": "axleSpacing",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <!-- Length -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              dimTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg.get('dimensions'),\n                  label: 'Length (mm)',\n                  field: 'length'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Width -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              dimTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg.get('dimensions'),\n                  label: 'Width (mm)',\n                  field: 'width'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Front axle to rear axle -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              dimTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg,\n                  label: 'Front axle to rear axle (mm)',\n                  field: 'frontAxleToRearAxle'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Front of vehicle to 5th -->\n          <label class=\"govuk-label govuk-!-font-weight-bold\">\n            Front of vehicle to 5th wheel coupling\n          </label>\n          <div class=\"govuk-inset-text govuk-!-margin-top-3\">\n            <ng-container\n              *ngFor=\"\n                let item of [\n                  {\n                    label: 'Minimum (mm)',\n                    field: 'frontAxleTo5thWheelCouplingMin'\n                  },\n                  {\n                    label: 'Maximum (mm)',\n                    field: 'frontAxleTo5thWheelCouplingMax'\n                  }\n                ];\n                let i = index\n              \"\n            >\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    dimTemplate;\n                    context: {\n                      $implicit: {\n                        group: techRecordFg,\n                        label: item.label,\n                        displayOptional: isHgvVehicle,\n                        field: item.field\n                      }\n                    }\n                  \"\n                ></ng-container>\n              </div>\n            </ng-container>\n          </div>\n\n          <!-- Front axle to 5th -->\n          <label class=\"govuk-label govuk-!-font-weight-bold\">\n            Front axle to 5th wheel\n          </label>\n          <div class=\"govuk-inset-text govuk-!-margin-top-3\">\n            <ng-container\n              *ngFor=\"\n                let item of [\n                  {\n                    label: 'Minimum (mm)',\n                    field: 'frontAxleTo5thWheelMin'\n                  },\n                  {\n                    label: 'Maximum (mm)',\n                    field: 'frontAxleTo5thWheelMax'\n                  }\n                ];\n                let i = index\n              \"\n            >\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    dimTemplate;\n                    context: {\n                      $implicit: {\n                        group: techRecordFg,\n                        label: item.label,\n                        field: item.field\n                      }\n                    }\n                  \"\n                ></ng-container>\n              </div>\n            </ng-container>\n          </div>\n\n          <!-- Axle mappings -->\n          <ng-container formGroupName=\"dimensions\">\n            <div formArrayName=\"axleSpacing\" *ngIf=\"axleSpacing.length\">\n              <ng-container\n                *ngFor=\"let spacing of axleSpacing.controls; let i = index\"\n                [formGroup]=\"spacing\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    dimTemplate;\n                    context: {\n                      $implicit: {\n                        group: spacing,\n                        idLabel: 'axleSpacing-',\n                        index: '-' + (i + 1),\n                        label:\n                          'Axle ' +\n                          spacing.get('from').value +\n                          ' to ' +\n                          'axle ' +\n                          spacing.get('to').value +\n                          ' (mm)',\n                        field: 'value'\n                      }\n                    }\n                  \"\n                >\n                </ng-container>\n              </ng-container>\n            </div>\n          </ng-container>\n\n          <ng-template let-dimTemplate #dimTemplate>\n            <div class=\"govuk-form-group\" [formGroup]=\"dimTemplate.group\">\n              <label\n                for=\"test-edit-{{ dimTemplate.idLabel }}{{ dimTemplate.field }}{{\n                  dimTemplate.index\n                }}\"\n                class=\"govuk-label govuk-!-font-weight-bold\"\n              >\n                <span>{{ dimTemplate.label }}</span>\n                <span *ngIf=\"dimTemplate.displayOptional\">&nbsp;(optional)</span>\n              </label>\n              <input\n                id=\"test-edit-{{ dimTemplate.idLabel }}{{ dimTemplate.field }}{{\n                  dimTemplate.index\n                }}\"\n                type=\"number\"\n                maxlength=\"5\"\n                name=\"{{ dimTemplate.field }}\"\n                class=\"govuk-input govuk-input--width-5\"\n                formControlName=\"{{ dimTemplate.field }}\"\n                vtmNullValue\n              />\n            </div>\n          </ng-template>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DocumentsComponent",
            "id": "component-DocumentsComponent-8d383be93b15066efd703333a77f6ae86fe24eb78cf8afd8b1da6b3def6b453589d5e8cfcb0e921c2fae9365f9da53074818551023de3e1991a144f9c4a350f1",
            "file": "archive/src/app/technical-record/documents/documents.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-documents",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documents.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "microfilm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Microfilm",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { Microfilm } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-documents',\n  templateUrl: './documents.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocumentsComponent implements OnInit {\n  @Input() editState: boolean;\n  @Input() microfilm: Microfilm;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Microfilm document type</dt>\n      <dd id=\"test-microfilmDocumentType\" class=\"govuk-summary-list__value\">\n        {{ microfilm?.microfilmDocumentType | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Microfilm roll number</dt>\n      <dd id=\"test-microfilmRollNumber\" class=\"govuk-summary-list__value\">\n        {{ microfilm?.microfilmRollNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Microfilm serial number</dt>\n      <dd id=\"test-microfilmSerialNumber\" class=\"govuk-summary-list__value\">\n        {{ microfilm?.microfilmSerialNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-documents-edit [microfilmDetails]=\"microfilm\"></vtm-documents-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "DocumentsEditComponent",
            "id": "component-DocumentsEditComponent-2875f872c1cc8b95bdb4641b6b8283eab3775ed3df601b931666b96af729dd277c7b12ab5878d92f60ae206a69ec72d5655abbeec6caf50ece21e35b764ae66a",
            "file": "archive/src/app/technical-record/documents/edit/documents-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-documents-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documents-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "microfilmDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Microfilm",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "microfilmDocumentTypeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, ControlContainer, FormGroupDirective, FormBuilder } from '@angular/forms';\n\nimport { MICROFILM_DOCUMENT_TYPE } from '@app/technical-record/technical-record.constants';\n\nimport { SelectOption } from '@app/models/select-option';\nimport { Microfilm } from '@app/models/tech-record.model';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\n\n@Component({\n  selector: 'vtm-documents-edit',\n  templateUrl: './documents-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class DocumentsEditComponent implements OnInit {\n  @Input() microfilmDetails: Microfilm;\n  techRecordFg: FormGroup;\n  microfilmDocumentTypeOptions: SelectOption[];\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.microfilmDocumentTypeOptions = new DisplayOptionsPipe().transform(\n      MICROFILM_DOCUMENT_TYPE\n    );\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n\n    const microfilms: Microfilm = !!this.microfilmDetails\n      ? this.microfilmDetails\n      : ({} as Microfilm);\n\n    this.techRecordFg.addControl(\n      'microfilm',\n      this.fb.group({\n        microfilmDocumentType: this.fb.control(microfilms.microfilmDocumentType),\n        microfilmRollNumber: this.fb.control(microfilms.microfilmRollNumber),\n        microfilmSerialNumber: this.fb.control(microfilms.microfilmSerialNumber)\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <fieldset class=\"govuk-fieldset\">\n      <form [formGroup]=\"techRecordFg\">\n        <ng-container [formGroup]=\"techRecordFg.get('microfilm')\">\n          <div class=\"govuk-form-group\">\n            <label\n              class=\"govuk-label govuk-!-font-weight-bold\"\n              for=\"test-edit-microfilmDocumentType\"\n            >\n              Microfilm document type (optional)\n            </label>\n            <select\n              id=\"test-edit-microfilmDocumentType\"\n              formControlName=\"microfilmDocumentType\"\n              class=\"govuk-select\"\n              vtmNullValue\n            >\n              <option [value]=\"\"></option>\n              <option\n                *ngFor=\"let microDocument of microfilmDocumentTypeOptions\"\n                [ngValue]=\"microDocument.name\"\n              >\n                {{ microDocument.name }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"govuk-form-group\">\n            <label\n              class=\"govuk-label govuk-!-font-weight-bold\"\n              for=\"test-edit-microfilmRollNumber\"\n            >\n              Microfilm roll number (optional)\n            </label>\n            <input\n              class=\"govuk-input govuk-input--width-10\"\n              id=\"test-edit-microfilmRollNumber\"\n              type=\"text\"\n              maxlength=\"5\"\n              formControlName=\"microfilmRollNumber\"\n              vtmNullValue\n            />\n          </div>\n\n          <div class=\"govuk-form-group\">\n            <label\n              class=\"govuk-label govuk-!-font-weight-bold\"\n              for=\"test-edit-microfilmSerialNumber\"\n            >\n              Microfilm serial number (optional)\n            </label>\n            <input\n              class=\"govuk-input govuk-input--width-5\"\n              id=\"test-edit-microfilmSerialNumber\"\n              type=\"text\"\n              maxlength=\"4\"\n              formControlName=\"microfilmSerialNumber\"\n              vtmNullValue\n            />\n          </div>\n        </ng-container>\n      </form>\n    </fieldset>\n  </div>\n</div>\n"
        },
        {
            "name": "EmissionDetailsComponent",
            "id": "component-EmissionDetailsComponent-c6f3b82fd95d343b56959c9c9ce28cda56c111b4e16586f7200f978284c7ac0a99be5061cfb40b76af4381ad084a9e801f0381839498d8d9f64d43027f6214ea",
            "file": "archive/src/app/test-record/emission-details/emission-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-emission-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./emission-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "hasEmissionApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "editModTypeUsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "editParticulate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "modTypeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultModel } from '@app/models/test-result.model';\n\n@Component({\n  selector: 'vtm-emission-details',\n  templateUrl: './emission-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmissionDetailsComponent implements OnChanges {\n  @Input() testType: TestType;\n  @Input() testRecord: TestResultModel;\n  @Input() editState: VIEW_STATE;\n  @Input() hasEmissionApplicable: boolean;\n  editModTypeUsed: boolean;\n  editParticulate: boolean;\n  modTypeValue: string;\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.modTypeValue = !!this.testType.modType\n      ? this.testType.modType.code + ' - ' + this.testType.modType.description\n      : '';\n\n    this.editParticulate = this.modTypeValue === 'p - particulate trap';\n    this.editModTypeUsed =\n      this.modTypeValue === 'g - gas engine' ||\n      this.modTypeValue === 'm - modification or change of engine';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Emission standard\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-emissionStandard\">\n      {{ testType.emissionStandard | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Smoke test \"K\" limit applied (m <sup>1</sup>)</dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-smokeTestKLimitApplied\">\n      {{ testType.smokeTestKLimitApplied | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Fuel type\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-fuelType\">\n      {{ testType.fuelType | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Modification type\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-modType\">\n      <ng-container *ngIf=\"testType.modType; else hyphen\">\n        {{\n          [testType.modType.code | titlecase, testType.modType.description | CapitalizeString]\n            | DisplayByDelimiter: ' - '\n            | DefaultNullOrEmpty\n        }}\n      </ng-container>\n    </dd>\n  </div>\n  <div *ngIf=\"editModTypeUsed\" class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Modification type used\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-modificationTypeUsed\">\n      {{ testType.modificationTypeUsed | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div *ngIf=\"editParticulate\" class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Particulate trap fitted\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-particulateTrapFitted\">\n      {{ testType.particulateTrapFitted | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div *ngIf=\"editParticulate\" class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key border--bottom-none\">\n      Particulate trap serial number\n    </dt>\n    <dd\n      class=\"govuk-summary-list__value border--bottom-none\"\n      id=\"test-particulateTrapSerialNumber\"\n    >\n      {{ testType.particulateTrapSerialNumber | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n</dl>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n\n<ng-container *ngIf=\"editState && !hasEmissionApplicable\">\n  <vtm-emission-details-edit [testType]=\"testType\"></vtm-emission-details-edit>\n</ng-container>\n"
        },
        {
            "name": "EmissionDetailsEditComponent",
            "id": "component-EmissionDetailsEditComponent-895b84fff2c7d555391b829158522c943dfc159435c233982d42b3658caa57752f30e902c7625b2d37dd58390d44eaa6fa17e2507f1654b707d7b6c5dbda403d",
            "file": "archive/src/app/test-record/emission-details/edit/emission-details-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-emission-details-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./emission-details-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "editModTypeUsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "editParticulate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "emissionStandardOptions",
                    "defaultValue": "Object.values(EMISSION_STANDARD)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "fuelTypeOptions",
                    "defaultValue": "Object.values(FUEL_TYPE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "modTypeOptions",
                    "defaultValue": "Object.values(MOD_TYPE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "modTypeSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "modTypeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "testTypeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { EMISSION_STANDARD, FUEL_TYPE, MOD_TYPE } from '@app/test-record/test-record.enums';\nimport { ControlContainer, FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'vtm-emission-details-edit',\n  templateUrl: './emission-details-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class EmissionDetailsEditComponent implements OnInit, OnDestroy {\n  @Input() testType: TestType;\n  emissionStandardOptions: string[] = Object.values(EMISSION_STANDARD);\n  fuelTypeOptions: string[] = Object.values(FUEL_TYPE);\n  modTypeOptions: string[] = Object.values(MOD_TYPE);\n  editModTypeUsed: boolean;\n  editParticulate: boolean;\n  testResultChildForm: FormGroupDirective;\n  testTypeGroup: FormGroup;\n  modTypeSubscription: Subscription;\n  modTypeValue: string;\n\n  constructor(parentForm: FormGroupDirective) {\n    this.testResultChildForm = parentForm;\n  }\n\n  ngOnInit() {\n    this.modTypeValue = !!this.testType.modType\n      ? this.testType.modType.code + ' - ' + this.testType.modType.description\n      : '';\n    this.editParticulate = !!this.testType.modType\n      ? this.modTypeValue === 'p - particulate trap'\n      : false;\n    this.editModTypeUsed = !!this.testType.modType\n      ? this.modTypeValue === 'g - gas engine' ||\n        this.modTypeValue === 'm - modification or change of engine'\n      : false;\n\n    this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n    if (!this.testTypeGroup) {\n      this.testResultChildForm.form.addControl('testType', new FormGroup({}));\n      this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n    }\n\n    if (!!this.testTypeGroup) {\n      this.testTypeGroup.addControl(\n        'emissionStandard',\n        new FormControl(this.testType.emissionStandard)\n      );\n      this.testTypeGroup.addControl(\n        'smokeTestKLimitApplied',\n        new FormControl(this.testType.smokeTestKLimitApplied)\n      );\n      this.testTypeGroup.addControl('fuelType', new FormControl(this.testType.fuelType));\n      this.testTypeGroup.addControl('modType', new FormControl(this.testType.modType));\n      this.testTypeGroup.addControl(\n        'modificationTypeUsed',\n        new FormControl(this.testType.modificationTypeUsed)\n      );\n      this.testTypeGroup.addControl(\n        'particulateTrapFitted',\n        new FormControl(this.testType.particulateTrapFitted)\n      );\n      this.testTypeGroup.addControl(\n        'particulateTrapSerialNumber',\n        new FormControl(this.testType.particulateTrapSerialNumber)\n      );\n\n      this.modTypeSubscription = this.testTypeGroup\n        .get('modType')\n        .valueChanges.subscribe((value) => {\n          this.editParticulate = value === 'p - particulate trap';\n          this.editModTypeUsed =\n            value === 'g - gas engine' || value === 'm - modification or change of engine';\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.modTypeSubscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form class=\"govuk-form-group\" formGroupName=\"testType\">\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-three-quarters\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Emission standard\n              </label>\n              <div class=\"govuk-radios\">\n                <div\n                  class=\"govuk-radios__item\"\n                  *ngFor=\"let eOption of emissionStandardOptions; let i = index\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"{{ 'test-emissionStandard-' + i }}\"\n                    type=\"radio\"\n                    formControlName=\"emissionStandard\"\n                    value=\"{{ eOption }}\"\n                    [checked]=\"this.testType.emissionStandard === eOption\"\n                  />\n                  <label class=\"govuk-label govuk-radios__label\">\n                    {{ eOption }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Smoke test \"K\" limit applied (m <sup>1</sup>)\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-smokeTestKLimitApplied\"\n                formControlName=\"smokeTestKLimitApplied\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-three-quarters\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Fuel type\n              </label>\n              <div class=\"govuk-radios\">\n                <div\n                  class=\"govuk-radios__item\"\n                  *ngFor=\"let fuelOption of fuelTypeOptions; let i = index\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"{{ 'test-fuelType-' + i }}\"\n                    type=\"radio\"\n                    formControlName=\"fuelType\"\n                    value=\"{{ fuelOption | lowercase }}\"\n                    [checked]=\"this.testType.fuelType === (fuelOption | lowercase)\"\n                  />\n                  <label class=\"govuk-label govuk-radios__label\">\n                    {{ fuelOption }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-three-quarters\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Modification type\n              </label>\n              <div class=\"govuk-radios\">\n                <div\n                  class=\"govuk-radios__item\"\n                  *ngFor=\"let modOption of modTypeOptions; let i = index\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"{{ 'test-modType-' + i }}\"\n                    type=\"radio\"\n                    formControlName=\"modType\"\n                    value=\"{{ modOption | lowercase }}\"\n                    [checked]=\"this.modTypeValue === (modOption | lowercase)\"\n                  />\n                  <label class=\"govuk-label govuk-radios__label\">\n                    {{ modOption }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"editModTypeUsed\" class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Modification type used\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-modificationTypeUsed\"\n                formControlName=\"modificationTypeUsed\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div *ngIf=\"editParticulate\" class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Particulate trap fitted\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-particulateTrapFitted\"\n                formControlName=\"particulateTrapFitted\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div *ngIf=\"editParticulate\" class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Particulate trap serial number\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-particulateTrapSerialNumber\"\n                formControlName=\"particulateTrapSerialNumber\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ErrorSummaryComponent",
            "id": "component-ErrorSummaryComponent-77ad798a6a4c68f9e52251796f6827543aa68aff58dee8cb9c172df5908a44aa99730f7091ff1ea4e8f27e1977c7cc13b94cc770545a62e335cfab0defd56c31",
            "file": "archive/src/app/shared/error-summary/error-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-error-summary",
            "styleUrls": [
                "./error-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { IAppState } from '@app/store/state/app.state';\nimport { getErrors } from '@app/store/selectors/error.selectors';\n\n@Component({\n  selector: 'vtm-error-summary',\n  templateUrl: './error-summary.component.html',\n  styleUrls: ['./error-summary.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorSummaryComponent {\n  errorList$: Observable<string[]>;\n  constructor(private store: Store<IAppState>) {\n    this.errorList$ = this.store.select(getErrors);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n#errorBox {\n  padding-bottom: 0;\n}\n\n.govuk-error-summary {\n  width: 57rem;\n  .govuk-error-message {\n    text-decoration: underline;\n  }\n}\n",
                    "styleUrl": "./error-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngIf=\"errorList$ | async as errorList\" class=\"govuk-width-container\">\r\n  <main class=\"govuk-main-wrapper\" id=\"test-errorBox\" *ngIf=\"errorList.length\">\r\n    <div class=\"govuk-grid-row\">\r\n      <div class=\"govuk-grid-column-two-thirds\">\r\n        <div\r\n          class=\"govuk-error-summary\"\r\n          aria-labelledby=\"error-summary-title\"\r\n          role=\"alert\"\r\n          tabindex=\"-1\"\r\n          data-module=\"govuk-error-summary\"\r\n        >\r\n          <h2\r\n            class=\"govuk-error-summary__title govuk-!-font-weight-bold\"\r\n            id=\"error-summary-title\"\r\n          >\r\n            There is a problem\r\n          </h2>\r\n          <span class=\"govuk-error-message govuk-!-font-weight-bold\">\r\n            <div *ngFor=\"let errorMessage of errorList\">\r\n              <div>{{ errorMessage }}</div>\r\n            </div>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2f4d276c5236c2337da6d83e0fb289c7a91cf59313f752d83fcc1896efc574e4ee2393c647a9a8815f7f55858b973afa7b2da04a56ecaeb55344da3d63e1967c",
            "file": "src/app/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<footer class=\"govuk-footer\" role=\"contentinfo\">\n  <div class=\"govuk-width-container\">\n    <div class=\"govuk-footer__meta\">\n      <div class=\"govuk-footer__meta-item govuk-footer__meta-item--grow\">\n        <h2 class=\"govuk-visually-hidden\">Support links</h2>\n        <ul class=\"govuk-footer__inline-list\">\n          <li class=\"govuk-footer__inline-list-item\">\n            <a class=\"govuk-footer__link\" href=\"https://dvsaintranet.dft.gov.uk/task/protective-monitoring-of-dvsa-it/\"> Privacy notice </a>\n          </li>\n        </ul>\n\n        <svg aria-hidden=\"true\" focusable=\"false\" class=\"govuk-footer__licence-logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 483.2 195.7\" height=\"17\" width=\"41\">\n          <path fill=\"currentColor\" d=\"M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145\" />\n        </svg>\n        <span class=\"govuk-footer__licence-description\">\n          All content is available under the\n          <a class=\"govuk-footer__link\" href=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\" rel=\"license\">Open Government Licence v3.0</a>, except where otherwise stated\n        </span>\n      </div>\n      <div class=\"govuk-footer__meta-item\">\n        <a class=\"govuk-footer__link govuk-footer__copyright-logo\" href=\"https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/\">© Crown copyright</a>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-bc15035d0a671bd4ac95615be4c156de11a9b7815ce02758df5ef62ecdb97dc2e73a8dc4ce44196eb1a7bc04c81029d359c4822ba91943d89db865df5b9ad6ec-1",
            "file": "archive/src/app/shell/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vtm-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FooterComponent-1",
            "templateData": "<footer class=\"govuk-footer\" role=\"contentinfo\">\n  <div class=\"govuk-width-container\">\n    <div class=\"govuk-footer__meta\">\n      <div class=\"govuk-footer__meta-item govuk-footer__meta-item--grow\">\n        <div class=\"govuk-footer__meta-custom\">\n          <a\n            href=\"https://dvsaintranet.dft.gov.uk/task/protective-monitoring-of-dvsa-it/\"\n            class=\"govuk-footer__link\"\n            >Privacy notice</a\n          >\n        </div>\n        <svg\n          role=\"presentation\"\n          focusable=\"false\"\n          class=\"govuk-footer__licence-logo\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 483.2 195.7\"\n          height=\"17\"\n          width=\"41\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145\"\n          ></path>\n        </svg>\n        <span class=\"govuk-footer__licence-description\">\n          All content is available under the\n          <a\n            class=\"govuk-footer__link\"\n            href=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n            rel=\"license\"\n            >Open Government Licence v3.0</a\n          >, except where otherwise stated\n        </span>\n      </div>\n      <div class=\"govuk-footer__meta-item\">\n        <a\n          class=\"govuk-footer__link govuk-footer__copyright-logo\"\n          href=\"https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/\"\n          >© Crown copyright</a\n        >\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-1883c8ce91193c8415e4ea51fc57d471876740e2f410f7bedbe1d22d33dc8f584c640e66d2b3206a9559d642f4eb6b042112fe83d6a2d597cce18b623be31fda",
            "file": "src/app/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "logOutEvent",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  @Output() logOutEvent = new EventEmitter<void>();\n  @Input() username: string | null = \"\";\n\n  logout() {\n    this.logOutEvent.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#sign-out {\n  margin-left: 1rem;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<a href=\"#main-content\" class=\"govuk-skip-link\" data-module=\"govuk-skip-link\">Skip to main content</a>\n\n<header class=\"govuk-header\" role=\"banner\" data-module=\"govuk-header\">\n  <div class=\"govuk-header__container govuk-width-container\">\n    <div class=\"govuk-grid-row govuk-!-margin-bottom-2\">\n      <div class=\"govuk-grid-column-one-half\">\n        <a href=\"/\" class=\"govuk-header__link govuk-header__link--homepage\">Vehicle testing management</a>\n      </div>\n      <div class=\"govuk-grid-column-one-half govuk-!-text-align-right govuk-!-font-size-19\">\n        <span id=\"username\">{{ username }}</span>\n        <a id=\"sign-out\" class=\"govuk-link govuk-link--inverse govuk-!-font-weight-bold\" href=\"#\" (click)=\"logout()\">Sign out</a>\n      </div>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-6c3064df8af3e18b55096b40e06cab351d6246993fc8723759b5151892096ce00fd13f0dd2278268557af2b2a9c562a6f226c17c93f1ea41f446bd5a0fd3ead6-1",
            "file": "archive/src/app/shell/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MsAdalAngular6Service } from 'microsoft-adal-angular6';\nimport { LogoutModalComponent } from './logout-modal/logout-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'vtm-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  userName: string;\n  menuOpen = false;\n\n  constructor(private adal: MsAdalAngular6Service, private dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.userName = this.adal.userInfo != null ? this.adal.userInfo.profile.name : '';\n  }\n\n  onClick($event) {\n    this.menuOpen = !this.menuOpen;\n  }\n\n  logOut() {\n    if (this.adal.isAuthenticated) {\n      const dialogRef = this.dialog.open(LogoutModalComponent, {\n        width: '600px',\n        disableClose: true\n      });\n      return dialogRef.afterClosed().subscribe((res) => {\n        if (res) {\n          this.adal.logout();\n        }\n      });\n    } else {\n      return false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../node_modules/govuk-frontend/govuk/all';\n\n::ng-deep .govuk-width-container {\n  #header-nav-item {\n    margin-left: 0;\n    margin-top: 0.3rem;\n  }\n\n  .govuk-header__link--homepage {\n    font-size: 24px !important;\n    color: govuk-colour('white');\n    font-weight: 700;\n    letter-spacing: 0.86px;\n    line-height: 29px;\n  }\n\n  ul {\n    position: absolute !important;\n    right: 0;\n    top: 1rem !important;\n\n    a {\n      color: govuk-colour('white');\n      font-size: 16px;\n      font-weight: 700;\n      letter-spacing: 0.57px;\n      line-height: 19px;\n    }\n    span {\n      font-weight: 800 !important;\n      font-size: 18px;\n    }\n  }\n\n  .govuk-header__logo {\n    width: 50% !important;\n  }\n}\n\n.topnav {\n  overflow: hidden;\n  background-color: black;\n  position: relative;\n  display: none;\n}\n\n.topnav #myLinks {\n  display: none;\n}\n\n.topnav a {\n  color: white;\n  padding: 14px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n.topnav a.icon {\n  background: black;\n  display: block;\n  position: absolute;\n  right: 0;\n  top: 0;\n  line-height: 2.5rem;\n  cursor: pointer;\n}\n\n.topnav a:visited,\n#menuLinks:visited {\n  color: #fff;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.topnav a:hover {\n  fa-icon:hover {\n    color: white;\n    border: solid $govuk-focus-colour;\n    padding: 5px;\n  }\n\n  span:hover {\n    color: $govuk-text-colour;\n    background-color: $govuk-focus-colour;\n    text-decoration: underline;\n    padding: 5px;\n  }\n  cursor: pointer;\n}\n\n.active {\n  color: $govuk-focus-colour;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n@media (max-width: 1313px) {\n  .topnav {\n    display: block !important;\n  }\n\n  .govuk-header__container {\n    display: none;\n  }\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "adal",
                        "type": "MsAdalAngular6Service",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "adal",
                        "type": "MsAdalAngular6Service",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header class=\"govuk-header\" role=\"banner\" data-module=\"govuk-header\">\n  <div class=\"topnav govuk-header__container govuk-width-container\">\n    <div id=\"menuLinks\" [ngStyle]=\"{ display: menuOpen ? 'block' : 'none' }\">\n      <a href=\"javascript:void(0)\">{{ userName }}</a>\n      <a (click)=\"logOut()\">Sign out</a>\n    </div>\n    <a class=\"icon\" (click)=\"onClick($event)\">\n      <fa-icon [icon]=\"['fa', 'bars']\" size=\"lg\"></fa-icon>\n    </a>\n  </div>\n  <div class=\"govuk-header__container govuk-width-container\">\n    <div class=\"govuk-header__logo\">\n      <a\n        [routerLink]=\"['/']\"\n        id=\"header-nav-item\"\n        class=\"govuk-header__link govuk-header__link--homepage\"\n      >\n        <span>Vehicle testing management</span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"govuk-header__menu-button govuk-js-header-toggle\"\n        aria-controls=\"navigation\"\n        aria-label=\"Show or hide Top Level Navigation\"\n      >\n        Menu\n      </button>\n      <nav>\n        <ul id=\"navigation\" class=\"govuk-header__navigation\" aria-label=\"Top Level Navigation\">\n          <li class=\"govuk-header__navigation-item\">\n            <a class=\"govuk-header__link\" href=\"#1\">\n              {{ userName }}\n            </a>\n          </li>\n          <li class=\"govuk-header__navigation-item\">\n            <a class=\"govuk-header__link\" (click)=\"logOut()\">\n              <span>Sign out</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "HomeButtonComponent",
            "id": "component-HomeButtonComponent-3ccfca985d5e42b66aee4ba9d88d5f7022873c6a5ed7264bfb86e10dcff11a182fd43da0c24a11d96ed1d2db05a1ca721320f16c3a731c108d182febacc2469b",
            "file": "src/app/home/home-button/home-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-button",
            "styleUrls": [
                "./home-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-home-button',\n  templateUrl: './home-button.component.html',\n  styleUrls: ['./home-button.component.scss']\n})\nexport class HomeButtonComponent {\n  @Input() url: string = '';\n  @Input() linkText: string = '';\n  @Input() description: string = '';\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.home-button {\n  background: govuk-colour('light-grey');\n  margin: 0 0 10px 18px;\n  width: 364px !important;\n  border-color: $govuk-link-colour !important;\n  border-bottom: solid;\n  min-height: 180px;\n  padding-top: 0.5rem;\n}\n",
                    "styleUrl": "./home-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div class=\"govuk-grid-column-one-third home-button\">\n  <h2 class=\"govuk-heading-m\">\n    <a class=\"govuk-link\" data-module=\"govuk-button\" [routerLink]=\"[url]\">{{ linkText }}</a>\n  </h2>\n  <p class=\"govuk-body\">{{ description }}</p>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-43e9d0136965a2f3926a7587027408da0e45bf3631bf804ed64518b7bdbd85ee3c5f3182ea9bcd28e8388b27f7eaa43d817cbb9a4cc6ffb93f625a0b886b77ed",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"govuk-grid-row home-page\">\n  <div class=\"govuk-grid-column-full\">\n    <p class=\"govuk-heading-xl govuk-!-font-weight-bold\">Select activity</p>\n\n    <div class=\"govuk-grid-row\">\n      <app-home-button url=\"search\" linkText=\"Search for a technical record\" description=\"Manage technical records, test records and issue certificates or documents\"></app-home-button>\n\n      <app-home-button url=\"create\" linkText=\"Create a new technical record\" description=\"Create records for PSVs, HGVs and trailers\"></app-home-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "LandingPageComponent",
            "id": "component-LandingPageComponent-459cde094d1b5f47696d141f2750ce7f9f895e9efa2be4646e77d3ecb953cf9e11ffea9f7e1e7f33b4e0c24e73d3f6586ed07d334485941130e072263e878aed",
            "file": "archive/src/app/landing-page/landing-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-landing-page",
            "styleUrls": [
                "./landing-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'vtm-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LandingPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.landing-page {\n  & a {\n    color: #1d70b8 !important;\n    text-decoration: none;\n    cursor: pointer;\n    font-size: 25px;\n  }\n\n  & .govuk-grid-column-one-third p {\n    font-size: 20px !important;\n  }\n\n  & .govuk-heading-xl {\n    font-size: 50px;\n    margin-top: 20px;\n  }\n\n  & .govuk-grid-column-one-third {\n    background: govuk-colour('light-grey');\n    margin: 0 0 10px 18px;\n    width: 364px !important;\n    border-color: $govuk-link-colour !important;\n    border-bottom: solid;\n    height: 180px;\n  }\n\n  & .govuk-grid-row {\n    margin-bottom: 10rem;\n  }\n}\n",
                    "styleUrl": "./landing-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container landing-page\">\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-full\">\n        <p class=\"govuk-heading-xl govuk-!-font-weight-bold\">\n          Select activity\n        </p>\n\n        <div class=\"govuk-grid-row\">\n          <div class=\"govuk-grid-column-one-third\">\n            <h2 class=\"govuk-heading-m\">\n              <a\n                id=\"test-search-vehicle\"\n                class=\"govuk-link\"\n                data-module=\"govuk-button\"\n                [routerLink]=\"['search']\"\n                >Search for a technical record</a\n              >\n            </h2>\n            <p class=\"govuk-body\">\n              Manage technical records, test records and issue certificates or documents\n            </p>\n          </div>\n          <div class=\"govuk-grid-column-one-third\">\n            <h2 class=\"govuk-heading-m\">\n              <a\n                id=\"test-create-new-vehicle\"\n                class=\"govuk-link\"\n                data-module=\"govuk-button\"\n                [routerLink]=\"['create']\"\n                >Create a new technical record</a\n              >\n            </h2>\n            <p class=\"govuk-body\">Create records for PSVs, HGVs and trailers</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</div>\n"
        },
        {
            "name": "LettersOfAuthorisationComponent",
            "id": "component-LettersOfAuthorisationComponent-fd055d5332956e8b0a560349c87ab403086a9d42b0c4af1d5a068c7b5f4a38c0fe34b6db47135fd71155e085ce0d08c6987895fda94543073e33b8babdaaaaa9",
            "file": "archive/src/app/technical-record/letters-of-authorisation/letters-of-authorisation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-letters-of-authorisation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./letters-of-authorisation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "lettersOfAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "LettersOfAuth",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { LettersOfAuth } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-letters-of-authorisation',\n  templateUrl: './letters-of-authorisation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LettersOfAuthorisationComponent implements OnInit {\n  @Input() lettersOfAuth: LettersOfAuth;\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table class=\"govuk-table\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\">Letter type</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created at</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Letter contents</th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\" *ngIf=\"lettersOfAuth; else noLetterOfAuth\">\n    <tr class=\"govuk-table__row\">\n      <td id=\"test-letterType\" class=\"govuk-table__cell\">\n        {{ lettersOfAuth?.letterType | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-letterDateRequested\" class=\"govuk-table__cell\">\n        <span *ngIf=\"lettersOfAuth?.letterDateRequested; else hyphen\">\n          {{ lettersOfAuth?.letterDateRequested | date: 'dd/MM/yyyy' }}\n        </span>\n      </td>\n      <td id=\"test-letterContents\" class=\"govuk-table__cell\">\n        {{ lettersOfAuth?.letterContents | DefaultNullOrEmpty }}\n      </td>\n    </tr>\n  </tbody>\n  <ng-template #noLetterOfAuth>\n    <tbody class=\"govuk-table__body\">\n      <tr>\n        <td id=\"test-letterType\">-</td>\n        <td id=\"test-letterDateRequested\">-</td>\n        <td id=\"test-letterContents\">-</td>\n      </tr>\n    </tbody>\n  </ng-template>\n</table>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "LogoutModalComponent",
            "id": "component-LogoutModalComponent-b5b252a074c76336c02a8697b8c1bba457b430b4fa4d930e79d4a4e1804e99c6c674c9c69d24d936c6330364d9477a48dd8e14463341be0d6ff1f0fe76a94a3e",
            "file": "archive/src/app/shell/header/logout-modal/logout-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-logout-modal",
            "styleUrls": [
                "./logout-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logout-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<LogoutModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'vtm-logout-modal',\n  templateUrl: './logout-modal.component.html',\n  styleUrls: ['./logout-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LogoutModalComponent {\n  constructor(public dialogRef: MatDialogRef<LogoutModalComponent>) {}\n\n  cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.mat-dialog-content {\n  overflow: hidden;\n}\n\n.cancel {\n  color: #005ea5;\n  font-family: 'GDS Transport', Arial, sans-serif;\n  font-size: 19px;\n  font-weight: 300;\n  line-height: 44px;\n  text-align: left;\n  padding-left: 2rem;\n  cursor: pointer;\n  span {\n    border-bottom: solid;\n    border-bottom-width: 2px;\n  }\n}\n",
                    "styleUrl": "./logout-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<LogoutModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<LogoutModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div mat-dialog-content>\n  <h1 class=\"govuk-heading-l\">Are you sure you want to sign out?</h1>\n</div>\n\n<button class=\"govuk-button\" data-module=\"govuk-button\" (click)=\"confirm()\">\n  Yes, sign out\n</button>\n\n<a class=\"cancel\" (click)=\"cancel()\" cdkFocusInitial>\n  <span>Cancel</span>\n</a>\n"
        },
        {
            "name": "LoseChangesComponent",
            "id": "component-LoseChangesComponent-08a9e586d8deb9fc92d8df047f93882cb6d709c3a37e54a8c46ab511edf94bb0c8cb82a16f7d68edd6152b28d0bc23bce1fd979a4c3678c26c3dee0fe6b47ee9",
            "file": "archive/src/app/modal/components/lose-changes/lose-changes.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-lose-changes",
            "styleUrls": [
                "./lose-changes.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lose-changes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "okCancelAction",
                    "defaultValue": "new EventEmitter<ModalPayload>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoseChangesClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { ModalPayload } from '@app/modal/modal.model';\n\n@Component({\n  selector: 'vtm-lose-changes',\n  templateUrl: './lose-changes.component.html',\n  styleUrls: ['./lose-changes.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoseChangesComponent implements OnInit {\n  @Output() okCancelAction = new EventEmitter<ModalPayload>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onLoseChangesClick() {\n    this.okCancelAction.emit({ isOk: true });\n  }\n\n  onCancelClick() {\n    this.okCancelAction.emit({ isOk: false });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.mat-dialog-content {\n  overflow: hidden;\n}\n\n.cancel {\n  color: $govuk-link-colour;\n  font-family: 'GDS Transport', Arial, sans-serif;\n  font-size: 19px;\n  font-weight: 300;\n  line-height: 44px;\n  text-align: left;\n  padding-left: 2rem;\n  cursor: pointer;\n  span {\n    border-bottom: solid;\n    border-bottom-width: 2px;\n  }\n}\n",
                    "styleUrl": "./lose-changes.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div mat-dialog-content lose-changes>\n  <h1 class=\"govuk-heading-m\">Unsaved changes</h1>\n  <span class=\"govuk-hint\">\n    If you leave this page, your changes will be lost.\n  </span>\n</div>\n\n<button\n  id=\"test-lose-changes\"\n  class=\"govuk-button\"\n  data-module=\"govuk-button\"\n  (click)=\"onLoseChangesClick()\"\n  cdkFocusInitial\n>\n  Leave and lose changes\n</button>\n\n<a id=\"test-cancel\" class=\"cancel\" (click)=\"onCancelClick()\">\n  <span>Continue changing record</span>\n</a>\n"
        },
        {
            "name": "ManufacturerComponent",
            "id": "component-ManufacturerComponent-81cd33337e0f3c9dce60055585caa14af997bddae468ce9b6b5b3492ba6dfd157d39016eda963f858ae4a47c890e78eefabc180f78b9905d7386b10f98a10467",
            "file": "archive/src/app/technical-record/manufacturer/manufacturer.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-manufacturer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./manufacturer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "address1And2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "manufacturer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturerDetails",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\n\nimport { ManufacturerDetails, TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-manufacturer',\n  templateUrl: './manufacturer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ManufacturerComponent implements OnChanges {\n  @Input() techRecord: TechRecord;\n  @Input() editState: boolean;\n\n  address1And2: string;\n  manufacturer: ManufacturerDetails;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { techRecord } = changes;\n\n    if (techRecord) {\n      this.manufacturer = !!this.techRecord.manufacturerDetails\n        ? this.techRecord.manufacturerDetails\n        : ({} as ManufacturerDetails);\n\n      this.address1And2 = Object.keys(this.manufacturer).length\n        ? `${this.manufacturer.address1} ${this.manufacturer.address2}`\n        : '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container>\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Name</dt>\n      <dd id=\"test-manufacturer-name\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.name | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Building and street</dt>\n      <dd id=\"test-manufacturer-address\" class=\"govuk-summary-list__value\">\n        {{ address1And2 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Town or city</dt>\n      <dd id=\"test-manufacturer-postTown\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.postTown | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">County</dt>\n      <dd id=\"test-manufacturer-address3\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.address3 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Postcode</dt>\n      <dd id=\"test-manufacturer-postCode\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.postCode | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Telephone number</dt>\n      <dd id=\"test-manufacturer-telephoneNumber\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.telephoneNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Email address</dt>\n      <dd id=\"test-manufacturer-emailAddress\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.emailAddress | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Fax Number</dt>\n      <dd id=\"test-manufacturer-faxNumber\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.faxNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Manufacturer Notes</dt>\n      <dd id=\"test-manufacturer-manufacturerNotes\" class=\"govuk-summary-list__value\">\n        {{ manufacturer?.manufacturerNotes | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "MemoComponent",
            "id": "component-MemoComponent-8ce912a8f992a173e74ec42219ccafb7969247651a61f0b1aeeb3329dcb9b2245433f67b4544376afceff468322b5b087405f2cc89337e3a5c47861cb5425e82",
            "file": "archive/src/app/technical-record/adr/memo/memo.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-memo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./memo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMemosApplied",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getMemoApplied",
                    "args": [
                        {
                            "name": "memosApply",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memosApply",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapMemoApplyToCodes",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\nimport { MEMOS } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-memo',\n  templateUrl: './memo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MemoComponent implements OnChanges {\n  isMemosApplied: boolean;\n  vehicleType: string;\n\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    this.isMemosApplied = this.getMemoApplied(this.adrDetails.memosApply);\n\n    const { vehicleDetails } = this.adrDetails;\n    this.vehicleType = vehicleDetails && vehicleDetails.type ? vehicleDetails.type : '';\n  }\n\n  getMemoApplied(memosApply: string[]): boolean {\n    if (memosApply) {\n      return memosApply.some(\n        (value) => MEMOS.MEMOSAPPLY_CODE === this.mapMemoApplyToCodes(value)\n      );\n    }\n  }\n\n  mapMemoApplyToCodes(value: string): string {\n    if (value) {\n      return value\n        .toLowerCase()\n        .trim()\n        .replace(/ /gi, '');\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Memo 07/09 (3 month extension)</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Applied</dt>\n      <dd id=\"test-memosApply\" class=\"govuk-summary-list__value\">\n        <div *ngIf=\"isMemosApplied; else hyphen\">\n          Yes\n        </div>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<ng-container *ngIf=\"edit\">\n  <vtm-memo-edit [hasMemosApplied]=\"isMemosApplied\" [vehicleType]=\"vehicleType\"></vtm-memo-edit>\n</ng-container>\n"
        },
        {
            "name": "MemoEditComponent",
            "id": "component-MemoEditComponent-8468957e5b1297353601b6414368fd07333ea7228b87012a32db0bbf1f4765997a6698ccceae976bad229c0187f4bf24718622fa43d209bc0c2bb47b4ec0f9f6",
            "file": "archive/src/app/technical-record/adr/memo/edit/memo-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-memo-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./memo-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasMemosApplied",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "memoValidationState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ValidationState>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "showMemoEdit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { ValidationState, STATUS } from '../../adr-validation.mapper';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { BOOLEAN_RADIO_OPTIONS } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-memo-edit',\n  templateUrl: './memo-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MemoEditComponent extends AdrComponent implements OnInit {\n  adrForm: FormGroup;\n  displayOptions;\n  showMemoEdit = true;\n  memoValidationState$: Observable<ValidationState>;\n\n  @Input() hasMemosApplied: boolean;\n  @Input() vehicleType: string;\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n    this.displayOptions = BOOLEAN_RADIO_OPTIONS;\n    this.memoValidationState$ = this.validationMapper.getCurrentState();\n\n    this.adrForm.addControl('memosApply', this.fb.control(this.hasMemosApplied));\n    this.handleFormChanges();\n\n    if (this.vehicleType) {\n      this.validationMapper.vehicleTypeSelected(this.vehicleType);\n    }\n  }\n\n  unsorted(): number {\n    return super.unsorted();\n  }\n\n  handleFormChanges() {\n    this.memoValidationState$\n      .pipe(\n        tap(({ memoEdit }) => {\n          if (memoEdit === STATUS.HIDDEN) {\n            this.showMemoEdit = false;\n            this.adrForm.get('memosApply').reset();\n          } else {\n            this.showMemoEdit = true;\n          }\n\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\" *ngIf=\"showMemoEdit\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m\">Memo 07/09 (3 month extension) applied (optional)</h2>\n          <div class=\"govuk-radios govuk-radios--inline\">\n            <div\n              class=\"govuk-radios__item\"\n              *ngFor=\"let option of displayOptions | keyvalue: unsorted\"\n            >\n              <input\n                class=\"govuk-radios__input\"\n                id=\"memosApply-{{ option.key }}\"\n                name=\"memosApply\"\n                type=\"radio\"\n                [value]=\"option.value\"\n                formControlName=\"memosApply\"\n              />\n              <label class=\"govuk-label govuk-radios__label\" for=\"memosApply-{{ option.key }}\">\n                {{ option.key }}\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "MinistryPlatesComponent",
            "id": "component-MinistryPlatesComponent-d9f10fb567937b27ff6d3412441660a255e7cc4cf8c4a6692baf242ee9538051642ee30bd1d69883d245dbd2ba1be58448c6e956c1b352d6429ee818f9f61feb",
            "file": "archive/src/app/technical-record/ministry-plates/ministry-plates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "exportAs": "plateComponent",
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-ministry-plates",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ministry-plates.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "applicantDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Applicant",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "plateHandler",
                    "defaultValue": "new EventEmitter<Plate>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "loggedUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "plateIssueOptions",
                    "defaultValue": "PLATE_ISSUE_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "platesForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { UserService } from '@app/app-user.service';\nimport { Applicant, Plate } from '@app/models/tech-record.model';\nimport { PLATE_ISSUE_OPTIONS } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-ministry-plates',\n  templateUrl: './ministry-plates.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'plateComponent'\n})\nexport class MinistryPlatesComponent implements OnInit {\n  @Input() applicantDetails: Applicant;\n  @Output() plateHandler = new EventEmitter<Plate>();\n  platesForm: FormGroup;\n  plateIssueOptions = PLATE_ISSUE_OPTIONS;\n\n  constructor(public loggedUser: UserService) {}\n\n  ngOnInit() {\n    this.applicantDetails = !!this.applicantDetails ? this.applicantDetails : ({} as Applicant);\n\n    this.platesForm = new FormGroup({});\n    this.platesForm.addControl('plateIssuer', new FormControl(this.loggedUser.getUser().msUser));\n    this.platesForm.addControl(\n      'plateIssueDate',\n      new FormControl(new Date(Date.now()).toISOString().split('T')[0])\n    );\n    this.platesForm.addControl('plateReasonForIssue', new FormControl('Original'));\n    this.platesForm.addControl(\n      'toEmailAddress',\n      new FormControl(this.applicantDetails.emailAddress)\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "loggedUser",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2 class=\"govuk-heading-l\">Select reason for sending ministry plate</h2>\n<form [formGroup]=\"platesForm\">\n  <div class=\"govuk-form-group\">\n    <fieldset class=\"govuk-fieldset\">\n      <div class=\"govuk-radios\">\n        <div\n          *ngFor=\"let issue of plateIssueOptions | keyvalue; let i = index\"\n          class=\"govuk-radios__item\"\n        >\n          <input\n            class=\"govuk-radios__input\"\n            id=\"test-issue-{{ i }}\"\n            type=\"radio\"\n            formControlName=\"plateReasonForIssue\"\n            value=\"{{ issue.key }}\"\n          />\n          <label class=\"govuk-label govuk-radios__label\" for=\"test-issue-{{ i }}\">\n            {{ issue.value }}\n          </label>\n        </div>\n      </div>\n    </fieldset>\n  </div>\n</form>\n<div class=\"govuk-inset-text\">\n  A digital copy of the ministry plate will be email to the applicant on the tech record ({{\n    platesForm.get('toEmailAddress').value\n  }})\n</div>\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-41757b8416ea0b17e6acc81c281a171df46e020a5f339f10cd905b13383234148e88909dc1325153f96a366fe1c3414d48d23d1522b54a0c2bc2e0c5ffc587ec",
            "file": "archive/src/app/modal/modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"currentModal.modal === 'lose-changes'\">\n  <vtm-lose-changes (okCancelAction)=\"okCancelAction($event)\"></vtm-lose-changes>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalContent",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<ModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "okCancelAction",
                    "args": [
                        {
                            "name": "result",
                            "type": "ModalPayload",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "ModalPayload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ModalContent, ModalPayload } from './modal.model';\n\n@Component({\n  selector: 'vtm-modal',\n  template: `\n    <ng-container *ngIf=\"currentModal.modal === 'lose-changes'\">\n      <vtm-lose-changes (okCancelAction)=\"okCancelAction($event)\"></vtm-lose-changes>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalComponent implements OnInit {\n  public currentModal: ModalContent;\n\n  constructor(@Inject(MAT_DIALOG_DATA) data, public dialogRef: MatDialogRef<ModalComponent>) {\n    this.currentModal = {\n      modal: data.currentModal\n    } as ModalContent;\n  }\n\n  ngOnInit() {}\n\n  okCancelAction(result: ModalPayload) {\n    this.dialogRef.close({\n      ...this.currentModal,\n      status: result.isOk,\n      payload: result.payload\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ModalContainerComponent",
            "id": "component-ModalContainerComponent-7f1005bada1e9ef4641fcf08f79eb3be9493073dbc4b50043f4e4ce7e14e2c7ce8fbbafb352314e6d1035bf302f8a7afb9013d1cf9bca6a3aacb31a3dddb85a7",
            "file": "archive/src/app/modal/modal.container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-modal-container",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "modalState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ModalState>",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "modalHandler",
                    "args": [
                        {
                            "name": "modalContent",
                            "type": "ModalContent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modalContent",
                            "type": "ModalContent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\n\nimport { APP_MODALS } from '../app.enums';\nimport { IAppState } from '@app/store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { ModalComponent } from './modal.component';\nimport { ModalState } from './modal.reducer';\nimport { Observable } from 'rxjs';\nimport { getCurrentModalState } from './modal.selectors';\nimport { ResetModal } from './modal.actions';\nimport { ModalContent } from './modal.model';\n\n@Component({\n  selector: 'vtm-modal-container',\n  template: `\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalContainerComponent implements OnInit {\n  modalState$: Observable<ModalState>;\n  constructor(public dialog: MatDialog, private store: Store<IAppState>) {\n    this.modalState$ = this.store.select(getCurrentModalState);\n  }\n\n  ngOnInit() {\n    this.modalState$.subscribe((modal: ModalState) => {\n      if (modal.currentModal !== APP_MODALS.NONE) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = '45vw';\n        dialogConfig.data = {\n          currentModal: modal.currentModal\n        };\n        const dialogRef = this.dialog.open(ModalComponent, dialogConfig);\n        dialogRef.afterClosed().subscribe((result) => {\n          this.modalHandler({ ...result, urlToRedirect: modal.urlToRedirect });\n        });\n      } else {\n        this.dialog.closeAll();\n      }\n    });\n  }\n\n  modalHandler(modalContent: ModalContent) {\n    if (modalContent.status) {\n      this.store.dispatch(new ResetModal());\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "MultipleRecordsComponent",
            "id": "component-MultipleRecordsComponent-c2eb9d0ad91176a1ba408a7e289c71688405d358e0983f822be2dbdd2309a3957d16ed739cd6621226085e9c6d633d4f49761bca5676108ea6dd8ce4a2856dc8",
            "file": "archive/src/app/multiple-records/multiple-records.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-multiple-records",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./multiple-records.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "vehicleTechRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "VehicleTechRecordModel[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "setVehicleTechRecord",
                    "defaultValue": "new EventEmitter<VehicleTechRecordModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSelectedVehicleTechRecord",
                    "args": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { VehicleTechRecordModel } from '@app/models/vehicle-tech-record.model';\n\n@Component({\n  selector: 'vtm-multiple-records',\n  templateUrl: './multiple-records.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultipleRecordsComponent implements OnInit {\n  @Input() vehicleTechRecords: VehicleTechRecordModel[];\n  @Output() setVehicleTechRecord = new EventEmitter<VehicleTechRecordModel>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  setSelectedVehicleTechRecord(vehicleTechRecord: VehicleTechRecordModel) {\n    this.setVehicleTechRecord.emit(vehicleTechRecord);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container\">\n  <a class=\"govuk-back-link\" vtmBackButton>Back</a>\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n      <div class=\"govuk-grid-column-full\">\n        <h1 class=\"govuk-heading-xl govuk-!-margin-bottom-5\">\n          Select a technical record\n        </h1>\n        <p class=\"govuk-body govuk-!-font-size-19\">\n          Multiple technical records found matching this search\n        </p>\n      </div>\n    </div>\n\n    <ng-container\n      *ngFor=\"let vTechRecord of vehicleTechRecords | FilterMultipleRecords; let i = index\"\n    >\n      <ng-container *ngIf=\"vTechRecord.techRecord | FilterRecord as activeRecord\">\n        <div class=\"govuk-grid-row\">\n          <div class=\"govuk-grid-column-three-quarters\">\n            <h3 class=\"govuk-heading-m\">Technical record {{ i + 1 }}</h3>\n          </div>\n          <div class=\"govuk-grid-column-one-quarter\">\n            <a\n              id=\"test-selectTechnicalRecord-{{ i }}\"\n              class=\"govuk-link govuk-!-font-size-19 govuk-!-margin-left-5\"\n              (click)=\"setSelectedVehicleTechRecord(vTechRecord)\"\n              href=\"javascript:void(0)\"\n            >\n              Select technical record\n            </a>\n          </div>\n        </div>\n\n        <div class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n          <div class=\"govuk-grid-column-full\">\n            <dl class=\"govuk-summary-list\">\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Vehicle identification number (VIN)\n                </dt>\n                <dd id=\"test-vin-{{ i }}\" class=\"govuk-summary-list__value\">\n                  {{ vTechRecord.vin | DefaultNullOrEmpty }}\n                </dd>\n              </div>\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Vehicle registration mark (VRM)\n                </dt>\n                <dd class=\"govuk-summary-list__value\">\n                  <div *ngIf=\"!!vTechRecord.vrms; else hyphen\">\n                    <div\n                      *ngFor=\"\n                        let vrmItem of vTechRecord.vrms | IsPrimaryVrm: true;\n                        let vi = index\n                      \"\n                    >\n                      <p id=\"test-vrm-{{ vi }}-tech-{{ i }}\">\n                        {{ vrmItem.vrm }}\n                      </p>\n                    </div>\n                  </div>\n                </dd>\n              </div>\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Vehicle type\n                </dt>\n                <dd id=\"test-vehicleType-{{ i }}\" class=\"govuk-summary-list__value\">\n                  {{ activeRecord.vehicleType | DefaultNullOrEmpty | uppercase }}\n                </dd>\n              </div>\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Year of manufacture\n                </dt>\n                <dd id=\"test-manufactureYear-{{ i }}\" class=\"govuk-summary-list__value\">\n                  {{ activeRecord.manufactureYear | DefaultNullOrEmpty }}\n                </dd>\n              </div>\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Make\n                </dt>\n                <dd id=\"test-make-{{ i }}\" class=\"govuk-summary-list__value\">\n                  {{\n                    activeRecord.vehicleType === 'psv'\n                      ? (activeRecord.chassisMake | DefaultNullOrEmpty)\n                      : (activeRecord.make | DefaultNullOrEmpty)\n                  }}\n                </dd>\n              </div>\n              <div class=\"govuk-summary-list__row\">\n                <dt class=\"govuk-summary-list__key\">\n                  Model\n                </dt>\n                <dd id=\"test-model-{{ i }}\" class=\"govuk-summary-list__value\">\n                  {{\n                    activeRecord.vehicleType === 'psv'\n                      ? (activeRecord.chassisModel | DefaultNullOrEmpty)\n                      : (activeRecord.model | DefaultNullOrEmpty)\n                  }}\n                </dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n  </main>\n</div>\n<ng-template #hyphen><span>-</span></ng-template>\n"
        },
        {
            "name": "MultipleRecordsContainer",
            "id": "component-MultipleRecordsContainer-8c5665f29d49169e672139914f598ca77790d19a195ef6b84879a1da92e0ff261f10f7325c49c30c611c2af92cac41cbac2cb0e9a8235cf96451ed3efaf5a39f",
            "file": "archive/src/app/multiple-records/multiple-records.container.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-multiple-records-container",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"vehicleTechRecords$ | async as vehicleTechRecords\">\n  <vtm-multiple-records\n    [vehicleTechRecords]=\"vehicleTechRecords\"\n    (setVehicleTechRecord)=\"onSetSelectedVehicleTechRecord($event)\"\n  >\n  </vtm-multiple-records>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vehicleTechRecords$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<VehicleTechRecordModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSetSelectedVehicleTechRecord",
                    "args": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "vehicleTechRecord",
                            "type": "VehicleTechRecordModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\n\nimport { selectVehicleTechRecordModelHavingStatusAll } from '@app/store/selectors/VehicleTechRecordModel.selectors';\nimport { VehicleTechRecordModel } from '@app/models/vehicle-tech-record.model';\nimport { SetSelectedVehicleTechnicalRecord } from '@app/store/actions/VehicleTechRecordModel.actions';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-multiple-records-container',\n  template: `\n    <ng-container *ngIf=\"vehicleTechRecords$ | async as vehicleTechRecords\">\n      <vtm-multiple-records\n        [vehicleTechRecords]=\"vehicleTechRecords\"\n        (setVehicleTechRecord)=\"onSetSelectedVehicleTechRecord($event)\"\n      >\n      </vtm-multiple-records>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultipleRecordsContainer implements OnInit {\n  vehicleTechRecords$: Observable<VehicleTechRecordModel[]>;\n\n  constructor(private store: Store<IAppState>) {\n    this.vehicleTechRecords$ = this.store.select(selectVehicleTechRecordModelHavingStatusAll);\n  }\n\n  ngOnInit(): void {}\n\n  onSetSelectedVehicleTechRecord(vehicleTechRecord: VehicleTechRecordModel) {\n    this.store.dispatch(\n      new SetSelectedVehicleTechnicalRecord({\n        vehicleRecord: vehicleTechRecord,\n        viewState: VIEW_STATE.VIEW_ONLY\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "NotesComponent",
            "id": "component-NotesComponent-1313a79cce6b980bcaa56f9a33cbf917b9589b13065a0a71d0b073f9a49777a970016930f405eb5740a750762dd5645ebc58d369a8d3c52e16ef0ce8c7247eb5",
            "file": "archive/src/app/test-record/notes/notes.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-notes',\n  templateUrl: './notes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotesComponent implements OnInit {\n  @Input() testType: TestType;\n  @Input() editState: VIEW_STATE;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-additionalNotesRecorded\">\n      {{ testType.additionalNotesRecorded | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n</dl>\n\n<ng-container *ngIf=\"editState\">\n  <vtm-notes-edit [currentState]=\"editState\" [testType]=\"testType\"></vtm-notes-edit>\n</ng-container>\n"
        },
        {
            "name": "NotesComponent",
            "id": "component-NotesComponent-df23a6e6d66f57a2fb9700144020db8a92e519300da79e7a2c0818afab4e3b7803ae39c3199fffebceb507fc7cda99ac86782d4b6f3099617cf4677e8f1feede-1",
            "file": "archive/src/app/technical-record/notes/notes.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-notes',\n  templateUrl: './notes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotesComponent implements OnChanges {\n  @Input() techRecord: TechRecord;\n  @Input() editState: boolean;\n\n  notes: string;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { techRecord } = changes;\n\n    if (techRecord) {\n      this.notes = this.techRecord.notes;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnChanges"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NotesComponent-1",
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\" *ngIf=\"techRecord.vehicleType !== 'psv'\">\n      <dt class=\"govuk-summary-list__key\">Notes</dt>\n      <dd id=\"test-notes\" class=\"govuk-summary-list__value\">\n        <span class=\"notes-section\">{{ notes | DefaultNullOrEmpty }}</span>\n      </dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"techRecord.vehicleType === 'psv'\">\n      <dt class=\"govuk-summary-list__key\">Remarks</dt>\n      <dd id=\"test-remarks\" class=\"govuk-summary-list__value\">\n        <span class=\"notes-section\">{{ techRecord.remarks | DefaultNullOrEmpty }}</span>\n      </dd>\n    </div>\n\n    <div\n      class=\"govuk-summary-list__row\"\n      *ngIf=\"techRecord.vehicleType !== 'trl' && techRecord.vehicleType !== 'hgv'\"\n    >\n      <dt class=\"govuk-summary-list__key\">Dispensations</dt>\n      <dd id=\"test-dispensations\" class=\"govuk-summary-list__value\">\n        <span class=\"notes-section\">{{ techRecord.dispensations | DefaultNullOrEmpty }}</span>\n      </dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-notes-edit [notesDetails]=\"notes\"></vtm-notes-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "NotesEditComponent",
            "id": "component-NotesEditComponent-80cf45b9c3448a24f8a33be6949db741cbd2c4b8bfde8a76892aba7c69fe268dba41dca35ce964c7e1e5d042e5f549537cd1027bfb2d0eaa715f4f18b4793a6f",
            "file": "archive/src/app/test-record/notes/edit/notes-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-notes-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notes-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "currentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "testTypeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { ControlContainer, FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { TestType } from '@app/models/test.type';\n\n@Component({\n  selector: 'vtm-notes-edit',\n  templateUrl: './notes-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class NotesEditComponent implements OnInit {\n  @Input() currentState: VIEW_STATE;\n  @Input() testType: TestType;\n  @Input() isSubmitted: boolean;\n\n  testResultChildForm: FormGroupDirective;\n  testTypeGroup: FormGroup;\n\n  constructor(parentForm: FormGroupDirective) {\n    this.testResultChildForm = parentForm;\n  }\n\n  ngOnInit() {\n    this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n\n    if (!!this.testTypeGroup) {\n      this.testTypeGroup.addControl(\n        'additionalNotesRecorded',\n        new FormControl(this.testType.additionalNotesRecorded)\n      );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-full\">\n    <form class=\"govuk-form-group\" formGroupName=\"testType\">\n      <fieldset class=\"govuk-fieldset\">\n        <div class=\"govuk-form-group\">\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <span id=\"more-detail-hint\" class=\"govuk-hint\">\n                Will not be present in the certificate\n              </span>\n              <textarea\n                class=\"govuk-textarea\"\n                id=\"test-additionalNotesRecorded\"\n                formControlName=\"additionalNotesRecorded\"\n                rows=\"5\"\n              ></textarea>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "NotesEditComponent",
            "id": "component-NotesEditComponent-c336cbb6a880f401fbcccfe64004aaab63247942c86d52381c4bfc4088c04a74f99ba07981e780f1dde19789175ad8582844e15f161938bc436588b36afee089-1",
            "file": "archive/src/app/technical-record/notes/edit/notes-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-notes-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notes-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "notesDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, ControlContainer, FormGroupDirective, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'vtm-notes-edit',\n  templateUrl: './notes-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class NotesEditComponent implements OnInit {\n  @Input() notesDetails: string;\n\n  techRecordFg: FormGroup;\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n\n    const notes: string = !!this.notesDetails ? this.notesDetails : null;\n\n    this.techRecordFg.addControl('notes', this.fb.control(notes));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NotesEditComponent-1",
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <textarea\n            class=\"govuk-textarea\"\n            id=\"test-edit-notes\"\n            rows=\"5\"\n            formControlName=\"notes\"\n            vtmNullValue\n          ></textarea>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PageNotFoundComponentComponent",
            "id": "component-PageNotFoundComponentComponent-fd715df5465f72b46362e2cecd286736ae88c27870ebef43c43253f3168ce820c3560576483535b3dd5db1fd272f3178d407b2e785d98790a46d20c7f7cc43aa",
            "file": "archive/src/app/shared/page-not-found-component/page-not-found-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-page-not-found-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found-component.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vtm-page-not-found-component',\n  templateUrl: './page-not-found-component.component.html'\n})\nexport class PageNotFoundComponentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  page-not-found-component works!\n</p>\n"
        },
        {
            "name": "PlatesComponent",
            "id": "component-PlatesComponent-68ac92675215441272310bb43e63a8752e5648de921932b83745f25d0dacce7638e778684efef1d7025f339179796fe9548569ecebb9135e92c4ba84dae8d7f4",
            "file": "archive/src/app/technical-record/plates/plates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-plates",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./plates.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "plates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Plate[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Plate } from '../../models/tech-record.model';\n@Component({\n  selector: 'vtm-plates',\n  templateUrl: './plates.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatesComponent implements OnInit {\n  @Input() plates: Plate[];\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table class=\"govuk-table t-history\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\">Serial number</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Reason for creation</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created by</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created at</th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\" *ngIf=\"plates; else noPlates\">\n    <tr\n      class=\"govuk-table__row\"\n      *ngFor=\"let plate of plates | SortByDatePipe: 'plateIssueDate'; let i = index\"\n    >\n      <td id=\"test-plateSerialNumber-{{ i }}\" class=\"govuk-table__cell\">\n        {{ plate.plateSerialNumber | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-plateReasonForIssue-{{ i }}\" class=\"govuk-table__cell\">\n        {{ plate.plateReasonForIssue | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-plateIssuer-{{ i }}\" class=\"govuk-table__cell\">\n        {{ plate.plateIssuer | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-plateIssueDate-{{ i }}\" class=\"govuk-table__cell\">\n        <span *ngIf=\"plate.plateIssueDate; else hyphen\">\n          {{ plate.plateIssueDate | date: 'dd/MM/yyyy' }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n  <ng-template #noPlates>\n    <tbody class=\"govuk-table__body\">\n      <tr>\n        <td id=\"test-plateSerialNumber-0\">-</td>\n        <td id=\"test-plateReasonForIssue-0\">-</td>\n        <td id=\"test-plateIssuer-0\">-</td>\n        <td id=\"test-plateIssueDate-0\">-</td>\n      </tr>\n    </tbody>\n  </ng-template>\n</table>\n<ng-template #hyphen><span>-</span></ng-template>\n"
        },
        {
            "name": "PreventLeavePageModalComponent",
            "id": "component-PreventLeavePageModalComponent-9c121d273f7842e17879bf6a8e798bc299569b3d2df53c1d2bcfb887a27f2c002927aa6cb04010a308e0fbcc76efa4a6039c7dfe4c187588ad613341a32bfcaf",
            "file": "archive/src/app/shared/prevent-page-leave-modal/prevent-leave-page-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-prevent-leave-page-modal",
            "styleUrls": [
                "./prevent-leave-page-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./prevent-leave-page-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<PreventLeavePageModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "action",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'vtm-prevent-leave-page-modal',\n  templateUrl: './prevent-leave-page-modal.component.html',\n  styleUrls: ['./prevent-leave-page-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PreventLeavePageModalComponent {\n  constructor(public dialogRef: MatDialogRef<PreventLeavePageModalComponent>) {}\n\n  close(): void {\n    this.dialogRef.close(false);\n  }\n\n  action(): void {\n    this.dialogRef.close(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.mat-dialog-content {\n  overflow: hidden;\n}\n\n.title {\n  color: #0b0c0c;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 43px;\n  width: 705px;\n  text-align: left;\n}\n\n.cancel {\n  color: #005ea5;\n  font-family: 'GDS Transport', Arial, sans-serif;\n  font-size: 19px;\n  font-weight: 300;\n  line-height: 44px;\n  text-align: left;\n  padding-left: 2rem;\n  cursor: pointer;\n  span {\n    border-bottom: solid;\n    border-bottom-width: 2px;\n  }\n}\n",
                    "styleUrl": "./prevent-leave-page-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<PreventLeavePageModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<PreventLeavePageModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div mat-dialog-content>\n  <h1 class=\"govuk-heading-m title\">Unsaved changes</h1>\n  <span class=\"govuk-hint\">\n    If you leave this page, your changes will be lost.\n  </span>\n</div>\n\n<button class=\"govuk-button\" data-module=\"govuk-button\" (click)=\"action()\" cdkFocusInitial>\n  Leave and lose changes\n</button>\n\n<a class=\"cancel\" (click)=\"close()\">\n  <span>Continue changing record</span>\n</a>\n"
        },
        {
            "name": "PurchaserComponent",
            "id": "component-PurchaserComponent-1760a54bff6a9d2fda507c6f6da12854fe7ed6d740d308aef1c948c88ef093a843d4de7593e0c8277620f0abb32196c6d0dcd93ad094dc6b18896a63a60286f1",
            "file": "archive/src/app/technical-record/purchaser/purchaser.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-purchaser",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./purchaser.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "address1And2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "purchaser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PurchaserDetails",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\nimport { PurchaserDetails, TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-purchaser',\n  templateUrl: './purchaser.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PurchaserComponent implements OnChanges {\n  @Input() techRecord: TechRecord;\n\n  address1And2: string;\n  purchaser: PurchaserDetails;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { techRecord } = changes;\n\n    if (techRecord) {\n      this.purchaser = !!this.techRecord.purchaserDetails\n        ? this.techRecord.purchaserDetails\n        : ({} as PurchaserDetails);\n\n      this.address1And2 = Object.keys(this.purchaser).length\n        ? `${this.purchaser.address1} ${this.purchaser.address2}`\n        : '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container>\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Name</dt>\n      <dd id=\"test-purchaser-name\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.name | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Building and street</dt>\n      <dd id=\"test-purchaser-address\" class=\"govuk-summary-list__value\">\n        {{ address1And2 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Town or city</dt>\n      <dd id=\"test-purchaser-postTown\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.postTown | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">County</dt>\n      <dd id=\"test-purchaser-address3\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.address3 | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Postcode</dt>\n      <dd id=\"test-purchaser-postCode\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.postCode | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Telephone number</dt>\n      <dd id=\"test-purchaser-telephoneNumber\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.telephoneNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Email address</dt>\n      <dd id=\"test-purchaser-emailAddress\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.emailAddress | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Fax Number</dt>\n      <dd id=\"test-purchaser-faxNumber\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.faxNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Purchaser Notes</dt>\n      <dd id=\"test-purchaser-purchaserNotes\" class=\"govuk-summary-list__value\">\n        {{ purchaser?.purchaserNotes | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "RecordIdentificationComponent",
            "id": "component-RecordIdentificationComponent-fc2343de4799faa310e8ad765021a9ca88c25a047a43f19f976bcb45d1ad620d1b23b9cec3bd85aaea284e7758dde6e8fc895c00655a555cd6e4e30291771f61",
            "file": "archive/src/app/technical-record/record-identification/record-identification.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-record-identification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./record-identification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "vehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "VehicleTechRecordEdit",
                    "decorators": []
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "VIEW_STATE",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isTrailer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { VehicleTechRecordEdit } from '@app/models/vehicle-tech-record.model';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-record-identification',\n  templateUrl: './record-identification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecordIdentificationComponent implements OnInit {\n  @Input() vehicleTechRecord: VehicleTechRecordEdit;\n  @Input() editState: boolean;\n  @Input() viewState: VIEW_STATE;\n\n  isTrailer: boolean | string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.isTrailer = this.vehicleTechRecord.trailerId || false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Vehicle identification number (VIN)\n      </dt>\n      <dd id=\"test-vin\" class=\"govuk-summary-list__value\">\n        {{ vehicleTechRecord.vin }}\n      </dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Vehicle registration mark (VRM)\n      </dt>\n      <dd id=\"test-vrm\" class=\"govuk-summary-list__value\">\n        <div *ngIf=\"vehicleTechRecord.primaryVrm; else hyphen\">\n          <p>{{ vehicleTechRecord.primaryVrm }}</p>\n        </div>\n      </dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Previous VRM\n      </dt>\n      <dd id=\"test-secondaryVrms\" class=\"govuk-summary-list__value\">\n        <div *ngIf=\"vehicleTechRecord.secondaryVrms.length; else hyphen\">\n          <p *ngFor=\"let vrmSecondary of vehicleTechRecord.secondaryVrms; let i = index\">\n            <span id=\"{{ 'test-vrm-' + i }}\">{{ vrmSecondary }}</span>\n          </p>\n        </div>\n      </dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isTrailer\">\n      <dt class=\"govuk-summary-list__key main-details\">\n        Trailer ID\n      </dt>\n      <dd id=\"test-trailerId\" class=\"govuk-summary-list__value\">\n        {{ vehicleTechRecord.trailerId }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<!-- Edit Vehicle Identification -->\n<ng-container *ngIf=\"editState\">\n  <vtm-record-identification-edit\n    [vin]=\"vehicleTechRecord.vin\"\n    [primaryVrm]=\"vehicleTechRecord.primaryVrm\"\n    [viewState]=\"viewState\"\n  ></vtm-record-identification-edit>\n</ng-container>\n"
        },
        {
            "name": "RecordIdentificationEditComponent",
            "id": "component-RecordIdentificationEditComponent-9cd091b72ee05b7ea2c4bf44513d61bdd43745545c7894ff2f649622d361c0f9c309b7fb676227a3717de75e4ff68663729da630cdcd0d5a3388d1ce52014e15",
            "file": "archive/src/app/technical-record/record-identification/edit/record-identification-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-record-identification-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./record-identification-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "primaryVrm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "vin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disableVinEditing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "vehicleRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ControlContainer, FormGroupDirective, FormBuilder, FormGroup } from '@angular/forms';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-record-identification-edit',\n  templateUrl: './record-identification-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class RecordIdentificationEditComponent implements OnInit {\n  @Input() vin: string;\n  @Input() primaryVrm: string;\n  @Input() viewState: VIEW_STATE;\n\n  vehicleRecordFg: FormGroup;\n  disableVinEditing: boolean;\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.disableVinEditing = this.viewState === VIEW_STATE.EDIT;\n\n    this.vehicleRecordFg = this.parent.form;\n    this.vehicleRecordFg.removeControl('vin');\n    this.vehicleRecordFg.removeControl('primaryVrm');\n\n    this.vehicleRecordFg.addControl('vin', this.fb.control(decodeURIComponent(this.vin)));\n    this.vehicleRecordFg.addControl(\n      'primaryVrm',\n      this.fb.control(decodeURIComponent(this.primaryVrm))\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"vehicleRecordFg\">\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-vin\">\n              Vehicle identification number (VIN)\n            </label>\n            <input\n              id=\"test-edit-vin\"\n              type=\"text\"\n              class=\"govuk-input govuk-input--width-20\"\n              formControlName=\"vin\"\n              [readOnly]=\"disableVinEditing\"\n            />\n          </div>\n\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-vrm\">\n              Vehicle registration number (VRM)\n            </label>\n            <input\n              id=\"test-edit-vrm\"\n              class=\"govuk-input govuk-input--width-10\"\n              type=\"text\"\n              formControlName=\"primaryVrm\"\n            />\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "RecordStatusComponent",
            "id": "component-RecordStatusComponent-59c032044ad954de61a601e060fb09a390f604cc585ff3c51cbc6c5330d77b3e0f849ec88054e08b83b946624ebc2923d94f8e58eb6b1efc9cc9cc7e004def59",
            "file": "archive/src/app/technical-record/record-status/record-status.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-record-status",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./record-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scrollToSection",
                    "defaultValue": "new EventEmitter<Object>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "recordCompleteness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "titleOfTechHistory",
                    "defaultValue": "PANEL_TITLE.TECHNICAL_RECORD_HISTORY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "emitPanelTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { TechRecordHelperService } from '../tech-record-helper.service';\nimport { PANEL_TITLE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-record-status',\n  templateUrl: './record-status.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecordStatusComponent implements OnChanges {\n  @Input() activeRecord: TechRecord;\n  @Input() editState: boolean;\n  @Output() scrollToSection = new EventEmitter<Object>();\n\n  titleOfTechHistory: string = PANEL_TITLE.TECHNICAL_RECORD_HISTORY;\n  recordCompleteness: string;\n\n  constructor(private techRecHelper: TechRecordHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { activeRecord } = changes;\n\n    if (activeRecord) {\n      this.recordCompleteness = this.techRecHelper.getCompletenessInfoByKey(\n        this.activeRecord.recordCompleteness\n      );\n    }\n  }\n\n  emitPanelTitle() {\n    this.scrollToSection.emit({ title: this.titleOfTechHistory });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <div class=\"govuk-inset-text govuk-!-margin-top-2\">\n    <div class=\"govuk-!-padding-top-1\">\n      <p>\n        <span class=\"govuk-!-font-weight-bold govuk-!-font-size-19 govuk-!-padding-right-2\">\n          Status\n        </span>\n\n        <span id=\"test-status\" class=\"govuk-!-font-weight-regular govuk-!-font-size-19\">\n          {{ activeRecord.statusCode | titlecase }}\n        </span>\n      </p>\n\n      <p>\n        <a\n          href=\"javascript:void(0)\"\n          id=\"test-scroll-to-section\"\n          class=\"govuk-link\"\n          (click)=\"emitPanelTitle()\"\n          >{{ titleOfTechHistory }}</a\n        >\n      </p>\n\n      <p>\n        <span class=\"govuk-!-font-weight-bold govuk-!-font-size-19 govuk-!-padding-right-2\">\n          Record completeness\n        </span>\n\n        <span\n          id=\"test-record-completeness\"\n          class=\"govuk-!-font-weight-regular govuk-!-font-size-19\"\n        >\n          {{ recordCompleteness }}\n        </span>\n      </p>\n    </div>\n  </div>\n</ng-container>\n\n<!-- Edit Record Status -->\n<ng-container *ngIf=\"editState\">\n  <vtm-record-status-edit [techRecord]=\"activeRecord\"></vtm-record-status-edit>\n</ng-container>\n"
        },
        {
            "name": "RecordStatusEditComponent",
            "id": "component-RecordStatusEditComponent-1643b59d3dc2f35abfd332f2dd927366bae56bcd8d00d09036c6f835249de7a097c933c8de908f2c922ff9ea18f13f975e8cf761332fecdee95a6ec0550d53b2",
            "file": "archive/src/app/technical-record/record-status/edit/record-status-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-record-status-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./record-status-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "recordCompleteness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "recordOptions",
                    "defaultValue": "{\n    ['Current']: RECORD_STATUS.CURRENT,\n    ['Provisional']: RECORD_STATUS.PROVISIONAL\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroupDirective, ControlContainer, FormGroup, FormBuilder } from '@angular/forms';\n\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { RECORD_STATUS } from '@app/app.enums';\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\n\n@Component({\n  selector: 'vtm-record-status-edit',\n  templateUrl: './record-status-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class RecordStatusEditComponent implements OnInit {\n  @Input() techRecord: TechRecord;\n\n  recordCompleteness: string;\n\n  techRecordFg: FormGroup;\n  recordOptions = {\n    ['Current']: RECORD_STATUS.CURRENT,\n    ['Provisional']: RECORD_STATUS.PROVISIONAL\n  };\n\n  constructor(\n    private parent: FormGroupDirective,\n    private fb: FormBuilder,\n    private techRecHelper: TechRecordHelperService\n  ) {}\n\n  ngOnInit() {\n    this.recordCompleteness = this.techRecHelper.getCompletenessInfoByKey(\n      this.techRecord.recordCompleteness\n    );\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl('statusCode', this.fb.control(this.techRecord.statusCode));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <!-- Vehicle record status -->\n          <div class=\"govuk-radios govuk-!-margin-bottom-0\">\n            <label for=\"test-edit-statusCode\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Status\n            </label>\n\n            <div class=\"govuk-radios__item\" *ngFor=\"let option of recordOptions | keyvalue\">\n              <input\n                class=\"govuk-radios__input\"\n                id=\"test-edit-statusCode-{{ option.key }}\"\n                name=\"statusCode\"\n                formControlName=\"statusCode\"\n                type=\"radio\"\n                [value]=\"option.value\"\n              />\n              <label\n                class=\"govuk-label govuk-radios__label\"\n                for=\"test-edit-statusCode-{{ option.key }}\"\n              >\n                {{ option.key }}\n              </label>\n            </div>\n          </div>\n\n          <p class=\"govuk-body govuk-!-margin-top-4\">\n            <span class=\"govuk-!-font-weight-bold govuk-!-padding-right-2\">\n              Record completeness\n            </span>\n\n            <span id=\"test-edit-record-completeness\" class=\"govuk-!-font-weight-regular\">\n              {{ recordCompleteness }}\n            </span>\n          </p>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-55e4cdf4c1db270ec0f40b7e272c7ee2bd4f9147ffcfe911c96d222853a142ee86c65c7b06a66899d303ad95ad90b614b4bb7627798f432fe3e22b18423dc2ec",
            "file": "src/app/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "searchError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "vehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordModel",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "searchTechRecords",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TechRecord } from '../models/tech-record.model';\nimport { VehicleTechRecordModel } from '../models/vehicle-tech-record.model';\nimport { TechnicalRecordService } from '../services/technical-record.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent {\n  searchError: string | undefined;\n  vehicleTechRecord?: VehicleTechRecordModel;\n  techRecord?: TechRecord;\n\n  constructor(private technicalRecordService: TechnicalRecordService) { }\n\n  public searchTechRecords(searchTerm: string) {\n    this.searchError = undefined;\n    if (searchTerm) {\n      this.technicalRecordService.getByVIN(searchTerm)\n      .subscribe((data: VehicleTechRecordModel[]) => {\n        if (data.length === 1) {\n          this.vehicleTechRecord = data[0];\n          if (this.vehicleTechRecord.techRecord.length > 0) {\n            this.techRecord = this.vehicleTechRecord.techRecord[0];\n          }\n        };\n      });\n    } else {\n      this.searchError = \"Enter a vehicle registration mark, trailer ID or vehicle identification number\"\n    }\n  }\n\n  // public searchTechRecords(searchIdentifier: string, searchCriteria: string) {\n    // this.isLoading = true;\n    // this.searchParams.searchIdentifier = encodeURIComponent(searchIdentifier);\n\n    // switch (searchCriteria) {\n    //   case SEARCH_CRITERIA.VRM_CRITERIA:\n    //     this.searchParams.searchCriteria = 'vrm';\n    //     break;\n    //   case SEARCH_CRITERIA.FULL_VIN_CRITERIA:\n    //     this.searchParams.searchCriteria = 'vin';\n    //     break;\n    //   case SEARCH_CRITERIA.PARTIAL_VIN_CRITERIA:\n    //     this.searchParams.searchCriteria = 'partialVin';\n    //     break;\n    //   case SEARCH_CRITERIA.TRL_CRITERIA:\n    //     this.searchParams.searchCriteria = 'trailerId';\n    //     break;\n    //   case SEARCH_CRITERIA.ALL_CRITERIA:\n    //   default:\n    //     this.searchParams.searchCriteria = 'all';\n    // }\n\n    // this.store.dispatch(new GetVehicleTechRecordHavingStatusAll(this.searchTerm));\n  // }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "technicalRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "technicalRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"govuk-grid-row search-page\">\n  <div class=\"govuk-grid-column-full\">\n    <div *ngIf=\"searchError\" class=\"govuk-error-summary\" aria-labelledby=\"error-summary-title\" role=\"alert\" data-module=\"govuk-error-summary\">\n      <h2 class=\"govuk-error-summary__title\" id=\"error-summary-title\">There is a problem</h2>\n      <div class=\"govuk-error-summary__body\">\n        <ul class=\"govuk-list govuk-error-summary__list\">\n          <li>\n            <a href=\"#search-term\">{{ searchError }}</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <p class=\"govuk-heading-xl govuk-!-font-weight-bold\">Search for a technical record</p>\n  </div>\n\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\" [ngClass]=\"{ 'govuk-form-group--error': searchError }\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"searchIdentifier\"> Vehicle registration mark, trailer ID or vehicle identification number </label>\n      <span *ngIf=\"searchError\" id=\"search-term\" class=\"govuk-error-message\">\n        <span class=\"govuk-visually-hidden\">Error:</span>\n        <p class=\"white-space--normal\">{{ searchError }}</p>\n      </span>\n\n      <input #searchTerm class=\"govuk-input govuk-!-width-two-thirds\" [ngClass]=\"{ 'govuk-input--error': searchError }\" id=\"search-term\" name=\"search-term\" type=\"text\" aria-describedby=\"search-term\" />\n    </div>\n\n    <button class=\"govuk-button\" data-module=\"govuk-button\" (click)=\"searchTechRecords(searchTerm.value)\">Search</button>\n  </div>\n\n  <app-vehicle-technical-record *ngIf=\"techRecord\" [technicalRecord]=\"techRecord\"></app-vehicle-technical-record>\n</div>\n"
        },
        {
            "name": "SeatbeltInstallationCheckComponent",
            "id": "component-SeatbeltInstallationCheckComponent-e4754a6a880d8ce7c1e51e88e9314c3582f8e7775c0723ffa278f7f51942d6acd76891630cc367b53654e2f3438ca0dcb1819a037b6af740466fae2b2e61da66",
            "file": "archive/src/app/test-record/seatbelt-installation-check/seatbelt-installation-check.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-seatbelt-installation-check",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./seatbelt-installation-check.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "hasSeatBeltApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "seatbeltOptionSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { ControlContainer, FormGroupDirective } from '@angular/forms';\n\n@Component({\n  selector: 'vtm-seatbelt-installation-check',\n  templateUrl: './seatbelt-installation-check.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class SeatbeltInstallationCheckComponent implements OnChanges {\n  @Input() testType: TestType;\n  @Input() editState: VIEW_STATE;\n  @Input() hasSeatBeltApplicable: boolean;\n  seatbeltOptionSelected: string;\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.seatbeltOptionSelected = this.testType.seatbeltInstallationCheckDate ? 'Yes' : 'No';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Carried out during test\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-seatbeltInstallationCheckDate\">\n      {{ seatbeltOptionSelected | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Number of seatbelts fitted\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-numberOfSeatbeltsFitted\">\n      {{ testType.numberOfSeatbeltsFitted | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key border--bottom-none\">\n      Most recent installation check\n    </dt>\n    <dd\n      class=\"govuk-summary-list__value border--bottom-none\"\n      id=\"test-lastSeatbeltInstallationCheckDate\"\n    >\n      <span *ngIf=\"testType.lastSeatbeltInstallationCheckDate; else hyphen\">\n        {{ testType.lastSeatbeltInstallationCheckDate | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n  </div>\n</dl>\n<ng-template #hyphen><span>-</span></ng-template>\n\n<ng-container *ngIf=\"editState && !hasSeatBeltApplicable\">\n  <vtm-seatbelt-installation-check-edit\n    [testType]=\"testType\"\n  ></vtm-seatbelt-installation-check-edit>\n</ng-container>\n"
        },
        {
            "name": "SeatbeltInstallationCheckEditComponent",
            "id": "component-SeatbeltInstallationCheckEditComponent-f988232d89882f3218dc0f8627ddf6c979a2f0072ca0991a814cfb844ec7591a665d51585f7dfca61edb12042d318668b5eb468d524742ef33d22db9859814da",
            "file": "archive/src/app/test-record/seatbelt-installation-check/edit/seatbelt-installation-check-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-seatbelt-installation-check-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./seatbelt-installation-check-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TestType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "seatbeltInstallationCheckDateOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "seatbeltOptionSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "testTypeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport {\n  ControlContainer,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  Validators\n} from '@angular/forms';\nimport { SelectOption } from '@app/models/select-option';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\n\n@Component({\n  selector: 'vtm-seatbelt-installation-check-edit',\n  templateUrl: './seatbelt-installation-check-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class SeatbeltInstallationCheckEditComponent implements OnInit {\n  @Input() testType: TestType;\n  @Input() isSubmitted: boolean;\n\n  testResultChildForm: FormGroupDirective;\n  testTypeGroup: FormGroup;\n  seatbeltInstallationCheckDateOptions: SelectOption[];\n  seatbeltOptionSelected: string;\n\n  constructor(parentForm: FormGroupDirective) {\n    this.testResultChildForm = parentForm;\n  }\n\n  ngOnInit() {\n    this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n    if (!!this.testTypeGroup) {\n      this.testTypeGroup.addControl(\n        'seatbeltInstallationCheckDate',\n        new FormControl(this.testType.seatbeltInstallationCheckDate, Validators.required)\n      );\n      this.testTypeGroup.addControl(\n        'numberOfSeatbeltsFitted',\n        new FormControl(this.testType.numberOfSeatbeltsFitted, Validators.required)\n      );\n      this.testTypeGroup.addControl(\n        'lastSeatbeltInstallationCheckDate',\n        new FormControl(this.testType.lastSeatbeltInstallationCheckDate, Validators.required)\n      );\n    }\n\n    this.seatbeltOptionSelected = this.testType.seatbeltInstallationCheckDate ? 'Yes' : 'No';\n    this.seatbeltInstallationCheckDateOptions = new DisplayOptionsPipe().transform(\n      ['Yes', 'No'],\n      [this.seatbeltOptionSelected]\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form class=\"govuk-form-group\" formGroupName=\"testType\">\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-three-quarters\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Carried out during test\n              </label>\n\n              <div class=\"govuk-radios govuk-radios--inline\">\n                <div\n                  *ngFor=\"let option of seatbeltInstallationCheckDateOptions\"\n                  class=\"govuk-radios__item\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"test-seatbelt-{{ option.id }}\"\n                    formControlName=\"seatbeltInstallationCheckDate\"\n                    type=\"radio\"\n                    value=\"{{ option.name }}\"\n                    [checked]=\"option.selected\"\n                  />\n                  <label class=\"govuk-label govuk-radios__label\">\n                    {{ option.name }}\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n                <div class=\"govuk-grid-column-three-quarters\">\n                  <label class=\"govuk-label govuk-!-font-weight-bold\">\n                    Number of seatbelts fitted\n                  </label>\n                </div>\n              </div>\n              <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n                <div class=\"govuk-grid-column-one-third\">\n                  <input\n                    class=\"govuk-input\"\n                    id=\"test-numberOfSeatbeltsFitted\"\n                    formControlName=\"numberOfSeatbeltsFitted\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n\n              <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n                <div class=\"govuk-grid-column-three-quarters\">\n                  <label class=\"govuk-label govuk-!-font-weight-bold\">\n                    Most recent installation check\n                  </label>\n                  <vtm-date-input\n                    id=\"test-lastSeatbeltInstallationCheckDate\"\n                    ariaDescribedBy=\"lastSeatbeltInstallationCheckDate\"\n                    formControlName=\"lastSeatbeltInstallationCheckDate\"\n                  >\n                  </vtm-date-input>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SelectTestTypeComponent",
            "id": "component-SelectTestTypeComponent-031aa607a89c6dd2a539dd9038d449827ebcefc8342de12e1e6b14565962984b50ec2415e4fbfcde0bbea1022bbabb973b4a3f487523c736b7545646e4150708",
            "file": "archive/src/app/test-record/select-test-type/select-test-type.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-select-test-type",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select-test-type.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filteredCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TreeData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "testTypeSelected",
                    "defaultValue": "new EventEmitter<KeyValue<string, string>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "testTypeData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValue<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectedTestTypeHandler",
                    "args": [
                        {
                            "name": "testTypeData",
                            "type": "KeyValue<string | string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testTypeData",
                            "type": "KeyValue<string | string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSelectedTestResult",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { KeyValue } from '@angular/common';\nimport { TreeData } from '@app/models/tree-data';\n\n@Component({\n  selector: 'vtm-select-test-type',\n  templateUrl: './select-test-type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectTestTypeComponent implements OnInit {\n  @Input() filteredCategories: TreeData[];\n  @Output() testTypeSelected = new EventEmitter<KeyValue<string, string>>();\n  testTypeData: KeyValue<string, string>;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  selectedTestTypeHandler(testTypeData: KeyValue<string, string>) {\n    this.testTypeData = testTypeData;\n  }\n\n  updateSelectedTestResult() {\n    this.testTypeSelected.emit(this.testTypeData);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container\">\n  <a class=\"govuk-back-link\" id=\"test-back-button\" vtmBackButton>Back</a>\n\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-full\">\n        <h1 class=\"govuk-heading-xl\" id=\"test-select-test-type\">Select a test type</h1>\n      </div>\n    </div>\n\n    <vtm-tree-component\n      [treeData]=\"filteredCategories\"\n      (sendTreeData)=\"selectedTestTypeHandler($event)\"\n    ></vtm-tree-component>\n\n    <!-- the emitter btn -->\n    <button\n      type=\"button\"\n      id=\"test-change-test-type\"\n      class=\"govuk-button\"\n      data-module=\"govuk-button\"\n      (click)=\"updateSelectedTestResult()\"\n    >\n      Change test type\n    </button>\n  </main>\n</div>\n"
        },
        {
            "name": "SelectTestTypeContainer",
            "id": "component-SelectTestTypeContainer-72c831d1665c1aadc4adbcd831a8b6c96ec83e5cf025729fd9d8b7f0a2f7acead216b8ef045c031214d75f403524ea694e1a123f8e36fe8e9c86065ff44cd773",
            "file": "archive/src/app/test-record/select-test-type/select-test-type.container.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-select-test-type-container",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"filteredCategories$ | async as filteredCategories\">\n  <vtm-select-test-type\n    [filteredCategories]=\"filteredCategories\"\n    (testTypeSelected)=\"updateSelectedTestResult($event)\"\n  >\n  </vtm-select-test-type>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredCategories$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TreeData[]>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "testRecord$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TestRecordTestType>",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSelectedTestResult",
                    "args": [
                        {
                            "name": "newTestTypeData",
                            "type": "KeyValue<string | string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newTestTypeData",
                            "type": "KeyValue<string | string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TestRecordTestType } from '@app/models/test-record-test-type';\nimport {\n  getFilteredTestTypeCategories,\n  selectTestTypeById\n} from '@app/store/selectors/VehicleTestResultModel.selectors';\nimport { UpdateSelectedTestResultModel } from '@app/store/actions/VehicleTestResultModel.actions';\nimport { KeyValue } from '@angular/common';\nimport { TreeData } from '@app/models/tree-data';\n\n@Component({\n  selector: 'vtm-select-test-type-container',\n  template: `\n    <ng-container *ngIf=\"filteredCategories$ | async as filteredCategories\">\n      <vtm-select-test-type\n        [filteredCategories]=\"filteredCategories\"\n        (testTypeSelected)=\"updateSelectedTestResult($event)\"\n      >\n      </vtm-select-test-type>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectTestTypeContainer implements OnInit {\n  testRecord$: Observable<TestRecordTestType>;\n  filteredCategories$: Observable<TreeData[]>;\n\n  constructor(private store: Store<IAppState>, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.testRecord$ = this.store.select(selectTestTypeById(params.get('id')));\n    });\n    this.filteredCategories$ = this.store.select(getFilteredTestTypeCategories);\n  }\n\n  updateSelectedTestResult(newTestTypeData: KeyValue<string, string>) {\n    this.store.dispatch(new UpdateSelectedTestResultModel(newTestTypeData));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ShellPage",
            "id": "component-ShellPage-037aa34a2ddd828b4bd6ed4ed49d9f19312793e9d526a72929b836c99baa72b12d4bedea6d60a8c74d7b8aae0ba39875223221d8c5b843fe9483c5eb429cffe4",
            "file": "archive/src/app/shell/shell.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-shell",
            "styleUrls": [
                "shell.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "shell.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'vtm-shell',\n  templateUrl: 'shell.page.html',\n  styleUrls: ['shell.page.scss']\n})\nexport class ShellPage {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\n  height: 100%;\n  width: 100%;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-areas:\n    'header'\n    'content'\n    'footer';\n}\n\n.header {\n  grid-area: header;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 5px;\n}\n\n.main {\n  grid-area: content;\n  width: 100%;\n  height: auto;\n}\n.footer {\n  grid-area: footer;\n  margin-top: 10px;\n  width: 100%;\n  height: 50px;\n}\n",
                    "styleUrl": "shell.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"grid-container\">\n  <vtm-loader></vtm-loader>\n  <div class=\"header\">\n    <vtm-header></vtm-header>\n  </div>\n  <div class=\"main\">\n    <vtm-error-summary></vtm-error-summary>\n    <router-outlet></router-outlet>\n  </div>\n  <div class=\"footer\">\n    <vtm-footer></vtm-footer>\n  </div>\n</div>\n<vtm-modal-container></vtm-modal-container>\n"
        },
        {
            "name": "SpinnerLoaderComponent",
            "id": "component-SpinnerLoaderComponent-720d48d019a45d8afc5216a87638db8c84bae514d9fbe2608a218f8289cbe8a078be5a80e5ef192e30154be16204fa6ca68907c8c2f55e8c84d015506d522943",
            "file": "archive/src/app/shared/spinner-loader/spinner-loader.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-loader",
            "styleUrls": [
                "./spinner-loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner-loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loader$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IAppState } from '@app/store/state/app.state';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'vtm-loader',\n  templateUrl: './spinner-loader.component.html',\n  styleUrls: ['./spinner-loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerLoaderComponent {\n  loader$: Observable<boolean>;\n  constructor(private _store: Store<IAppState>) {\n    this.loader$ = this._store.pipe(select((state) => state.loader.loading));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.overlay {\n  position: fixed;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: 1002;\n  & .spinner-wrapper {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    & #loader {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  @keyframes spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  .spinner div {\n    box-sizing: content-box;\n    left: 94px;\n    top: 45px;\n    position: absolute;\n    animation: spinner linear 1s infinite;\n    background: #000000;\n    width: 12px;\n    height: 34px;\n    border-radius: 6px / 7.82px;\n    transform-origin: 6px 55px;\n  }\n\n  .spinner div:nth-child(1) {\n    transform: rotate(0deg);\n    animation-delay: -0.9166666666666666s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(2) {\n    transform: rotate(30deg);\n    animation-delay: -0.8333333333333334s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(3) {\n    transform: rotate(60deg);\n    animation-delay: -0.75s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(4) {\n    transform: rotate(90deg);\n    animation-delay: -0.6666666666666666s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(5) {\n    transform: rotate(120deg);\n    animation-delay: -0.5833333333333334s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(6) {\n    transform: rotate(150deg);\n    animation-delay: -0.5s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(7) {\n    transform: rotate(180deg);\n    animation-delay: -0.4166666666666667s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(8) {\n    transform: rotate(210deg);\n    animation-delay: -0.3333333333333333s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(9) {\n    transform: rotate(240deg);\n    animation-delay: -0.25s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(10) {\n    transform: rotate(270deg);\n    animation-delay: -0.16666666666666666s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(11) {\n    transform: rotate(300deg);\n    animation-delay: -0.08333333333333333s;\n    background: #000000;\n  }\n\n  .spinner div:nth-child(12) {\n    transform: rotate(330deg);\n    animation-delay: 0s;\n    background: #000000;\n  }\n\n  .spinner-container {\n    width: 200px;\n    height: 200px;\n    display: inline-block;\n    overflow: hidden;\n  }\n\n  .spinner {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    transform: translateZ(0) scale(1);\n    backface-visibility: hidden;\n    transform-origin: 0 0; /* see note above */\n  }\n}\n",
                    "styleUrl": "./spinner-loader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"overlay\" *ngIf=\"loader$ | async as loader\">\n  <div class=\"govuk-box spinner-wrapper\" aria-busy=\"true\">\n    <div\n      id=\"loader\"\n      class=\"govuk-c-loader\"\n      role=\"progressbar\"\n      aria-label=\"Loading, please wait.\"\n      tabindex=\"0\"\n    >\n      <div class=\"spinner-container\">\n        <div class=\"spinner\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TankDetailsComponent",
            "id": "component-TankDetailsComponent-9231cfc1acfddbc7d6645d9a792ea1c067861bb8ccd25ffd0107a708d9a8cd43f3dc547f03966eec1a869addd4513a2142c1bcfc9d9e6b1ca195cfdcbb9e8907",
            "file": "archive/src/app/technical-record/adr/tank-details/tank-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tank-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tank-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tank",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { Tank } from '@app/models/Tank';\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-tank-details',\n  templateUrl: './tank-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TankDetailsComponent implements OnChanges {\n  tank: Tank;\n  vehicleType: string;\n\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    this.tank = this.adrDetails.tank;\n\n    const { vehicleDetails } = this.adrDetails;\n    this.vehicleType = vehicleDetails && vehicleDetails.type ? vehicleDetails.type : '';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <h2 class=\"govuk-heading-m\">Tank details</h2>\n\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Make</dt>\n      <dd id=\"test-ADR-tankManufacturer\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.tankManufacturer | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Year of manufacture</dt>\n      <dd id=\"test-ADR-yearOfManufacture\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.yearOfManufacture | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Manufacturer serial number</dt>\n      <dd id=\"test-ADR-tankManufacturerSerialNo\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.tankManufacturerSerialNo | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Tank type approval number</dt>\n      <dd id=\"test-ADR-tankTypeAppNo\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.tankTypeAppNo | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Code</dt>\n      <dd id=\"test-ADR-tankCode\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.tankCode | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Substances permitted</dt>\n      <dd id=\"test-ADR-substancesPermitted\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankStatement; else hyphen\">\n          {{ tank.tankStatement.substancesPermitted | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Statement reference number</dt>\n      <dd id=\"test-ADR-statement\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankStatement; else hyphen\">\n          {{ tank.tankStatement.statement | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Product list reference number</dt>\n      <dd id=\"test-ADR-productListRefNo\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankStatement; else hyphen\">\n          {{ tank.tankStatement.productListRefNo | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">UN number</dt>\n      <dd id=\"test-ADR-productListUnNo\" class=\"govuk-summary-list__value\">\n        <div\n          *ngIf=\"\n            tank &&\n              tank.tankStatement &&\n              tank.tankStatement.productListUnNo &&\n              tank.tankStatement.productListUnNo.length > 0;\n            else hyphen\n          \"\n        >\n          <div *ngFor=\"let listUN of tank.tankStatement.productListUnNo; let i = index\">\n            <p>\n              <span id=\"test-ADR-productListUnNo-{{ i }}\">{{ listUN }}</span>\n            </p>\n          </div>\n        </div>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Additional product list details</dt>\n      <dd id=\"test-ADR-productList\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankStatement; else hyphen\">\n          {{ tank.tankStatement.productList | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Special provisions</dt>\n      <dd id=\"test-ADR-specialProvisions\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"tank && tank.tankDetails; else hyphen\">\n          {{ tank.tankDetails.specialProvisions | DefaultNullOrEmpty }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<ng-container *ngIf=\"edit\">\n  <vtm-tank-details-edit [tank]=\"tank\" [vehicleType]=\"vehicleType\"></vtm-tank-details-edit>\n</ng-container>\n"
        },
        {
            "name": "TankDetailsEditComponent",
            "id": "component-TankDetailsEditComponent-de935c2833e947f5907e01d025facc1a3768e07b07bf10108e347ae35858624bee5f5c99193e1056e3746db534b8c20dd8b327113d3cd133a1b4813762d2543c",
            "file": "archive/src/app/technical-record/adr/tank-details/edit/tank-details-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tank-details-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tank-details-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Tank",
                    "decorators": []
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "classNumberSubstance",
                    "defaultValue": "SUBSTANCES.CLASSNUMBER",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "permittedSubstance",
                    "defaultValue": "SUBSTANCES.PERMITTED",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "showTankDetails",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "substanceProductSelect",
                    "defaultValue": "PRODUCT_LIST",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "substanceStatementSelect",
                    "defaultValue": "STATEMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tankValidationState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ValidationState>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addUNNumberControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "buildUNNumberControl",
                    "args": [
                        {
                            "name": "productList",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AbstractControl[]",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productList",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSubstancesPermittedInCode",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initControls",
                    "args": [
                        {
                            "name": "tankDataStmt",
                            "type": "TankStatement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tankDataDetails",
                            "type": "TankDetails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tankDataStmt",
                            "type": "TankStatement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tankDataDetails",
                            "type": "TankDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "removeUNNumberControl",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeUNNumberControlButOne",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetControlsWithinProductList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "substanceReferenceSelectChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "substancesPermittedChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "vehicleTypeChangesForTankEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, AbstractControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { Tank, TankDetails, TankStatement } from '@app/models/Tank';\nimport { PRODUCT_LIST, STATEMENT } from '../../adr.constants';\nimport { SUBSTANCES } from '@app/app.enums';\nimport { ValidationState, STATUS } from '../../adr-validation.mapper';\n\n@Component({\n  selector: 'vtm-tank-details-edit',\n  templateUrl: './tank-details-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TankDetailsEditComponent extends AdrComponent implements OnInit {\n  permittedSubstance = SUBSTANCES.PERMITTED;\n  classNumberSubstance = SUBSTANCES.CLASSNUMBER;\n\n  substanceStatementSelect = STATEMENT;\n  substanceProductSelect = PRODUCT_LIST;\n  adrForm: FormGroup;\n  showTankDetails = true;\n  tankValidationState$: Observable<ValidationState>;\n\n  @Input() tank: Tank;\n  @Input() vehicleType: string;\n\n  get tankDetails() {\n    return this.adrForm.get('tank.tankDetails') as FormGroup;\n  }\n\n  get tankStatement() {\n    return this.adrForm.get('tank.tankStatement') as FormGroup;\n  }\n\n  get substancesPermitted() {\n    return this.tankStatement.get('substancesPermitted') as FormControl;\n  }\n\n  get substanceReferenceSelect() {\n    return this.tankStatement.get('substanceReferenceSelect') as FormControl;\n  }\n\n  get productListUnNo() {\n    return this.tankStatement.get('productListUnNo') as FormArray;\n  }\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n    this.tankValidationState$ = this.validationMapper.getCurrentState();\n\n    const tankData: Tank = !!this.tank ? this.tank : ({} as Tank);\n    const tankDataStmt: TankStatement = !!tankData.tankStatement\n      ? tankData.tankStatement\n      : ({} as TankStatement);\n    const tankDataDetails: TankDetails = !!tankData.tankDetails\n      ? tankData.tankDetails\n      : ({} as TankDetails);\n\n    this.initControls(tankDataStmt, tankDataDetails);\n    this.handleFormChanges();\n\n    if (this.vehicleType) {\n      this.validationMapper.vehicleTypeSelected(this.vehicleType);\n    }\n  }\n\n  initControls(tankDataStmt: TankStatement, tankDataDetails: TankDetails): void {\n    const substanceReferenceSelect: string = tankDataStmt.statement\n      ? this.substanceStatementSelect\n      : tankDataStmt.productListRefNo\n      ? this.substanceProductSelect\n      : '';\n\n    let { substancesPermitted } = tankDataStmt;\n    substancesPermitted = !!substancesPermitted\n      ? this.getSubstancesPermittedInCode(substancesPermitted)\n      : '';\n\n    this.adrForm.addControl(\n      'tank',\n      this.fb.group({\n        tankDetails: this.fb.group({\n          tankManufacturer: this.fb.control(tankDataDetails.tankManufacturer),\n          yearOfManufacture: this.fb.control(tankDataDetails.yearOfManufacture),\n          tankManufacturerSerialNo: this.fb.control(tankDataDetails.tankManufacturerSerialNo),\n          tankTypeAppNo: this.fb.control(tankDataDetails.tankTypeAppNo),\n          tankCode: this.fb.control(tankDataDetails.tankCode),\n          specialProvisions: this.fb.control(tankDataDetails.specialProvisions)\n        }),\n        tankStatement: this.fb.group({\n          substancesPermitted: this.fb.control(\n            substancesPermitted.includes(SUBSTANCES.PERMITTED_CODE)\n              ? this.permittedSubstance\n              : substancesPermitted.includes(SUBSTANCES.CLASSNUMBER_CODE)\n              ? this.classNumberSubstance\n              : ''\n          ),\n          substanceReferenceSelect: this.fb.control(substanceReferenceSelect),\n          statement: this.fb.control(tankDataStmt.statement),\n          productListRefNo: this.fb.control(tankDataStmt.productListRefNo),\n          productListUnNo: this.fb.array(this.buildUNNumberControl(tankDataStmt.productListUnNo)),\n          productList: this.fb.control(tankDataStmt.productList)\n        })\n      })\n    );\n  }\n\n  getSubstancesPermittedInCode(value: string): string {\n    return value\n      .toLowerCase()\n      .trim()\n      .replace(/ /gi, '');\n  }\n\n  buildUNNumberControl(productList: string[]): AbstractControl[] {\n    return productList && productList.length\n      ? productList.map((item) => this.fb.control(item))\n      : [this.fb.control('')];\n  }\n\n  addUNNumberControl() {\n    this.productListUnNo.push(this.fb.control(''));\n    this.productListUnNo.markAsDirty();\n  }\n\n  removeUNNumberControl(index: number): void {\n    this.productListUnNo.removeAt(index);\n    this.productListUnNo.markAsDirty();\n  }\n\n  removeUNNumberControlButOne(): void {\n    let index = this.productListUnNo.controls.length - 1;\n    for (; index >= 1; index--) {\n      this.removeUNNumberControl(index);\n    }\n  }\n\n  handleFormChanges() {\n    this.substancesPermittedChanges();\n    this.substanceReferenceSelectChanges();\n    this.vehicleTypeChangesForTankEdit();\n  }\n\n  substancesPermittedChanges() {\n    this.substancesPermitted.valueChanges\n      .pipe(\n        tap((value) => {\n          if (value === this.permittedSubstance) {\n            this.substanceReferenceSelect.reset();\n            this.tankStatement.get('statement').reset();\n            this.resetControlsWithinProductList();\n          }\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  resetControlsWithinProductList() {\n    this.tankStatement.get('productListRefNo').reset();\n    this.removeUNNumberControlButOne();\n    this.productListUnNo.reset();\n    this.tankStatement.get('productList').reset();\n  }\n\n  substanceReferenceSelectChanges() {\n    this.substanceReferenceSelect.valueChanges\n      .pipe(\n        tap((value) => {\n          if (value === this.substanceStatementSelect) {\n            this.resetControlsWithinProductList();\n          }\n\n          if (value === this.substanceProductSelect) {\n            this.tankStatement.get('statement').reset();\n          }\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  vehicleTypeChangesForTankEdit() {\n    this.tankValidationState$\n      .pipe(\n        tap(({ tankDetailsEdit }) => {\n          if (tankDetailsEdit === STATUS.HIDDEN) {\n            this.showTankDetails = false;\n            this.tankDetails.reset();\n            this.tankDetails.get('tankManufacturer').clearValidators();\n            this.tankDetails.get('tankManufacturer').setErrors(null);\n\n            this.tankDetails.get('yearOfManufacture').clearValidators();\n            this.tankDetails.get('yearOfManufacture').setErrors(null);\n\n            this.tankDetails.get('tankManufacturerSerialNo').clearValidators();\n            this.tankDetails.get('tankManufacturerSerialNo').setErrors(null);\n\n            this.tankDetails.get('tankTypeAppNo').clearValidators();\n            this.tankDetails.get('tankTypeAppNo').setErrors(null);\n\n            this.tankDetails.get('tankCode').clearValidators();\n            this.tankDetails.get('tankCode').setErrors(null);\n\n            this.tankStatement.reset();\n            this.tankStatement.get('substancesPermitted').clearValidators();\n            this.tankStatement.get('substancesPermitted').setErrors(null);\n          }\n\n          if (tankDetailsEdit === STATUS.MANDATORY) {\n            this.showTankDetails = true;\n            this.tankDetails.get('tankManufacturer').setValidators([Validators.required]);\n            this.tankDetails.get('yearOfManufacture').setValidators([Validators.required]);\n            this.tankDetails.get('tankManufacturerSerialNo').setValidators([Validators.required]);\n            this.tankDetails.get('tankTypeAppNo').setValidators([Validators.required]);\n            this.tankDetails.get('tankCode').setValidators([Validators.required]);\n            this.tankStatement.get('substancesPermitted').setValidators([Validators.required]);\n          }\n\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "tankDetails": {
                    "name": "tankDetails",
                    "getSignature": {
                        "name": "tankDetails",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                },
                "tankStatement": {
                    "name": "tankStatement",
                    "getSignature": {
                        "name": "tankStatement",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                },
                "substancesPermitted": {
                    "name": "substancesPermitted",
                    "getSignature": {
                        "name": "substancesPermitted",
                        "type": "",
                        "returnType": "",
                        "line": 38
                    }
                },
                "substanceReferenceSelect": {
                    "name": "substanceReferenceSelect",
                    "getSignature": {
                        "name": "substanceReferenceSelect",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                },
                "productListUnNo": {
                    "name": "productListUnNo",
                    "getSignature": {
                        "name": "productListUnNo",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\" *ngIf=\"showTankDetails\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m\">Tank details</h2>\n\n          <ng-container [formGroup]=\"tankDetails\">\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"tankManufacturer\">\n                Make\n              </label>\n              <input\n                id=\"tankManufacturer\"\n                type=\"text\"\n                name=\"tankManufacturer\"\n                formControlName=\"tankManufacturer\"\n                class=\"govuk-input govuk-input--width-20\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label for=\"vehicleType\" class=\"govuk-label govuk-!-font-weight-bold\">\n                Year of manufacture\n              </label>\n              <input\n                id=\"yearOfManufacture\"\n                type=\"number\"\n                name=\"yearOfManufacture\"\n                formControlName=\"yearOfManufacture\"\n                pattern=\"[0-9]*\"\n                class=\"govuk-input govuk-input--width-4\"\n              />\n            </div>\n\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"tankManufacturerSerialNo\">\n                Manufacturer serial number\n              </label>\n              <input\n                id=\"tankManufacturerSerialNo\"\n                type=\"text\"\n                name=\"tankManufacturerSerialNo\"\n                formControlName=\"tankManufacturerSerialNo\"\n                class=\"govuk-input govuk-input--width-10\"\n              />\n            </div>\n\n            <!-- Tank Type Approval Number -->\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"tankTypeAppNo\">\n                Tank type approval number\n              </label>\n              <input\n                id=\"tankTypeAppNo\"\n                type=\"text\"\n                name=\"tankTypeAppNo\"\n                formControlName=\"tankTypeAppNo\"\n                class=\"govuk-input govuk-input--width-10\"\n              />\n            </div>\n\n            <!-- Tank Code -->\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"tankCode\">\n                Code\n              </label>\n              <input\n                id=\"tankCode\"\n                type=\"text\"\n                name=\"tankCode\"\n                formControlName=\"tankCode\"\n                class=\"govuk-input govuk-input--width-10\"\n              />\n            </div>\n          </ng-container>\n\n          <!-- Substance Permitted -->\n          <ng-container [formGroup]=\"tankStatement\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\">Substances permitted</label>\n            <div class=\"govuk-radios govuk-radios--conditional\">\n              <div class=\"govuk-radios__item\">\n                <input\n                  id=\"substancesPermitted_permitted\"\n                  type=\"radio\"\n                  value=\"{{ permittedSubstance }}\"\n                  name=\"substancesPermitted\"\n                  formControlName=\"substancesPermitted\"\n                  class=\"govuk-radios__input\"\n                />\n                <label\n                  class=\"govuk-label govuk-radios__label\"\n                  for=\"substancesPermitted_permitted\"\n                >\n                  Substances permitted under the tank code and any special provisions specified in\n                  9 may be carried\n                </label>\n              </div>\n              <div class=\"govuk-radios__item\">\n                <input\n                  id=\"substancesPermitted_classNumber\"\n                  type=\"radio\"\n                  value=\"{{ classNumberSubstance }}\"\n                  name=\"substancesPermitted\"\n                  formControlName=\"substancesPermitted\"\n                  class=\"govuk-radios__input\"\n                />\n                <label\n                  class=\"govuk-label govuk-radios__label\"\n                  for=\"substancesPermitted_classNumber\"\n                >\n                  Substances (class UN number and if necessary packing group and proper shipping\n                  name) may be carried\n                </label>\n              </div>\n              <div\n                id=\"conditional-substancesPermitted_classNumber\"\n                class=\"govuk-inset-text govuk-!-margin-top-0\"\n                [class.govuk-radios__conditional--hidden]=\"\n                  substancesPermitted.value !== classNumberSubstance\n                \"\n              >\n                <ng-container *ngTemplateOutlet=\"substancePermittedSelected\"></ng-container>\n              </div>\n            </div>\n\n            <!-- Select: -->\n            <ng-template #substancePermittedSelected>\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <label\n                  class=\"govuk-label govuk-!-font-weight-bold\"\n                  for=\"substancesPermitted_CLASSNUMBER\"\n                >\n                  Select:\n                </label>\n                <div class=\"govuk-radios\">\n                  <!-- Statement -->\n                  <div class=\"govuk-radios__item\">\n                    <input\n                      id=\"select_statement_Y\"\n                      type=\"radio\"\n                      value=\"{{ substanceStatementSelect }}\"\n                      formControlName=\"substanceReferenceSelect\"\n                      class=\"govuk-radios__input\"\n                    />\n                    <label class=\"govuk-label govuk-radios__label\">\n                      Statement (optional)\n                    </label>\n                  </div>\n                  <div\n                    id=\"conditional-selectStatement\"\n                    class=\"govuk-inset-text govuk-!-margin-top-0\"\n                    [class.govuk-radios__conditional--hidden]=\"\n                      substanceReferenceSelect.value !== substanceStatementSelect\n                    \"\n                  >\n                    <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                      <label\n                        class=\"govuk-label govuk-!-font-weight-bold\"\n                        for=\"statementRefNumber\"\n                      >\n                        Reference number (optional)\n                      </label>\n                      <input\n                        id=\"statementRefNumber\"\n                        type=\"text\"\n                        name=\"statementRefNumber\"\n                        formControlName=\"statement\"\n                        class=\"govuk-input govuk-input--width-10\"\n                      />\n                    </div>\n                  </div>\n\n                  <!-- Product List -->\n                  <div class=\"govuk-radios__item\">\n                    <input\n                      id=\"select_productlist_N\"\n                      type=\"radio\"\n                      value=\"{{ substanceProductSelect }}\"\n                      formControlName=\"substanceReferenceSelect\"\n                      class=\"govuk-radios__input\"\n                    />\n                    <label class=\"govuk-label govuk-radios__label\">\n                      Product list (optional)\n                    </label>\n                  </div>\n                  <div\n                    id=\"conditional-select_productlist_N\"\n                    class=\"govuk-inset-text govuk-!-margin-top-0\"\n                    [class.govuk-radios__conditional--hidden]=\"\n                      substanceReferenceSelect.value !== substanceProductSelect\n                    \"\n                  >\n                    <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                      <!-- Product - Reference number -->\n                      <div class=\"govuk-form-group\">\n                        <label\n                          class=\"govuk-label govuk-!-font-weight-bold\"\n                          for=\"productListRefNumber\"\n                        >\n                          Reference number (optional)\n                        </label>\n                        <input\n                          id=\"productListRefNumber\"\n                          type=\"text\"\n                          name=\"productListRefNumber\"\n                          formControlName=\"productListRefNo\"\n                          class=\"govuk-input govuk-input--width-10\"\n                        />\n                      </div>\n\n                      <!-- UN number -LIST -->\n                      <div class=\"govuk-form-group\" formArrayName=\"productListUnNo\">\n                        <ng-container\n                          *ngFor=\"let unNumberInput of productListUnNo.controls; let i = index\"\n                        >\n                          <div class=\"govuk-form-group\">\n                            <label\n                              *ngIf=\"i === 0\"\n                              for=\"productListUnNumber_{{ i }}\"\n                              class=\"govuk-label govuk-!-font-weight-bold\"\n                            >\n                              UN number (optional)\n                            </label>\n                            <input\n                              id=\"productListUnNumber_{{ i }}\"\n                              type=\"text\"\n                              name=\"productListUnNumber_{{ i }}\"\n                              [formControl]=\"unNumberInput\"\n                              class=\"govuk-input govuk-input--width-5\"\n                            />\n                            <span\n                              id=\"test-edit-removeUNNumber_{{ i }}\"\n                              class=\"govuk-!-font-weight-bold govuk-!-margin-left-2\"\n                              *ngIf=\"i > 0\"\n                            >\n                              <a\n                                href=\"javascript:void(0)\"\n                                class=\"govuk-link govuk-link--no-visited-state\"\n                                (click)=\"removeUNNumberControl(i)\"\n                              >\n                                <span>Remove</span>\n                              </a>\n                            </span>\n                          </div>\n                        </ng-container>\n                      </div>\n\n                      <div class=\"govuk-label govuk-!-margin-top-0 govuk-!-margin-bottom-5\">\n                        <a\n                          href=\"javascript:void(0)\"\n                          class=\"govuk-link govuk-link--no-visited-state\"\n                          (click)=\"addUNNumberControl()\"\n                        >\n                          Add a UN number\n                        </a>\n                      </div>\n\n                      <!-- Additional details -->\n                      <div class=\"govuk-form-group\">\n                        <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"productList\">\n                          Additional details (optional)\n                        </label>\n                        <textarea\n                          id=\"productList\"\n                          aria-describedby=\"productList\"\n                          name=\"productList\"\n                          formControlName=\"productList\"\n                          rows=\"8\"\n                          class=\"govuk-textarea\"\n                        >\n                        </textarea>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <!-- Special Provision -->\n          <ng-container [formGroup]=\"tankDetails\">\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"specialProvisions\">\n                Special provisions (optional)\n              </label>\n              <textarea\n                id=\"specialProvisions\"\n                aria-describedby=\"specialProvisions\"\n                name=\"specialProvisions\"\n                formControlName=\"specialProvisions\"\n                rows=\"8\"\n                class=\"govuk-textarea govuk-!-margin-bottom-0\"\n              >\n              </textarea>\n            </div>\n          </ng-container>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TankDocumentsComponent",
            "id": "component-TankDocumentsComponent-ed967c44e40a1f997688c6f03ae8f48d2eefc8e8c04f1b43a24183a6058328ecbf98e926f91688dde8cfc2abf4104109bbb48649d47de6c8f812c68f4327e49a",
            "file": "archive/src/app/technical-record/adr/tank-documents/tank-documents.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tank-documents",
            "styleUrls": [
                "./tank-documents.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tank-documents.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "documentNames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "documentValidationState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ValidationState>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "showTankDocuments",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addDocumentMetaDataGroup",
                    "args": [
                        {
                            "name": "addMetaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "addMetaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildDocumentMetaDataGroup",
                    "args": [
                        {
                            "name": "metaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "metaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadDocument",
                    "args": [
                        {
                            "name": "documentMetaData",
                            "type": "DocumentMetaData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "documentMetaData",
                            "type": "DocumentMetaData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUUID",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mapToDocumentMetaData",
                    "args": [
                        {
                            "name": "mapMetaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DocumentMetaData",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mapMetaName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "processDocumentList",
                    "args": [
                        {
                            "name": "listMetaNames",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "listMetaNames",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAllDocuments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeDocument",
                    "args": [
                        {
                            "name": "position",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "position",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadSelectedFile",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\nimport * as FileSaver from 'file-saver';\n\nimport { TechnicalRecordService } from '@app/technical-record-search/technical-record.service';\nimport { AdrComponent } from '../adr.component';\nimport { UUID_REGEX } from '../adr.constants';\nimport { ValidationMapper, ValidationState, STATUS } from '../adr-validation.mapper';\nimport { DocumentMetaData, DocumentInfo } from '@app/models/document-meta-data';\nimport { AdrDetails } from '@app/models/adr-details';\n\n@Component({\n  selector: 'vtm-tank-documents',\n  templateUrl: './tank-documents.component.html',\n  styleUrls: ['./tank-documents.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TankDocumentsComponent extends AdrComponent implements OnChanges, OnInit {\n  adrForm: FormGroup;\n  showTankDocuments = true;\n  documentNames: string[];\n  documentValidationState$: Observable<ValidationState>;\n\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  get documents() {\n    return this.adrForm.get('documents') as FormArray;\n  }\n\n  constructor(\n    protected fdg: FormGroupDirective,\n    protected fb: FormBuilder,\n    protected vm: ValidationMapper,\n    protected ref: ChangeDetectorRef,\n    private techRecordService: TechnicalRecordService\n  ) {\n    super(fdg, fb, vm, ref);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.edit) {\n      const { vehicleDetails, documents } = this.adrDetails;\n      this.documentValidationState$ = this.validationMapper.getCurrentState();\n\n      const vehicleType = vehicleDetails && vehicleDetails.type ? vehicleDetails.type : '';\n      const documentNames = documents && documents.length ? documents : ([] as string[]);\n\n      this.adrForm = super.setUp();\n\n      this.adrForm.addControl('documents', this.processDocumentList(documentNames));\n\n      if (changes.edit.currentValue && vehicleType) {\n        this.validationMapper.vehicleTypeSelected(vehicleType);\n      } else {\n        this.showTankDocuments = true;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.handleFormChanges();\n  }\n\n  processDocumentList(listMetaNames: string[]): FormArray {\n    return this.fb.array(\n      listMetaNames\n        .map<FormGroup>(this.buildDocumentMetaDataGroup.bind(this))\n        .filter((group) => Object.keys(group.controls).length > 0)\n    );\n  }\n\n  buildDocumentMetaDataGroup(metaName: string): FormGroup {\n    return this.fb.group(this.mapToDocumentMetaData(metaName));\n  }\n\n  mapToDocumentMetaData(mapMetaName: string): DocumentMetaData {\n    const nameStr = mapMetaName.trim();\n\n    const validUUID = nameStr.match(UUID_REGEX);\n    if (!validUUID) {\n      return {} as DocumentMetaData;\n    }\n\n    return {\n      uuid: validUUID[0],\n      fileName: nameStr.split(UUID_REGEX)[1].replace('_', ''),\n      metaName: nameStr\n    } as DocumentMetaData;\n  }\n\n  async uploadSelectedFile($event) {\n    const selectedFile: File =\n      $event.target.files && $event.target.files.length ? $event.target.files[0] : undefined;\n\n    const metaName = `${this.getUUID()}_${selectedFile.name}`;\n    const docuInfo: DocumentInfo = {\n      metaName: metaName,\n      file: selectedFile\n    } as DocumentInfo;\n\n    const uploaded = await this.techRecordService.uploadDocument(docuInfo);\n    if (uploaded) {\n      this.ref.markForCheck();\n      this.addDocumentMetaDataGroup(metaName);\n    }\n  }\n\n  addDocumentMetaDataGroup(addMetaName: string): void {\n    this.documents.push(this.buildDocumentMetaDataGroup(addMetaName));\n  }\n\n  async downloadDocument(documentMetaData: DocumentMetaData) {\n    const documentBlob = await this.techRecordService.downloadDocument(documentMetaData);\n\n    if (documentBlob) {\n      FileSaver.saveAs(documentBlob, documentMetaData.fileName);\n    }\n  }\n\n  removeDocument(position: number): void {\n    this.documents.removeAt(position);\n  }\n\n  getUUID() {\n    return uuidV4();\n  }\n\n  handleFormChanges() {\n    this.documentValidationState$\n      .pipe(\n        tap(({ tankDocuments }) => {\n          if (tankDocuments === STATUS.HIDDEN) {\n            this.showTankDocuments = false;\n            this.removeAllDocuments();\n          } else {\n            this.showTankDocuments = true;\n          }\n\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  removeAllDocuments(): void {\n    let index = this.documents.controls.length - 1;\n    for (; index >= 0; index--) {\n      this.removeDocument(index);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".file-input {\n  input[type='file'] {\n    position: fixed;\n    right: 100%;\n    bottom: 100%;\n  }\n\n  label:focus-within {\n    outline: 3px solid #fd0;\n  }\n\n  label:focus {\n    border-color: #fd0;\n    outline: 3px solid transparent;\n    -webkit-box-shadow: inset 0 0 0 1px #fd0;\n    box-shadow: inset 0 0 0 1px #fd0;\n  }\n}\n",
                    "styleUrl": "./tank-documents.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fdg",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vm",
                        "type": "ValidationMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "fdg",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vm",
                        "type": "ValidationMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecordService",
                        "type": "TechnicalRecordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AdrComponent",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "accessors": {
                "documents": {
                    "name": "documents",
                    "getSignature": {
                        "name": "documents",
                        "type": "",
                        "returnType": "",
                        "line": 38
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\" *ngIf=\"showTankDocuments\">\n  <div class=\"govuk-grid-column-full\">\n    <form [formGroup]=\"adrForm\">\n      <h2 class=\"govuk-heading-m\">Tank documents</h2>\n\n      <table class=\"govuk-table\">\n        <tbody class=\"govuk-table__body\">\n          <ng-container *ngIf=\"documents.controls.length; else noDoc\">\n            <ng-container\n              *ngFor=\"let metaData of documents.controls; let i = index\"\n              [formGroup]=\"metaData\"\n            >\n              <tr class=\"govuk-table__row\">\n                <td\n                  id=\"test-document-name-{{ i }}\"\n                  class=\"govuk-table__cell govuk-!-width-three-quarters\"\n                >\n                  {{ metaData.get('fileName').value }}\n                </td>\n                <td id=\"test-document-view-{{ i }}\" class=\"govuk-table__cell\">\n                  <a\n                    href=\"javascript:void(0)\"\n                    class=\"govuk-link\"\n                    (click)=\"downloadDocument(metaData.value)\"\n                  >\n                    View\n                  </a>\n                </td>\n                <td\n                  id=\"test-document-remove-{{ i }}\"\n                  class=\"govuk-table__cell govuk-!-width-one-quarter\"\n                  *ngIf=\"edit\"\n                >\n                  <a href=\"javascript:void(0)\" class=\"govuk-link\" (click)=\"removeDocument(i)\">\n                    Remove\n                  </a>\n                </td>\n              </tr>\n            </ng-container>\n          </ng-container>\n\n          <div class=\"govuk-!-margin-top-3 file-input\" *ngIf=\"edit\">\n            <label\n              class=\"govuk-button govuk-button--secondary govuk-!-margin-left-0\"\n              type=\"button\"\n            >\n              <input id=\"file-upload\" type=\"file\" (change)=\"uploadSelectedFile($event)\" />\n\n              Upload document\n            </label>\n          </div>\n\n          <ng-template #noDoc>\n            <tr class=\"govuk-table__row\">\n              <td\n                id=\"test-document-name-0\"\n                class=\"govuk-table__cell govuk-!-width-three-quarters\"\n              >\n                -\n              </td>\n              <!-- <td class=\"govuk-table__cell\">-</td> -->\n              <!-- <td class=\"govuk-table__cell\">-</td> -->\n            </tr>\n          </ng-template>\n        </tbody>\n      </table>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "TankInpectionsComponent",
            "id": "component-TankInpectionsComponent-8f01e26b0a7da1f439bb1e91887629584db2f986376a0fed76cb6a5b636b94ab0f3e06b6e209ace4df8f892651ff0c6814ecd99d08ab2fad23465fe81f0a6bd5",
            "file": "archive/src/app/technical-record/adr/tank-inpections/tank-inpections.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tank-inpections",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tank-inpections.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "AdrDetails",
                    "decorators": []
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showTankHistory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tankDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TankDetails",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { AdrDetails } from '@app/models/adr-details';\nimport { TankDetails } from '@app/models/Tank';\n\n@Component({\n  selector: 'vtm-tank-inpections',\n  templateUrl: './tank-inpections.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TankInpectionsComponent implements OnChanges {\n  showTankHistory: boolean;\n  tankDetails: TankDetails;\n  vehicleType: string;\n\n  @Input() edit: boolean;\n  @Input() adrDetails: AdrDetails;\n\n  constructor() {}\n\n  ngOnChanges(): void {\n    const { vehicleDetails } = this.adrDetails;\n    this.showTankHistory =\n      (vehicleDetails && vehicleDetails.type.includes('tank')) ||\n      (vehicleDetails && vehicleDetails.type.includes('battery'));\n\n    this.vehicleType = vehicleDetails && vehicleDetails.type ? vehicleDetails.type : '';\n\n    const { tank } = this.adrDetails;\n    this.tankDetails = tank && tank.tankDetails ? tank.tankDetails : undefined;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!edit\">\n  <div class=\"govuk-grid-row\">\n    <div class=\"govuk-grid-column-full\">\n      <h2 class=\"govuk-heading-m\">Tank inspections</h2>\n\n      <table class=\"govuk-table\">\n        <thead class=\"govuk-table__head\">\n          <tr class=\"govuk-table__row\">\n            <th scope=\"col\" class=\"govuk-table__header\">Inspection type</th>\n            <th scope=\"col\" class=\"govuk-table__header\">Certificate number</th>\n            <th scope=\"col\" class=\"govuk-table__header\">Expiry date</th>\n          </tr>\n        </thead>\n\n        <tbody class=\"govuk-table__body\" *ngIf=\"showTankHistory; else noTankHistory\">\n          <tr class=\"govuk-table__row\">\n            <td id=\"test-tc2Type\" class=\"govuk-table__cell\">\n              {{ tankDetails?.tc2Details?.tc2Type | DefaultNullOrEmpty | titlecase }}\n            </td>\n\n            <td id=\"test-tc2IntermediateApprovalNo\" class=\"govuk-table__cell\">\n              {{ tankDetails?.tc2Details?.tc2IntermediateApprovalNo | DefaultNullOrEmpty }}\n            </td>\n            <td id=\"test-tc2IntermediateExpiryDate\" class=\"govuk-table__cell\">\n              <span *ngIf=\"tankDetails?.tc2Details?.tc2IntermediateExpiryDate; else hyphen\">\n                {{ tankDetails?.tc2Details?.tc2IntermediateExpiryDate | date: 'dd/MM/yyyy' }}\n              </span>\n            </td>\n          </tr>\n\n          <tr\n            class=\"govuk-table__row\"\n            *ngFor=\"let tc3Details of tankDetails.tc3Details; let i = index\"\n          >\n            <td id=\"test-tc3Type-{{ i }}\" class=\"govuk-table__cell\">\n              {{ tc3Details.tc3Type | DefaultNullOrEmpty | titlecase }}\n            </td>\n            <td id=\"test-tc3PeriodicNumber-{{ i }}\" class=\"govuk-table__cell\">\n              {{ tc3Details.tc3PeriodicNumber | DefaultNullOrEmpty }}\n            </td>\n            <td id=\"test-tc3PeriodicExpiryDate-{{ i }}\" class=\"govuk-table__cell\">\n              <span *ngIf=\"tc3Details.tc3PeriodicExpiryDate; else hyphen\">\n                {{ tc3Details.tc3PeriodicExpiryDate | date: 'dd/MM/yyyy' }}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n\n        <ng-template #noTankHistory>\n          <tbody class=\"govuk-table__body\">\n            <tr class=\"govuk-table__row\">\n              <td class=\"govuk-table__cell\">-</td>\n              <td class=\"govuk-table__cell\">-</td>\n              <td class=\"govuk-table__cell\">-</td>\n            </tr>\n          </tbody>\n        </ng-template>\n      </table>\n    </div>\n  </div>\n</ng-container>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n\n<!-- Edit TANK Inspections -->\n<ng-container *ngIf=\"edit\">\n  <vtm-tank-inspections-edit\n    [tankDetailsData]=\"tankDetails\"\n    [vehicleType]=\"vehicleType\"\n  ></vtm-tank-inspections-edit>\n</ng-container>\n"
        },
        {
            "name": "TankInspectionsEditComponent",
            "id": "component-TankInspectionsEditComponent-7c1a155eccf9259742c4bd485898577a9cfd351393305ec7b5c0ec4d50e84b3716220d63b625fc9d18578c6b45b2cb2777b056f6f41b86bec3d90baf25c2d08d",
            "file": "archive/src/app/technical-record/adr/tank-inpections/edit/tank-inspections-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tank-inspections-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tank-inspections-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tankDetailsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "TankDetails",
                    "decorators": []
                },
                {
                    "name": "vehicleType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "TechRecord",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "VIEW_STATE",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleMetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "MetaData",
                    "decorators": [],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adrForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "inspectionTypeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "showTankInspections",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tankInspectionValidationState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ValidationState>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "adrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdrDetails",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "showAdrView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "addSubsequentInspectionGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addToGroup",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildSequentArrayGroup",
                    "args": [
                        {
                            "name": "subsequentData",
                            "type": "Tc3Details[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subsequentData",
                            "type": "Tc3Details[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildSubsequentGroup",
                    "args": [
                        {
                            "name": "tc3Data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{} as Tc3Details"
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tc3Data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{} as Tc3Details",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTc3Type",
                    "args": [
                        {
                            "name": "tc3Type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tc3Type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "removeAllSubsequentInspectionGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeSubsequentInspectionGroup",
                    "args": [
                        {
                            "name": "position",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "position",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "setUp",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "switchAdrDisplay",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                },
                {
                    "name": "vehicleTypeChangedHandler",
                    "args": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AdrComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { AdrComponent } from '@app/technical-record/adr/adr.component';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { SelectOption } from '@app/models/select-option';\nimport { TankDetails, Tc2Details, Tc3Details } from '@app/models/Tank';\nimport { INSPECTION_TYPES } from '@app/app.enums';\nimport { ValidationState, STATUS } from '../../adr-validation.mapper';\n\n@Component({\n  selector: 'vtm-tank-inspections-edit',\n  templateUrl: './tank-inspections-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TankInspectionsEditComponent extends AdrComponent implements OnInit {\n  submitted: boolean;\n  inspectionTypeOptions: SelectOption[];\n  adrForm: FormGroup;\n  showTankInspections = true;\n  tankInspectionValidationState$: Observable<ValidationState>;\n\n  @Input() tankDetailsData: TankDetails;\n  @Input() vehicleType: string;\n\n  get tankDetails() {\n    return this.adrForm.get('tank.tankDetails') as FormGroup;\n  }\n\n  get tc2Details() {\n    return this.tankDetails.get('tc2Details') as FormGroup;\n  }\n\n  get tc3Details() {\n    return this.tankDetails.get('tc3Details') as FormArray;\n  }\n\n  ngOnInit() {\n    this.adrForm = super.setUp();\n    this.tankInspectionValidationState$ = this.validationMapper.getCurrentState();\n\n    const details: TankDetails = !!this.tankDetailsData\n      ? this.tankDetailsData\n      : ({} as TankDetails);\n    const tc2Details: Tc2Details = !!details.tc2Details ? details.tc2Details : ({} as Tc2Details);\n    const tc3Details: Tc3Details[] = !!details.tc3Details\n      ? details.tc3Details\n      : ([] as Tc3Details[]);\n\n    this.inspectionTypeOptions = new DisplayOptionsPipe().transform(\n      Object.keys(INSPECTION_TYPES)\n    );\n\n    let group: FormGroup = this.adrForm.get('tank.tankDetails') as FormGroup;\n    if (group !== null) {\n      this.addToGroup({ group, tc2Details, tc3Details });\n    } else {\n      this.adrForm.addControl('tank', this.fb.group({ tankDetails: this.fb.group({}) }));\n      group = this.adrForm.get('tank.tankDetails') as FormGroup;\n      this.addToGroup({ group, tc2Details, tc3Details });\n    }\n\n    this.handleFormChanges();\n\n    if (this.vehicleType) {\n      this.validationMapper.vehicleTypeSelected(this.vehicleType);\n    }\n  }\n\n  addToGroup(params: { group: FormGroup; tc2Details: Tc2Details; tc3Details: Tc3Details[] }) {\n    const { group, tc2Details, tc3Details } = params;\n\n    group.addControl(\n      'tc2Details',\n      this.fb.group({\n        tc2Type: this.fb.control('initial'),\n        tc2IntermediateApprovalNo: this.fb.control(tc2Details.tc2IntermediateApprovalNo),\n        tc2IntermediateExpiryDate: this.fb.control(tc2Details.tc2IntermediateExpiryDate)\n      })\n    );\n\n    group.addControl('tc3Details', this.buildSequentArrayGroup(tc3Details));\n  }\n\n  buildSequentArrayGroup(subsequentData: Tc3Details[]): FormArray {\n    return this.fb.array(subsequentData.map(this.buildSubsequentGroup.bind(this)));\n  }\n\n  getTc3Type(tc3Type: string): string {\n    const defaultType = this.inspectionTypeOptions.find(\n      (type) => type.name.toLowerCase() === tc3Type\n    );\n\n    return !!defaultType ? defaultType.name.toLowerCase() : '';\n  }\n\n  buildSubsequentGroup(tc3Data = {} as Tc3Details): FormGroup {\n    return this.fb.group({\n      tc3Type: this.getTc3Type(tc3Data.tc3Type),\n      tc3PeriodicNumber: tc3Data.tc3PeriodicNumber,\n      tc3PeriodicExpiryDate: tc3Data.tc3PeriodicExpiryDate\n    });\n  }\n\n  addSubsequentInspectionGroup(): void {\n    this.tc3Details.push(this.buildSubsequentGroup());\n    this.tc3Details.markAsDirty();\n  }\n\n  removeSubsequentInspectionGroup(position: number): void {\n    this.tc3Details.removeAt(position);\n  }\n\n  removeAllSubsequentInspectionGroup(): void {\n    let index = this.tc3Details.controls.length - 1;\n    for (; index >= 0; index--) {\n      this.removeSubsequentInspectionGroup(index);\n    }\n  }\n\n  handleFormChanges() {\n    this.tankInspectionValidationState$\n      .pipe(\n        tap(({ tankInspectionsEdit }) => {\n          if (tankInspectionsEdit === STATUS.HIDDEN) {\n            this.showTankInspections = false;\n            this.tc2Details.reset();\n            this.removeAllSubsequentInspectionGroup();\n          } else {\n            this.showTankInspections = true;\n            this.tc2Details.get('tc2Type').patchValue('initial');\n          }\n\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "AdrComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "tankDetails": {
                    "name": "tankDetails",
                    "getSignature": {
                        "name": "tankDetails",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                },
                "tc2Details": {
                    "name": "tc2Details",
                    "getSignature": {
                        "name": "tc2Details",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                },
                "tc3Details": {
                    "name": "tc3Details",
                    "getSignature": {
                        "name": "tc3Details",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\" *ngIf=\"showTankInspections\">\n  <div class=\"govuk-grid-column-full\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"adrForm\">\n          <h2 class=\"govuk-heading-m govuk-!-margin-bottom-2\">Tank inspections</h2>\n\n          <div [formGroup]=\"tankDetails\">\n            <h4 class=\"govuk-heading-s\">Initial</h4>\n            <div [formGroup]=\"tc2Details\" class=\"govuk-inset-text govuk-!-margin-top-0\">\n              <ng-container\n                *ngTemplateOutlet=\"\n                  tcDetails;\n                  context: {\n                    $implicit: {\n                      certificateNumber: 'tc2IntermediateApprovalNo',\n                      group: tc2Details,\n                      expiryDate: 'tc2IntermediateExpiryDate'\n                    }\n                  }\n                \"\n              >\n              </ng-container>\n            </div>\n\n            <div formArrayName=\"tc3Details\">\n              <ng-container\n                *ngFor=\"let subsequentTc3 of tc3Details.controls; let i = index\"\n                [formGroup]=\"subsequentTc3\"\n              >\n                <div class=\"govuk-grid-row\">\n                  <div class=\"govuk-grid-column-three-quarters\">\n                    <h4 class=\"govuk-heading-s\">Subsequent</h4>\n                  </div>\n                  <div class=\"govuk-grid-column-one-quarter\">\n                    <span class=\"govuk-label govuk-!-padding-left-9 govuk-!-margin-left-9\">\n                      <a\n                        href=\"javascript:void(0)\"\n                        id=\"test-removeTc3-{{ i }}\"\n                        class=\"govuk-link govuk-link--no-visited-state \"\n                        (click)=\"removeSubsequentInspectionGroup(i)\"\n                      >\n                        <span>Remove</span>\n                      </a>\n                    </span>\n                  </div>\n                </div>\n                <div [formGroup]=\"subsequentTc3\" class=\"govuk-inset-text govuk-!-margin-top-0\">\n                  <!-- Inspection type -->\n                  <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                    <label for=\"tc3Type-{{ i }}\" class=\"govuk-label govuk-!-font-weight-bold\">\n                      Inspection type (optional)\n                    </label>\n                    <select\n                      id=\"tc3Type-{{ i }}\"\n                      [formControl]=\"subsequentTc3.get('tc3Type')\"\n                      class=\"govuk-select govuk-!-width-one-half\"\n                    >\n                      <!-- <option hidden [value]=\"subsequentTc3.get('tc3Type').value\">\n                        {{ subsequentTc3.get('tc3Type').value }}\n                      </option> -->\n                      <option\n                        *ngFor=\"let inspectionType of inspectionTypeOptions\"\n                        [ngValue]=\"inspectionType.name.toLowerCase()\"\n                      >\n                        {{ inspectionType.name }}\n                      </option>\n                    </select>\n                  </div>\n\n                  <ng-container\n                    *ngTemplateOutlet=\"\n                      tcDetails;\n                      context: {\n                        $implicit: {\n                          index: '-' + i + 1,\n                          certificateNumber: 'tc3PeriodicNumber',\n                          group: subsequentTc3,\n                          expiryDate: 'tc3PeriodicExpiryDate'\n                        }\n                      }\n                    \"\n                  >\n                  </ng-container>\n                </div>\n              </ng-container>\n            </div>\n\n            <div class=\"govuk-label govuk-!-margin-top-0 govuk-!-margin-bottom-5\">\n              <a\n                href=\"javascript:void(0)\"\n                class=\"govuk-link govuk-link--no-visited-state\"\n                id=\"test-addTc3Details\"\n                (click)=\"addSubsequentInspectionGroup()\"\n              >\n                Add a subsequent inspection\n              </a>\n            </div>\n          </div>\n\n          <ng-template let-tcDetail #tcDetails>\n            <ng-container [formGroup]=\"tcDetail.group\">\n              <!-- Certificate number -->\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <label\n                  class=\"govuk-label govuk-!-font-weight-bold\"\n                  for=\"{{ tcDetail.certificateNumber }}{{ tcDetail.index }}\"\n                >\n                  Certificate number (optional)\n                </label>\n                <input\n                  id=\"{{ tcDetail.certificateNumber }}{{ tcDetail.index }}\"\n                  type=\"text\"\n                  name=\"{{ tcDetail.certificateNumber }}{{ tcDetail.index }}\"\n                  formControlName=\"{{ tcDetail.certificateNumber }}\"\n                  class=\"govuk-input govuk-input--width-10\"\n                />\n              </div>\n\n              <!-- Expiry date -->\n              <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                <fieldset class=\"govuk-fieldset\" role=\"group\" aria-describedby=\"approval-date\">\n                  <label\n                    class=\"govuk-label govuk-!-font-weight-bold\"\n                    for=\"{{ tcDetail.expiryDate }}{{ tcDetail.index }}\"\n                  >\n                    Expiry date (optional)\n                  </label>\n                  <vtm-date-input\n                    id=\"{{ tcDetail.expiryDate }}{{ tcDetail.index }}\"\n                    ariaDescribedBy=\"tcDetail.expiryDate\"\n                    formControlName=\"{{ tcDetail.expiryDate }}\"\n                  ></vtm-date-input>\n                </fieldset>\n              </div>\n            </ng-container>\n          </ng-template>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TechnicalRecordComponent",
            "id": "component-TechnicalRecordComponent-c1acdbeefec406eff1ea8b050c992115817744c48fd688be3903ff4cad3b47fae1480fa4096188127746256f03b85abb8b88d2465b0cba1324d2881f19677111",
            "file": "archive/src/app/technical-record/technical-record.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-technical-record",
            "styleUrls": [
                "../app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./technical-record.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeVehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "VehicleTechRecordEdit",
                    "decorators": []
                },
                {
                    "name": "currentState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "MetaData",
                    "decorators": []
                },
                {
                    "name": "testResultJson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "TestResultModel[]",
                    "decorators": []
                },
                {
                    "name": "vehicleTechRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "VehicleTechRecordModel",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeViewState",
                    "defaultValue": "new EventEmitter<VIEW_STATE>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                },
                {
                    "name": "sendPlates",
                    "defaultValue": "new EventEmitter<VehicleTechRecordEdit>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                },
                {
                    "name": "submitVehicleRecord",
                    "defaultValue": "new EventEmitter<VehicleTechRecordEditState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "adrDisplayParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "allOpened",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "isArchivedRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "isEditable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "isHgvOrTrlVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "isPsvOrTrlVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "isStandardVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "panels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "showAdrDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "techRecHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecordHelperService",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vehicleRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "viewCreateState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "viewEditState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "viewOnlyState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [
                {
                    "name": "cancelTechRecord",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editTechRecord",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getClonedVehicleRecord",
                    "args": [],
                    "optional": false,
                    "returnType": "VehicleTechRecordEdit",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMergedTechRecord",
                    "args": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TechRecord",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveChanges",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSendMinistryPlates",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetVehicleRecordFg",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scrollDownToSection",
                    "args": [
                        {
                            "name": "eData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPanelState",
                    "args": [
                        {
                            "name": "toggleState",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "toggleState",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "techRecordViewHandler",
                    "args": [
                        {
                            "name": "record",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "record",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "togglePanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { mergeWith, isNil } from 'lodash';\r\n\r\nimport { AdrReasonModalComponent } from '@app/shared/adr-reason-modal/adr-reason-modal.component';\r\nimport { DialogMinistryPlatesComponent } from '@app/shared/dialog-ministry-plates/dialog-ministry-plates.component';\r\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\r\nimport { TechnicalRecordValuesMapper } from './technical-record-value.mapper';\r\nimport { TechRecord } from './../models/tech-record.model';\r\nimport { MetaData } from '@app/models/meta-data';\r\nimport {\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordEditState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { TestResultModel } from '@app/models/test-result.model';\r\nimport { VIEW_STATE, PANEL_TITLE } from '@app/app.enums';\r\nimport { scrollToSection } from '@app/utils';\r\n\r\n@Component({\r\n  selector: 'vtm-technical-record',\r\n  templateUrl: './technical-record.component.html',\r\n  styleUrls: ['../app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TechnicalRecordComponent implements OnChanges, OnInit {\r\n  @Input() activeVehicleTechRecord: VehicleTechRecordEdit;\r\n  @Input() vehicleTechRecord: VehicleTechRecordModel;\r\n  @Input() metaData: MetaData;\r\n  @Input() currentState: VIEW_STATE;\r\n  @Input() testResultJson: TestResultModel[];\r\n  @Output() submitVehicleRecord = new EventEmitter<VehicleTechRecordEditState>();\r\n  @Output() changeViewState = new EventEmitter<VIEW_STATE>();\r\n  @Output() sendPlates = new EventEmitter<VehicleTechRecordEdit>();\r\n\r\n  showAdrDetails: boolean;\r\n  adrDisplayParams: { [key: string]: boolean };\r\n  activeRecord: TechRecord;\r\n  vehicleRecordFg: FormGroup;\r\n\r\n  allOpened: boolean;\r\n  panels: { panel: string; isOpened: boolean }[];\r\n  viewOnlyState: boolean;\r\n  viewEditState: boolean;\r\n  viewCreateState: boolean;\r\n  isEditable: boolean;\r\n\r\n  isHgvOrTrlVehicle: boolean;\r\n  isStandardVehicle: boolean;\r\n  isPsvOrTrlVehicle: boolean;\r\n  isArchivedRecord: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialog: MatDialog,\r\n    private allowedValues: TechnicalRecordValuesMapper,\r\n    public techRecHelper: TechRecordHelperService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { activeVehicleTechRecord, currentState } = changes;\r\n\r\n    if (activeVehicleTechRecord) {\r\n      this.activeRecord = this.activeVehicleTechRecord.techRecord[0];\r\n      this.adrDisplayParams = { showAdrDetails: !!this.activeRecord.adrDetails };\r\n    }\r\n\r\n    if (currentState) {\r\n      this.viewOnlyState = this.currentState === VIEW_STATE.VIEW_ONLY;\r\n      this.viewEditState = this.currentState === VIEW_STATE.EDIT;\r\n      this.viewCreateState = this.currentState === VIEW_STATE.CREATE;\r\n      this.isEditable = this.viewEditState || this.viewCreateState;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.vehicleRecordFg = this.fb.group({\r\n      techRecord: this.fb.group({})\r\n    });\r\n\r\n    this.setPanelState(this.viewCreateState);\r\n\r\n    this.isStandardVehicle = this.techRecHelper.isStandardVehicle(this.activeRecord.vehicleType);\r\n    this.isHgvOrTrlVehicle = this.techRecHelper.isHgvOrTrlVehicle(this.activeRecord.vehicleType);\r\n    this.isPsvOrTrlVehicle = this.techRecHelper.isPsvOrTrlVehicle(this.activeRecord.vehicleType);\r\n    this.isArchivedRecord = this.techRecHelper.isArchivedRecord(this.activeRecord.statusCode);\r\n  }\r\n\r\n  setPanelState(toggleState: boolean) {\r\n    this.allOpened = toggleState;\r\n    this.panels = [\r\n      { panel: PANEL_TITLE.VEHICLE_SUMMARY, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.BODY, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.WEIGHTS, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.TYRES, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.BRAKES, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.DDA, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.DIMENSIONS, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.ADR, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.APPLICANT, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.DOCUMENTS, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.PURCHASER, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.MANUFACTURER, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.AUTH_INTO_SERVICE, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.LETTERS_OF_AUTH, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.NOTES, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.TEST_HISTORY, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.TECHNICAL_RECORD_HISTORY, isOpened: toggleState },\r\n      { panel: PANEL_TITLE.PLATES, isOpened: toggleState }\r\n    ];\r\n  }\r\n\r\n  togglePanel() {\r\n    for (const panel of this.panels) {\r\n      panel.isOpened = !this.allOpened;\r\n    }\r\n    this.allOpened = !this.allOpened;\r\n  }\r\n\r\n  editTechRecord() {\r\n    this.changeViewState.emit(VIEW_STATE.EDIT);\r\n  }\r\n\r\n  cancelTechRecord() {\r\n    this.changeViewState.emit(VIEW_STATE.VIEW_ONLY);\r\n\r\n    this.resetVehicleRecordFg();\r\n\r\n    this.activeRecord = JSON.parse(JSON.stringify(this.activeVehicleTechRecord.techRecord[0]));\r\n    this.adrDisplayParams = {\r\n      ...{ showAdrDetails: !!this.activeVehicleTechRecord.techRecord[0].adrDetails }\r\n    };\r\n  }\r\n\r\n  resetVehicleRecordFg() {\r\n    const techGroup = this.vehicleRecordFg.get('techRecord') as FormGroup;\r\n    const controlNames = Object.keys(techGroup.controls);\r\n\r\n    for (let index = 0; index < controlNames.length; index++) {\r\n      techGroup.removeControl(controlNames[index]);\r\n    }\r\n    this.vehicleRecordFg.reset();\r\n    this.vehicleRecordFg.updateValueAndValidity();\r\n  }\r\n\r\n  onSaveChanges({ valid, value }: { valid: boolean; value: any }) {\r\n    // if (valid) { TODO: Re-enable during ADR Validation ticket\r\n\r\n    const editedVehicleRecord: VehicleTechRecordEdit = this.allowedValues.mapControlValuesToDataValues(\r\n      JSON.parse(JSON.stringify(value))\r\n    );\r\n\r\n    const clonedVehicleRecord: VehicleTechRecordEdit = JSON.parse(\r\n      JSON.stringify(this.activeVehicleTechRecord)\r\n    );\r\n\r\n    const mergeTechRecord: TechRecord = this.getMergedTechRecord({\r\n      cloned: clonedVehicleRecord.techRecord[0],\r\n      edited: editedVehicleRecord.techRecord[0]\r\n    });\r\n\r\n    clonedVehicleRecord.techRecord = [mergeTechRecord];\r\n\r\n    const dialogRef = this.dialog.open(AdrReasonModalComponent, {\r\n      width: '600px',\r\n      data: {\r\n        context: 'Enter reason for changing technical record'\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result && result.isSave) {\r\n        clonedVehicleRecord.techRecord[0].reasonForCreation = result.data;\r\n        this.submitVehicleRecord.emit({\r\n          vehicleRecordEdit: clonedVehicleRecord,\r\n          viewState: this.currentState\r\n        });\r\n      }\r\n    });\r\n    // }\r\n  }\r\n\r\n  getClonedVehicleRecord(): VehicleTechRecordEdit {\r\n    return JSON.parse(JSON.stringify(this.activeVehicleTechRecord));\r\n  }\r\n\r\n  getMergedTechRecord(params): TechRecord {\r\n    const { cloned, edited } = params;\r\n    return mergeWith({}, cloned, edited, (obj, src) => (!isNil(src) ? src : obj));\r\n  }\r\n\r\n  scrollDownToSection(eData) {\r\n    return scrollToSection(this.panels, eData.title);\r\n  }\r\n\r\n  techRecordViewHandler(record: TechRecord): void {\r\n    this.activeRecord = { ...record };\r\n    this.isArchivedRecord = this.techRecHelper.isArchivedRecord(this.activeRecord.statusCode);\r\n  }\r\n\r\n  onSendMinistryPlates() {\r\n    const dialogRef = this.dialog.open(DialogMinistryPlatesComponent, {\r\n      width: '45vw',\r\n      data: { applicantDetails: this.activeRecord.applicantDetails }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((plate) => {\r\n      const vehicleRecord = this.getClonedVehicleRecord();\r\n      if (plate) {\r\n        if (!!vehicleRecord.techRecord[0].plates) {\r\n          vehicleRecord.techRecord[0].plates.push(plate);\r\n        } else {\r\n          vehicleRecord.techRecord[0].plates = [plate];\r\n        }\r\n        this.sendPlates.emit(vehicleRecord);\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.form-state {\n  margin: 20px 20px 20px 10px;\n  overflow: auto;\n  min-width: 500px;\n  max-width: 1248px;\n}\n\n.isDisabled {\n  color: currentColor;\n  cursor: not-allowed;\n  opacity: 0.5;\n  text-decoration: none;\n}\n\n$font-stack: GDSTransportWebsite;\n.expander-icon {\n  color: #0b0c0c;\n  font-size: 15px;\n  font-weight: 300;\n  letter-spacing: -0.21px;\n  line-height: 55px;\n  width: 20.8px;\n  text-align: center;\n}\n\n.ng-animating mat-card mat-expansion-panel-header {\n  height: 80px;\n}\n\n.ng-animating mat-card div.mat-expansion-panel-content {\n  height: 0px;\n  visibility: hidden;\n}\n\n.no-animate {\n  -webkit-transition: none !important;\n  transition: none !important;\n}\n\n.mt-1 {\n  margin-top: 1rem;\n}\n\n.mb-1 {\n  margin-bottom: 1rem;\n}\n\n.no-padding {\n  padding: 0 !important;\n}\n\n.no-margin {\n  margin: 0 !important;\n}\n\ndd {\n  & ul {\n    padding-left: 0%;\n  }\n}\n\n::ng-deep .mat-expansion-panel-body {\n  padding: 0 !important;\n}\n\n::ng-deep .auto-pad .mat-expansion-panel-spacing {\n  margin: 0 !important;\n}\n\n.custom-header .mat-expansion-panel-header-title,\n.custom-header .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.custom-header .mat-expansion-panel-header {\n  padding: 0;\n}\n\n.custom-header,\n.open-close-all {\n  border-bottom-color: $govuk-border-colour;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n\n.custom-header .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: end;\n  flex-direction: row-reverse;\n  margin-right: 0%;\n}\n\n.disable_ripple:hover {\n  background: #fff !important;\n  text-decoration-line: underline;\n  text-decoration-style: solid;\n  text-decoration-color: blue;\n}\n\n.rotate_90 {\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -o-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n::ng-deep .custom-header > .mat-expansion-indicator:after {\n  color: #777;\n  font-weight: bold;\n  float: right;\n  margin-left: 5px;\n}\n\n.expansion-icon {\n  color: $govuk-text-colour;\n  font-size: 18px;\n  font-weight: 300;\n  letter-spacing: -0.21px;\n  line-height: 55px;\n  width: 20.8px;\n  text-align: center;\n}\n\n.item-technical-record {\n  color: $govuk-brand-colour;\n  font-size: 36px;\n  font-weight: 700;\n  letter-spacing: -0.11px;\n  line-height: 43px;\n  width: 284.96px;\n  text-align: left;\n  margin-top: 2%;\n  white-space: nowrap;\n}\n\n.accordion {\n  background-color: #eee;\n  color: #1a1a1a;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n  border-bottom-color: #a5acbd;\n  border-top-color: #a5acbd;\n  border-top-width: thin;\n}\n\n.active,\n.accordion:hover {\n  background-color: #54fa50;\n}\n\n.accordion:after {\n  content: '\\002B';\n  color: #777;\n  font-weight: bold;\n  float: right;\n  margin-left: 5px;\n}\n\n.active:after {\n  content: '\\2212';\n  border-bottom-color: #a5acbd;\n  border-top-color: #a5acbd;\n  border-top-width: thin;\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n\n.title {\n  color: $govuk-text-colour;\n  font-size: 48px;\n  font-weight: 700;\n  letter-spacing: -0.09px;\n  line-height: 58px;\n  width: 379px;\n  text-align: left;\n}\n\n.left-pad {\n  margin-left: 5%;\n\n  .rectangle {\n    background-color: $govuk-border-colour;\n    width: 10px;\n    height: 60px;\n  }\n\n  .grid-container-technical-record-status {\n    display: grid;\n    grid-column-gap: 10px;\n    grid-template-columns: 10px 80px 100px auto;\n    width: 50%;\n  }\n\n  .grid-item-technical-record-status {\n    text-align: left;\n    padding-top: 25%;\n    font-family: 'GDS Transport', Arial, sans-serif;\n  }\n\n  .grid-item-technical-record-status-value {\n    text-align: left;\n    padding-top: 20%;\n    margin-left: -17%;\n    font-family: 'GDS Transport', Arial, sans-serif;\n  }\n}\n\n.auto-pad {\n  margin-left: 5%;\n  margin-right: 5%;\n\n  &.technical-record-details {\n    margin-top: 5%;\n  }\n}\n\n.records-container {\n  width: 100%;\n  overflow-x: scroll;\n  border: 1px solid rgba(0, 0, 0, 0.03);\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\n  margin: 4px;\n\n  & .records-container-title {\n    align-content: center;\n    align-items: center;\n    display: block;\n    justify-content: center;\n    padding: 8px 20px;\n    color: rgba(0, 0, 0, 0.54);\n    background: rgba(0, 0, 0, 0.03);\n\n    & .records-container-title-spacer {\n      display: flex;\n      flex-wrap: wrap;\n      color: rgba(0, 0, 0, 0.54);\n\n      > div {\n        flex: 0 50%;\n      }\n\n      & .record-search-title-text {\n        padding-top: 1%;\n      }\n    }\n  }\n\n  & .records-container-body {\n    padding: 30px;\n    display: flex;\n  }\n}\n\n.mat-expanded {\n  border: none !important;\n}\n\n.open-close-all {\n  display: flex;\n  justify-content: flex-end;\n\n  ::ng-deep a {\n    color: $govuk-link-colour;\n    font-size: 19px;\n    font-weight: 500;\n    letter-spacing: -0.09px;\n    line-height: 45px;\n    width: 73px;\n    text-align: right;\n    flex: 1;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n\n::ng-deep .item-technical-record:hover,\n.mat-expansion-panel-header:hover {\n  color: $govuk-link-colour;\n  background: none !important;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.notes-section {\n  font-weight: 100 !important;\n}\n\n::ng-deep .govuk-summary-list__key {\n  width: 355px !important;\n  white-space: nowrap;\n}\n\n::ng-deep .main-details {\n  padding: 1.5% 0 1.5% 0 !important;\n}\n\n@media only screen and (max-width: 600px) {\n  .item-technical-record {\n    white-space: normal !important;\n    font-size: 24px !important;\n  }\n}\n\n::ng-deep .table-details thead tr th:nth-child(1),\n.table-details tbody tr th:nth-child(1) {\n  width: 312px !important;\n}\n\n::ng-deep .table-details tbody tr > *:not(:first-child) {\n  width: 200px !important;\n}\n",
                    "styleUrl": "../app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "allowedValues",
                        "type": "TechnicalRecordValuesMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "allowedValues",
                        "type": "TechnicalRecordValuesMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<ng-container>\n  <form\n    [formGroup]=\"vehicleRecordFg\"\n    #vehicleRecordForm=\"ngForm\"\n    (ngSubmit)=\"onSaveChanges(vehicleRecordForm)\"\n    vtmFormConnector=\"vehicleRecordForm\"\n  >\n    <h1 class=\"govuk-heading-xl title\">Technical record</h1>\n\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-one-third govuk-!-margin-right-0 govuk-!-padding-right-0\">\n        <ng-container *ngIf=\"viewOnlyState\">\n          <button\n            id=\"test-change-btn\"\n            class=\"govuk-button\"\n            type=\"button\"\n            (click)=\"editTechRecord()\"\n            *ngIf=\"!isArchivedRecord\"\n          >\n            Change technical record\n          </button>\n        </ng-container>\n\n        <ng-container>\n          <button id=\"test-save-btn\" class=\"govuk-button\" type=\"submit\" *ngIf=\"isEditable\">\n            Save technical record\n          </button>\n          <span\n            id=\"test-edit-cancel\"\n            class=\"govuk-!-font-size-19 govuk-!-margin-left-5\"\n            *ngIf=\"viewEditState\"\n          >\n            <a\n              href=\"javascript:void(0)\"\n              class=\"govuk-link govuk-link--no-visited-state\"\n              (click)=\"cancelTechRecord()\"\n            >\n              <span>Cancel</span>\n            </a>\n          </span>\n        </ng-container>\n      </div>\n      <ng-container\n        *ngIf=\"\n          (activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl') &&\n          activeRecord.statusCode === 'current'\n        \"\n      >\n        <div class=\"govuk-grid-column-one-third govuk-!-margin-left-0 govuk-!-padding-left-0\">\n          <button\n            class=\"govuk-button govuk-button--secondary\"\n            id=\"test-send-ministry-plates\"\n            type=\"button\"\n            data-module=\"govuk-button\"\n            (click)=\"onSendMinistryPlates()\"\n          >\n            Send ministry plates\n          </button>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Active record status -->\n    <ng-container *ngIf=\"!viewCreateState\">\n      <vtm-record-status\n        [activeRecord]=\"activeRecord\"\n        [editState]=\"isEditable\"\n        (scrollToSection)=\"scrollDownToSection($event)\"\n      ></vtm-record-status>\n    </ng-container>\n\n    <!-- Vehicle Record Identification -->\n    <vtm-record-identification\n      [vehicleTechRecord]=\"activeVehicleTechRecord\"\n      [editState]=\"isEditable\"\n      [viewState]=\"currentState\"\n    ></vtm-record-identification>\n\n    <div class=\"open-close-all\">\n      <div></div>\n      <div>\n        <a class=\"govuk-link\" (click)=\"togglePanel()\">{{ allOpened ? 'Close' : 'Open' }} all</a>\n      </div>\n    </div>\n\n    <mat-accordion multi=\"true\" [@.disabled]=\"true\">\n      <div [@.disabled]=\"true\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #summary\n          [(expanded)]=\"panels[0].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple no-animate\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Vehicle summary\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!summary.expanded\"\n                  id=\"test-fa-plus-summary\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"summary.expanded\"\n                  id=\"test-fa-minus-summary\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-vehicle-summary\n            [activeRecord]=\"activeRecord\"\n            [editState]=\"isEditable\"\n            [viewState]=\"currentState\"\n          ></vtm-vehicle-summary>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"isStandardVehicle\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #body\n          [(expanded)]=\"panels[1].isOpened\"\n          [@.disabled]=\"true\"\n          [class.mat-expansion-panel-spacing]=\"false\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple no-animate\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title [@.disabled]=\"true\" class=\"no-animate mat-elevation-z0\">\n              <div\n                class=\"item-technical-record govuk-!-font-weight-bold no-animate\"\n                [@.disabled]=\"true\"\n              >\n                Body\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!body.expanded\"\n                  id=\"test-fa-plus-body\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"body.expanded\"\n                  id=\"test-fa-minus-body\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-body [activeRecord]=\"activeRecord\" [editState]=\"isEditable\"></vtm-body>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"isStandardVehicle\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #weights\n          [(expanded)]=\"panels[2].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple no-animate\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold no-animate\">\n                Weights\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!weights.expanded\"\n                  id=\"test-fa-plus-weights\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"weights.expanded\"\n                  id=\"test-fa-minus-weights\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-weights [activeRecord]=\"activeRecord\" [editState]=\"isEditable\"> </vtm-weights>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"isStandardVehicle\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #tyres\n          [(expanded)]=\"panels[3].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Tyres\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!tyres.expanded\"\n                  id=\"test-fa-plus-tyres\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"tyres.expanded\"\n                  id=\"test-fa-minus-tyres\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-tyres [activeRecord]=\"activeRecord\" [editState]=\"isEditable\"></vtm-tyres>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"isPsvOrTrlVehicle\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #brakes\n          [(expanded)]=\"panels[4].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Brakes\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!brakes.expanded\"\n                  id=\"test-fa-plus-brakes\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"brakes.expanded\"\n                  id=\"test-fa-minus-brakes\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-brakes\n            [brakes]=\"activeRecord.brakes\"\n            [axles]=\"activeRecord.axles\"\n            [currentVehicleType]=\"activeRecord.vehicleType\"\n          ></vtm-brakes>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"activeRecord.vehicleType === 'psv'\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #dimensions\n          [(expanded)]=\"panels[5].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                DDA (Disability Discrimination Act)\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!dimensions.expanded\"\n                  id=\"test-fa-plus-dimensions\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"dimensions.expanded\"\n                  id=\"test-fa-minus-dimensions\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-dda [ddaDetails]=\"activeRecord.dda\"></vtm-dda>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"isStandardVehicle\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0\"\n          hideToggle=\"true\"\n          #dimensions\n          [(expanded)]=\"panels[6].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Dimensions\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!dimensions.expanded\"\n                  id=\"test-fa-plus-dimensions\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"dimensions.expanded\"\n                  id=\"test-fa-minus-dimensions\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-dimensions [activeRecord]=\"activeRecord\" [editState]=\"isEditable\"></vtm-dimensions>\n        </mat-expansion-panel>\n      </div>\n\n      <ng-container *ngIf=\"viewOnlyState || viewEditState\">\n        <div [@.disabled]=\"true\" *ngIf=\"isHgvOrTrlVehicle\">\n          <mat-expansion-panel\n            class=\"custom-header mat-elevation-z0 \"\n            hideToggle=\"true\"\n            #adr\n            [(expanded)]=\"panels[7].isOpened\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-expansion-panel-header\n              class=\"disable_ripple\"\n              [@.disabled]=\"true\"\n              expandedHeight=\"80px\"\n              collapsedHeight=\"80px\"\n            >\n              <mat-panel-title>\n                <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                  ADR\n                </div>\n              </mat-panel-title>\n              <mat-panel-description>\n                <div class=\"expansion-icon\">\n                  <fa-icon\n                    *ngIf=\"!adr.expanded\"\n                    id=\"test-fa-plus-adr\"\n                    [icon]=\"['fa', 'plus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  ></fa-icon>\n                  <fa-icon\n                    *ngIf=\"adr.expanded\"\n                    id=\"test-fa-minus-adr\"\n                    [icon]=\"['fa', 'minus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  ></fa-icon>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <!-- ADR -->\n            <vtm-adr\n              [params]=\"adrDisplayParams\"\n              [editState]=\"isEditable\"\n              [activeRecord]=\"activeRecord\"\n              [vehicleMetaData]=\"metaData\"\n            >\n            </vtm-adr>\n          </mat-expansion-panel>\n        </div>\n      </ng-container>\n\n      <div [@.disabled]=\"true\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #applicant\n          [(expanded)]=\"panels[8].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Applicant\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!applicant.expanded\"\n                  id=\"test-fa-plus-applicant\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"applicant.expanded\"\n                  id=\"test-fa-minus-applicant\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-applicant [techRecord]=\"activeRecord\" [editState]=\"isEditable\"> </vtm-applicant>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"activeRecord.vehicleType === 'trl'\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #purchaser\n          [(expanded)]=\"panels[9].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Purchaser\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!purchaser.expanded\"\n                  id=\"test-fa-plus-purchaser\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"purchaser.expanded\"\n                  id=\"test-fa-minus-purchaser\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-purchaser [techRecord]=\"activeRecord\"></vtm-purchaser>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"activeRecord.vehicleType === 'trl'\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #manufacturer\n          [(expanded)]=\"panels[10].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Manufacturer\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!manufacturer.expanded\"\n                  id=\"test-fa-plus-manufacturer\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"manufacturer.expanded\"\n                  id=\"test-fa-minus-manufacturer\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-manufacturer [techRecord]=\"activeRecord\"></vtm-manufacturer>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"activeRecord.vehicleType === 'trl'\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #authorisationIntoService\n          [(expanded)]=\"panels[11].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Authorisation into service\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!authorisationIntoService.expanded\"\n                  id=\"test-fa-plus-authorisation-into-service\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"authorisationIntoService.expanded\"\n                  id=\"test-fa-minus-authorisation-into-service\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-authorisation-into-service\n            [authIntoService]=\"activeRecord.authIntoService\"\n          ></vtm-authorisation-into-service>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\" *ngIf=\"activeRecord.vehicleType === 'trl'\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #lettersOfAuthorisation\n          [(expanded)]=\"panels[12].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Letters of authorisation\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!lettersOfAuthorisation.expanded\"\n                  id=\"test-fa-plus-letters-of-authorisation\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"lettersOfAuthorisation.expanded\"\n                  id=\"test-fa-minus-letters-of-authorisation\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-letters-of-authorisation\n            [lettersOfAuth]=\"activeRecord.lettersOfAuth\"\n          ></vtm-letters-of-authorisation>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #documents\n          [(expanded)]=\"panels[13].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Documents\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!documents.expanded\"\n                  id=\"test-fa-plus-documents\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"documents.expanded\"\n                  id=\"test-fa-minus-documents\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-documents\n            [microfilm]=\"activeRecord?.microfilm\"\n            [editState]=\"isEditable\"\n          ></vtm-documents>\n        </mat-expansion-panel>\n      </div>\n\n      <div [@.disabled]=\"true\">\n        <mat-expansion-panel\n          class=\"custom-header mat-elevation-z0 \"\n          hideToggle=\"true\"\n          #notes\n          [(expanded)]=\"panels[14].isOpened\"\n          [@.disabled]=\"true\"\n        >\n          <mat-expansion-panel-header\n            class=\"disable_ripple\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-panel-title>\n              <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                Notes\n              </div>\n            </mat-panel-title>\n            <mat-panel-description>\n              <div class=\"expansion-icon\">\n                <fa-icon\n                  *ngIf=\"!notes.expanded\"\n                  id=\"test-fa-plus-notes\"\n                  [icon]=\"['fa', 'plus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n                <fa-icon\n                  *ngIf=\"notes.expanded\"\n                  id=\"test-fa-minus-notes\"\n                  [icon]=\"['fa', 'minus']\"\n                  size=\"lg\"\n                  class=\"expander-icon\"\n                ></fa-icon>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <vtm-notes [techRecord]=\"activeRecord\" [editState]=\"isEditable\"></vtm-notes>\n        </mat-expansion-panel>\n      </div>\n\n      <ng-container *ngIf=\"viewOnlyState\">\n        <div [@.disabled]=\"true\">\n          <mat-expansion-panel\n            class=\"custom-header mat-elevation-z0 \"\n            hideToggle=\"true\"\n            #testHistory\n            [(expanded)]=\"panels[15].isOpened\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-expansion-panel-header\n              class=\"disable_ripple\"\n              [@.disabled]=\"true\"\n              expandedHeight=\"80px\"\n              collapsedHeight=\"80px\"\n            >\n              <mat-panel-title>\n                <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                  Test history\n                </div>\n              </mat-panel-title>\n              <mat-panel-description>\n                <div class=\"expansion-icon\">\n                  <fa-icon\n                    *ngIf=\"!testHistory.expanded\"\n                    id=\"test-fa-plus-testHistory\"\n                    [icon]=\"['fa', 'plus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  >\n                  </fa-icon>\n                  <fa-icon\n                    *ngIf=\"testHistory.expanded\"\n                    id=\"test-fa-minus-testHistory\"\n                    [icon]=\"['fa', 'minus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  >\n                  </fa-icon>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <vtm-test-history [testResultJson]=\"testResultJson\"></vtm-test-history>\n          </mat-expansion-panel>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"viewOnlyState\">\n        <div [@.disabled]=\"true\">\n          <mat-expansion-panel\n            class=\"custom-header mat-elevation-z0 \"\n            hideToggle=\"true\"\n            #techRecHistory\n            [(expanded)]=\"panels[16].isOpened\"\n            [@.disabled]=\"true\"\n            expandedHeight=\"80px\"\n            collapsedHeight=\"80px\"\n          >\n            <mat-expansion-panel-header\n              class=\"disable_ripple\"\n              [@.disabled]=\"true\"\n              expandedHeight=\"80px\"\n              collapsedHeight=\"80px\"\n            >\n              <mat-panel-title>\n                <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                  Technical record history\n                </div>\n              </mat-panel-title>\n              <mat-panel-description>\n                <div class=\"expansion-icon\">\n                  <fa-icon\n                    *ngIf=\"!techRecHistory.expanded\"\n                    id=\"test-fa-plus-techRecHistory\"\n                    [icon]=\"['fa', 'plus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  >\n                  </fa-icon>\n                  <fa-icon\n                    *ngIf=\"techRecHistory.expanded\"\n                    id=\"test-fa-minus-techRecHistory\"\n                    [icon]=\"['fa', 'minus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  >\n                  </fa-icon>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <vtm-tech-rec-history\n              [focusedRecord]=\"activeRecord\"\n              [vehicleRecord]=\"vehicleTechRecord\"\n              (viewRecord)=\"techRecordViewHandler($event)\"\n            ></vtm-tech-rec-history>\n          </mat-expansion-panel>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"viewOnlyState\">\n        <div [@.disabled]=\"true\" *ngIf=\"isHgvOrTrlVehicle\">\n          <mat-expansion-panel\n            class=\"custom-header mat-elevation-z0 \"\n            hideToggle=\"true\"\n            #plates\n            [(expanded)]=\"panels[17].isOpened\"\n            [@.disabled]=\"true\"\n          >\n            <mat-expansion-panel-header\n              class=\"disable_ripple\"\n              [@.disabled]=\"true\"\n              expandedHeight=\"80px\"\n              collapsedHeight=\"80px\"\n            >\n              <mat-panel-title>\n                <div class=\"item-technical-record govuk-!-font-weight-bold\">\n                  Plates\n                </div>\n              </mat-panel-title>\n              <mat-panel-description>\n                <div class=\"expansion-icon\">\n                  <fa-icon\n                    *ngIf=\"!plates.expanded\"\n                    id=\"test-fa-plus-plates\"\n                    [icon]=\"['fa', 'plus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  ></fa-icon>\n                  <fa-icon\n                    *ngIf=\"plates.expanded\"\n                    id=\"test-fa-minus-plates\"\n                    [icon]=\"['fa', 'minus']\"\n                    size=\"lg\"\n                    class=\"expander-icon\"\n                  ></fa-icon>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <vtm-plates [plates]=\"activeRecord.plates\"></vtm-plates>\n          </mat-expansion-panel>\n        </div>\n      </ng-container>\n    </mat-accordion>\n  </form>\n</ng-container>\n\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "TechnicalRecordCreateComponent",
            "id": "component-TechnicalRecordCreateComponent-4110b7de72c79fe506ef9852496514262434c805a6428a72231a968a0bcfdf07f17c1c26db98371d94b90ee27b904d7b2c55d8252ab958657102775edac350f3",
            "file": "archive/src/app/technical-record-create/technical-record-create.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-technical-record-create",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./technical-record-create.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createTechRecordForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "formError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "formErrors",
                    "defaultValue": "{\n    vinErr: '',\n    vrmErr: '',\n    vTypeErr: '',\n    requestErr: []\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vehicleTypes",
                    "defaultValue": "['PSV', 'HGV', 'Trailer']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "vrmLabel",
                    "defaultValue": "CREATE_PAGE_LABELS.CREATE_VRM_LABEL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setVrmValidators",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SetVehicleTechRecordOnCreate } from '@app/store/actions/VehicleTechRecordModel.actions';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport { Observable } from 'rxjs';\nimport { CREATE_PAGE_LABELS } from '@app/app.enums';\nimport { VehicleIdentifiers } from '@app/models/vehicle-tech-record.model';\nimport { getErrors } from '@app/store/selectors/error.selectors';\nimport { ClearErrorMessage, SetErrorMessage } from '@app/store/actions/Error.actions';\n\n@Component({\n  selector: 'vtm-technical-record-create',\n  templateUrl: './technical-record-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnicalRecordCreateComponent implements OnInit {\n  vehicleTypes = ['PSV', 'HGV', 'Trailer'];\n  createTechRecordForm: FormGroup;\n  formError$: Observable<any>;\n  formErrors: { vinErr: string; vrmErr: string; vTypeErr: string; requestErr: string[] } = {\n    vinErr: '',\n    vrmErr: '',\n    vTypeErr: '',\n    requestErr: []\n  };\n  vrmLabel = CREATE_PAGE_LABELS.CREATE_VRM_LABEL;\n\n  constructor(private _store: Store<IAppState>) {\n    this.formError$ = this._store.select(getErrors);\n  }\n\n  ngOnInit() {\n    this.createTechRecordForm = new FormGroup({\n      vehicleType: new FormControl('', Validators.required),\n      vin: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(21)\n      ]),\n      vrm: new FormControl('', Validators.required)\n    });\n  }\n\n  setVrmValidators($event): void {\n    const vrmControl = this.createTechRecordForm.get('vrm');\n\n    if (\n      $event.currentTarget.id === 'test-radio-PSV' ||\n      $event.currentTarget.id === 'test-radio-HGV'\n    ) {\n      this.vrmLabel = CREATE_PAGE_LABELS.CREATE_VRM_LABEL;\n      vrmControl.setValidators([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(8)\n      ]);\n    } else {\n      this.vrmLabel = CREATE_PAGE_LABELS.CREATE_VRM_LABEL_OPTIONAL;\n      vrmControl.setValidators([Validators.minLength(1), Validators.maxLength(8)]);\n    }\n    vrmControl.updateValueAndValidity();\n  }\n\n  onSubmit() {\n    this.formErrors.vinErr = !this.createTechRecordForm.get('vin').valid ? 'Enter a VIN' : null;\n    this.formErrors.vrmErr = !this.createTechRecordForm.get('vrm').valid ? 'Enter a VRM' : null;\n    this.formErrors.vTypeErr = !this.createTechRecordForm.get('vehicleType').valid\n      ? 'Select a vehicle type'\n      : null;\n\n    if (!this.formErrors.vinErr && !this.formErrors.vrmErr && !this.formErrors.vTypeErr) {\n      const createDetails: VehicleIdentifiers = {\n        vin: encodeURIComponent(this.createTechRecordForm.get('vin').value),\n        vrm: encodeURIComponent(this.createTechRecordForm.get('vrm').value),\n        vType: this.createTechRecordForm.get('vehicleType').value\n      };\n      this.formErrors.requestErr = [];\n      this._store.dispatch(new SetVehicleTechRecordOnCreate(createDetails));\n    } else {\n      const errors = [this.formErrors.vinErr, this.formErrors.vrmErr, this.formErrors.vTypeErr];\n      this._store.dispatch(new SetErrorMessage(errors));\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "_store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container\">\n  <a class=\"govuk-back-link\" vtmBackButton>Back</a>\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-two-thirds\">\n        <div class=\"govuk-grid-row govuk-!-padding-left-0 govuk-!-margin-left-0\">\n          <div class=\"govuk-grid-column-full\">\n            <h1 class=\"govuk-heading-xl\">\n              Create new technical record\n            </h1>\n          </div>\n        </div>\n\n        <div *ngIf=\"formError$ | async as formError\" class=\"govuk-grid-row\">\n          <div class=\"govuk-grid-column-full\">\n            <form [formGroup]=\"createTechRecordForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"govuk-form-group\">\n                <div\n                  class=\"govuk-grid-row govuk-!-margin-bottom-5 govuk-!-padding-left-0 govuk-!-margin-left-0\"\n                  [class.govuk-form-group--error]=\"formErrors.vTypeErr\"\n                >\n                  <div class=\"govuk-grid-column-full\">\n                    <label class=\"govuk-label govuk-!-font-weight-bold\">\n                      Vehicle type\n                    </label>\n                    <span\n                      *ngIf=\"formErrors.vTypeErr\"\n                      id=\"vType-error\"\n                      class=\"govuk-error-message\"\n                    >\n                      <span class=\"govuk-visually-hidden\">Error:</span>\n                      <span>Select a vehicle type</span>\n                    </span>\n                    <div class=\"govuk-radios\">\n                      <div class=\"govuk-radios__item\" *ngFor=\"let vType of vehicleTypes\">\n                        <input\n                          class=\"govuk-radios__input\"\n                          id=\"{{ 'test-radio-' + vType }}\"\n                          type=\"radio\"\n                          formControlName=\"vehicleType\"\n                          value=\"{{ vType }}\"\n                          (change)=\"setVrmValidators($event)\"\n                        />\n                        <label\n                          class=\"govuk-label govuk-radios__label\"\n                          for=\"{{ 'test-radio-' + vType }}\"\n                        >\n                          {{ vType }}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"govuk-grid-row govuk-!-margin-bottom-5 govuk-!-padding-left-0 govuk-!-margin-left-0\"\n                  [class.govuk-form-group--error]=\"\n                    formErrors.vinErr || formError[0]?.includes('VIN')\n                  \"\n                >\n                  <div class=\"govuk-grid-column-full\">\n                    <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-vin\">\n                      Vehicle identification number (VIN)\n                    </label>\n                    <span\n                      *ngIf=\"formErrors.vinErr || formError[0]\"\n                      id=\"vin-error\"\n                      class=\"govuk-error-message\"\n                    >\n                      <span class=\"govuk-visually-hidden\">Error:</span>\n                      <span *ngIf=\"formError[0]?.includes('VIN')\">{{ formError[0] }}</span>\n                    </span>\n                    <input\n                      class=\"govuk-input govuk-input--width-20\"\n                      [class.govuk-input--error]=\"\n                        formErrors.vinErr || formError[0]?.includes('VIN')\n                      \"\n                      id=\"test-vin\"\n                      type=\"text\"\n                      formControlName=\"vin\"\n                      maxlength=\"21\"\n                    />\n                  </div>\n                </div>\n                <div\n                  class=\"govuk-grid-row govuk-!-margin-bottom-5 govuk-!-padding-left-0 govuk-!-margin-left-0\"\n                  [class.govuk-form-group--error]=\"\n                    formErrors.vrmErr ||\n                    formError[0]?.includes('VRM') ||\n                    formError[1]?.includes('VRM')\n                  \"\n                >\n                  <div class=\"govuk-grid-column-full\">\n                    <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-vrm\">\n                      {{ vrmLabel }}\n                    </label>\n                    <span\n                      *ngIf=\"formErrors.vrmErr || formError[0]\"\n                      id=\"vrm-error\"\n                      class=\"govuk-error-message\"\n                    >\n                      <span class=\"govuk-visually-hidden\">Error:</span>\n                      <span>{{ formErrors.vrmErr }}</span>\n                      <ng-container *ngIf=\"formError[0]?.includes('exists')\">\n                        <span *ngIf=\"!formError[1] && formError[0]?.includes('VRM')\">{{\n                          formError[0]\n                        }}</span>\n                        <span>{{ formError[1] }}</span>\n                      </ng-container>\n                    </span>\n                    <input\n                      class=\"govuk-input govuk-input--width-20\"\n                      [class.govuk-input--error]=\"\n                        formErrors.vrmErr ||\n                        formError[0]?.includes('VRM') ||\n                        formError[1]?.includes('VRM')\n                      \"\n                      id=\"test-vrm\"\n                      type=\"text\"\n                      formControlName=\"vrm\"\n                      maxlength=\"8\"\n                    />\n                  </div>\n                </div>\n                <div class=\"govuk-grid-row govuk-!-padding-left-0 govuk-!-margin-left-0\">\n                  <div class=\"govuk-grid-column-full\">\n                    <button\n                      class=\"govuk-button\"\n                      data-module=\"govuk-button\"\n                      id=\"test-continue-btn\"\n                      type=\"submit\"\n                    >\n                      Continue\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</div>\n"
        },
        {
            "name": "TechnicalRecordsContainer",
            "id": "component-TechnicalRecordsContainer-5ba6830b044c39bdb8e619b31d543d3d9ccb82a038db8597c2bf7e957ebd553191f5c80d435ee4d1a4a429a7d73e0ead4a91170c0d1c8a234ad2e823a6a1e4b4",
            "file": "archive/src/app/technical-record/technical-record.container.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-technical-record-container",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"vehicleTechnicalRecord$ | async as vehicleTechRecord\">\n  <div class=\"govuk-width-container\">\n    <a class=\"govuk-back-link\" vtmBackButton>Back</a>\n\n    <main class=\"govuk-main-wrapper\">\n      <vtm-technical-record\n        [activeVehicleTechRecord]=\"activeVehicleTechRecord$ | async\"\n        [vehicleTechRecord]=\"vehicleTechRecord\"\n        [metaData]=\"metaData$ | async\"\n        [currentState]=\"viewState$ | async\"\n        [testResultJson]=\"testResults$ | async\"\n        (submitVehicleRecord)=\"vehicleRecordSubmissionHandler($event)\"\n        (changeViewState)=\"viewStateHandler($event)\"\n        (sendPlates)=\"sendPlatesHandler($event)\"\n      >\n      </vtm-technical-record>\n    </main>\n  </div>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeVehicleTechRecord$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<VehicleTechRecordEdit>",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "metaData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MetaData>",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "testResults$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TestResultModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "vehicleTechnicalRecord$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<VehicleTechRecordModel>",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "viewState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<VIEW_STATE>",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendPlatesHandler",
                    "args": [
                        {
                            "name": "editedVehicleRecord",
                            "type": "VehicleTechRecordEdit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "editedVehicleRecord",
                            "type": "VehicleTechRecordEdit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "vehicleRecordSubmissionHandler",
                    "args": [
                        {
                            "name": "editedVehicleRecordState",
                            "type": "VehicleTechRecordEditState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "editedVehicleRecordState",
                            "type": "VehicleTechRecordEditState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "viewStateHandler",
                    "args": [
                        {
                            "name": "state",
                            "type": "VIEW_STATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "VIEW_STATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { IAppState } from '@app/store/state/app.state';\r\nimport {\r\n  getVehicleTechRecordMetaData,\r\n  getSelectedVehicleTechRecord,\r\n  getTechViewState,\r\n  getActiveVehicleTechRecord\r\n} from '@app/store/selectors/VehicleTechRecordModel.selectors';\r\nimport { getVehicleTestResultModel } from '@app/store/selectors/VehicleTestResultModel.selectors';\r\nimport { MetaData } from '@app/models/meta-data';\r\nimport {\r\n  SetViewState,\r\n  CreateVehicleTechRecord,\r\n  UpdateVehicleTechRecord\r\n} from '@app/store/actions/VehicleTechRecordModel.actions';\r\nimport {\r\n  VehicleTechRecordModel,\r\n  VehicleTechRecordEdit,\r\n  VehicleTechRecordEditState\r\n} from '@app/models/vehicle-tech-record.model';\r\nimport { TestResultModel } from '@app/models/test-result.model';\r\nimport { VIEW_STATE } from '@app/app.enums';\r\n\r\n@Component({\r\n  selector: 'vtm-technical-record-container',\r\n  template: `\r\n    <ng-container *ngIf=\"vehicleTechnicalRecord$ | async as vehicleTechRecord\">\r\n      <div class=\"govuk-width-container\">\r\n        <a class=\"govuk-back-link\" vtmBackButton>Back</a>\r\n\r\n        <main class=\"govuk-main-wrapper\">\r\n          <vtm-technical-record\r\n            [activeVehicleTechRecord]=\"activeVehicleTechRecord$ | async\"\r\n            [vehicleTechRecord]=\"vehicleTechRecord\"\r\n            [metaData]=\"metaData$ | async\"\r\n            [currentState]=\"viewState$ | async\"\r\n            [testResultJson]=\"testResults$ | async\"\r\n            (submitVehicleRecord)=\"vehicleRecordSubmissionHandler($event)\"\r\n            (changeViewState)=\"viewStateHandler($event)\"\r\n            (sendPlates)=\"sendPlatesHandler($event)\"\r\n          >\r\n          </vtm-technical-record>\r\n        </main>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TechnicalRecordsContainer implements OnInit {\r\n  activeVehicleTechRecord$: Observable<VehicleTechRecordEdit>;\r\n  vehicleTechnicalRecord$: Observable<VehicleTechRecordModel>;\r\n  testResults$: Observable<TestResultModel[]>;\r\n  metaData$: Observable<MetaData>;\r\n  viewState$: Observable<VIEW_STATE>;\r\n\r\n  constructor(private store: Store<IAppState>) {\r\n    this.activeVehicleTechRecord$ = this.store\r\n      .select(getActiveVehicleTechRecord)\r\n      .pipe(map((f) => f()));\r\n    this.vehicleTechnicalRecord$ = this.store.select(getSelectedVehicleTechRecord);\r\n    this.testResults$ = this.store.select(getVehicleTestResultModel);\r\n    this.metaData$ = this.store.select(getVehicleTechRecordMetaData);\r\n    this.viewState$ = this.store.select(getTechViewState);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  vehicleRecordSubmissionHandler(editedVehicleRecordState: VehicleTechRecordEditState): void {\r\n    const { vehicleRecordEdit, viewState } = editedVehicleRecordState;\r\n\r\n    viewState === VIEW_STATE.CREATE\r\n      ? this.store.dispatch(new CreateVehicleTechRecord(vehicleRecordEdit))\r\n      : this.store.dispatch(new UpdateVehicleTechRecord(vehicleRecordEdit));\r\n  }\r\n\r\n  viewStateHandler(state: VIEW_STATE): void {\r\n    this.store.dispatch(new SetViewState(state));\r\n  }\r\n\r\n  sendPlatesHandler(editedVehicleRecord: VehicleTechRecordEdit) {\r\n    this.store.dispatch(new UpdateVehicleTechRecord(editedVehicleRecord));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TechnicalRecordSearchComponent",
            "id": "component-TechnicalRecordSearchComponent-3838033f2503749630666307f96f10dff52a8db7d1345bd373a4efa56a34fc768cb6a9d189dfd0c2cb7b5f23f8bbefa25712efeb8756ac3098c502e96245f7ac",
            "file": "archive/src/app/technical-record-search/technical-record-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-technical-record-search",
            "styleUrls": [
                "./technical-record-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./technical-record-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "searchCriteriaOptions",
                    "defaultValue": "Object.values(SEARCH_CRITERIA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "searchError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "searchParams",
                    "defaultValue": "{ searchIdentifier: '{none searched}', searchCriteria: 'all' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchParams",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchTechRecords",
                    "args": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchCriteria",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchIdentifier",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchCriteria",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { IAppState } from '@app/store/state/app.state';\nimport { getErrors } from '@app/store/selectors/error.selectors';\nimport { GetVehicleTechRecordHavingStatusAll } from '@app/store/actions/VehicleTechRecordModel.actions';\nimport { SEARCH_CRITERIA } from '@app/app.enums';\nimport { SearchParams } from '@app/models/search-params';\n\n@Component({\n  selector: 'vtm-technical-record-search',\n  templateUrl: './technical-record-search.component.html',\n  styleUrls: ['./technical-record-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechnicalRecordSearchComponent implements OnInit {\n  isLoading: boolean;\n  searchError$: Observable<string[]>;\n  searchCriteriaOptions = Object.values(SEARCH_CRITERIA);\n  searchParams: SearchParams = { searchIdentifier: '{none searched}', searchCriteria: 'all' };\n\n  constructor(private store: Store<IAppState>) {}\n\n  ngOnInit() {\n    this.searchError$ = this.store.select(getErrors);\n  }\n\n  public searchTechRecords(searchIdentifier: string, searchCriteria: string) {\n    this.isLoading = true;\n    this.searchParams.searchIdentifier = encodeURIComponent(searchIdentifier);\n\n    switch (searchCriteria) {\n      case SEARCH_CRITERIA.VRM_CRITERIA:\n        this.searchParams.searchCriteria = 'vrm';\n        break;\n      case SEARCH_CRITERIA.FULL_VIN_CRITERIA:\n        this.searchParams.searchCriteria = 'vin';\n        break;\n      case SEARCH_CRITERIA.PARTIAL_VIN_CRITERIA:\n        this.searchParams.searchCriteria = 'partialVin';\n        break;\n      case SEARCH_CRITERIA.TRL_CRITERIA:\n        this.searchParams.searchCriteria = 'trailerId';\n        break;\n      case SEARCH_CRITERIA.ALL_CRITERIA:\n      default:\n        this.searchParams.searchCriteria = 'all';\n    }\n\n    this.store.dispatch(new GetVehicleTechRecordHavingStatusAll(this.searchParams));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'node_modules/govuk-frontend/govuk/all';\n\n.mt-2 {\n  margin-top: 2rem;\n}\n\n.govuk-main-wrapper {\n  #searchIdentifier {\n    background-color: govuk-colour('white');\n    border: 2px solid $govuk-input-border-colour;\n    width: 589px;\n    height: 40px;\n  }\n\n  .govuk-input--error {\n    border: 4px solid $govuk-error-colour !important;\n  }\n\n  .govuk-error-message {\n    white-space: nowrap;\n    font-weight: bolder;\n  }\n\n  .govuk-error-summary {\n    .govuk-error-message {\n      text-decoration: underline;\n    }\n  }\n\n  & .govuk-select {\n    width: 589px;\n  }\n\n  & .govuk-form-group:nth-child(3) {\n    margin-top: 2rem;\n  }\n}\n",
                    "styleUrl": "./technical-record-search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container\">\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-full\">\n        <h1 class=\"govuk-heading-xl\">Search for a technical record</h1>\n\n        <ng-container *ngIf=\"searchError$ | async as searchError\">\n          <div\n            [ngClass]=\"{\n              'govuk-form-group': true,\n              'govuk-form-group--error': searchError.length > 0\n            }\"\n          >\n            <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"searchIdentifier\">\n              Vehicle registration mark, trailer ID or vehicle identification number\n            </label>\n            <span *ngIf=\"searchError.length\" id=\"name-error\" class=\"govuk-error-message\">\n              <span class=\"govuk-visually-hidden\">Error:</span>\n              <p class=\"white-space--normal\">{{ searchError }}</p>\n            </span>\n\n            <input\n              #searchIdentifier\n              [ngClass]=\"{\n                'govuk-input': true,\n                'govuk-input--error': searchError.length > 0\n              }\"\n              id=\"searchIdentifier\"\n              name=\"searchIdentifier\"\n              type=\"text\"\n              aria-describedby=\"name-error\"\n            />\n          </div>\n\n          <div class=\"govuk-form-group\">\n            <label class=\"govuk-label govuk-!-font-weight-bold\">\n              Search criteria\n            </label>\n            <select class=\"govuk-select\" id=\"test-search-criteria\" #searchCriteria>\n              <option\n                *ngFor=\"let searchCriteria of searchCriteriaOptions\"\n                [value]=\"searchCriteria\"\n                >{{ searchCriteria }}</option\n              >\n            </select>\n          </div>\n\n          <a\n            role=\"button\"\n            (click)=\"searchTechRecords(searchIdentifier.value, searchCriteria.value)\"\n            draggable=\"false\"\n            class=\"govuk-button govuk-button--start govuk-!-margin-bottom-2\"\n            data-module=\"govuk-button\"\n          >\n            Search\n            <svg\n              class=\"govuk-button__start-icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"17.5\"\n              height=\"19\"\n              viewBox=\"0 0 33 40\"\n              role=\"presentation\"\n              focusable=\"false\"\n            >\n              <path fill=\"currentColor\" d=\"M0 0h13l20 20-20 20H0l20-20z\" />\n            </svg>\n          </a>\n        </ng-container>\n      </div>\n    </div>\n  </main>\n</div>\n"
        },
        {
            "name": "TechRecHistoryComponent",
            "id": "component-TechRecHistoryComponent-e011a1d18633fe43c605e1c2e82a557f799a7c3cbb978faed1832cd68128bce7a927607fc4ba7a6f608eb23c6c05f5780a5d84a8a262df61380a13358e7e89c9",
            "file": "archive/src/app/technical-record/tech-rec-history/tech-rec-history.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tech-rec-history",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tech-rec-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "focusedRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "vehicleRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "VehicleTechRecordModel",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "viewRecord",
                    "defaultValue": "new EventEmitter<TechRecord>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "techRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecord[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "getDateNumber",
                    "args": [
                        {
                            "name": "strDate",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "strDate",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideLinkForSelectedRecord",
                    "args": [
                        {
                            "name": "current",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "active",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "current",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onViewTechRecord",
                    "args": [
                        {
                            "name": "techRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "techRecord",
                            "type": "TechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnChanges,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { VehicleTechRecordModel } from '@app/models/vehicle-tech-record.model';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-tech-rec-history',\n  templateUrl: './tech-rec-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TechRecHistoryComponent implements OnChanges {\n  @Input() vehicleRecord: VehicleTechRecordModel;\n  @Input() focusedRecord: TechRecord;\n  @Output() viewRecord = new EventEmitter<TechRecord>();\n\n  techRecords: TechRecord[];\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { focusedRecord, vehicleRecord } = changes;\n    if (focusedRecord && vehicleRecord) {\n      this.techRecords = this.vehicleRecord.techRecord;\n    }\n  }\n\n  hideLinkForSelectedRecord(current, active) {\n    return !(\n      current.statusCode === active.statusCode &&\n      this.getDateNumber(current.createdAt) === this.getDateNumber(active.createdAt)\n    );\n  }\n\n  getDateNumber(strDate: string) {\n    return new Date(strDate).getTime();\n  }\n\n  onViewTechRecord(techRecord: TechRecord) {\n    this.viewRecord.emit(techRecord);\n    this.scrollToTop();\n  }\n\n  scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'auto' });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<table class=\"govuk-table\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\">Status</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Reason for creation</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created by</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created at</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Last updated by</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Last updated at</th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\">\n    <tr\n      class=\"govuk-table__row\"\n      *ngFor=\"let record of techRecords | OrderByStatusPipe; let i = index\"\n    >\n      <td id=\"{{ 'test-statusCode-' + i }}\" class=\"govuk-table__cell\">\n        {{\n          (record.statusCode | DefaultNullOrEmpty).charAt(0).toUpperCase() +\n            (record.statusCode | DefaultNullOrEmpty).substr(1).toLowerCase()\n        }}\n      </td>\n      <td id=\"{{ 'test-reasonForCreation-' + i }}\" class=\"govuk-table__cell\">\n        {{ record.reasonForCreation | DefaultNullOrEmpty | titlecase }}\n      </td>\n      <td id=\"{{ 'test-createdByName-' + i }}\" class=\"govuk-table__cell\">\n        {{ record.createdByName | DefaultNullOrEmpty | titlecase }}\n      </td>\n      <td id=\"{{ 'test-createdAt-' + i }}\" class=\"govuk-table__cell\">\n        <span *ngIf=\"record.createdAt; else hyphen\">\n          {{ record.createdAt | date: 'dd/MM/yyyy' }}\n        </span>\n      </td>\n      <td id=\"{{ 'test-lastUpdatedByName-' + i }}\" class=\"govuk-table__cell\">\n        {{ record.lastUpdatedByName | DefaultNullOrEmpty | titlecase }}\n      </td>\n      <td id=\"{{ 'test-lastUpdatedAt-' + i }}\" class=\"govuk-table__cell\">\n        <span *ngIf=\"record.lastUpdatedAt; else hyphen\">\n          {{ record.lastUpdatedAt | date: 'dd/MM/yyyy' }}\n        </span>\n      </td>\n      <td\n        id=\"{{ 'test-view-link-' + i }}\"\n        class=\"govuk-table__cell\"\n        *ngIf=\"hideLinkForSelectedRecord(record, focusedRecord)\"\n      >\n        <a\n          class=\"govuk-link\"\n          id=\"{{ 'test-tech-rec-' + i }}\"\n          href=\"javascript:void(0)\"\n          (click)=\"onViewTechRecord(record)\"\n          >View\n        </a>\n      </td>\n      <td class=\"govuk-table__cell\"></td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "TestHistoryComponent",
            "id": "component-TestHistoryComponent-a4242472c35f3c1b6d7821e861f2931a9ae0f1a87987191abee970ce1d6ca1e2e003754668c8477498c40e58e754d3b2f4af9bdb6cdad8864af513c3f5c08c35",
            "file": "archive/src/app/test-record/test-history/test-history.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-history",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TestResultModel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-test-history',\n  templateUrl: './test-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestHistoryComponent implements OnInit {\n  @Input() testRecord: TestResultModel;\n  @Input() editState: VIEW_STATE;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table *ngIf=\"!editState\" class=\"govuk-table govuk-!-padding-bottom-0 govuk-!-margin-bottom-0\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\">Status</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Reason for creation</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created by</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Created at</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Last updated by</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Last updated at</th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\">\n    <tr class=\"govuk-table__row\">\n      <td\n        id=\"test-testVersion-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ testRecord.testVersion | titlecase | DefaultNullOrEmpty }}\n      </td>\n      <td\n        id=\"test-reasonForCreation-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ testRecord.reasonForCreation | DefaultNullOrEmpty }}\n      </td>\n      <td\n        id=\"test-createdByName-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ (testRecord.createdByName?.split('@'))[0] | DefaultNullOrEmpty }}\n      </td>\n      <td\n        id=\"test-createdAt-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ testRecord.createdAt | date: 'dd/MM/yyyy' | DefaultNullOrEmpty }}\n      </td>\n      <td\n        id=\"test-lastUpdatedByName-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ (testRecord.lastUpdatedByName?.split('@'))[0] | DefaultNullOrEmpty }}\n      </td>\n      <td\n        id=\"test-lastUpdatedAt-curr\"\n        class=\"govuk-table__cell\"\n        [class.border--bottom-none]=\"!testRecord.testHistory\"\n      >\n        {{ testRecord.lastUpdatedAt | date: 'dd/MM/yyyy' | DefaultNullOrEmpty }}\n      </td>\n    </tr>\n    <ng-container\n      *ngFor=\"\n        let archivedTestRecord of testRecord.testHistory | SortByDatePipe: 'createdAt';\n        let i = index\n      \"\n    >\n      <tr class=\"govuk-table__row\">\n        <td\n          id=\"{{ 'test-testVersion-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ archivedTestRecord.testVersion | titlecase | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-reasonForCreation-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ archivedTestRecord.reasonForCreation | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-createdByName-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ (archivedTestRecord.createdByName?.split('@'))[0] | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-createdAt-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ archivedTestRecord.createdAt | date: 'dd/MM/yyyy' | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-lastUpdatedByName-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ (archivedTestRecord.lastUpdatedByName?.split('@'))[0] | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-lastUpdatedAt-arch-' + i }}\"\n          class=\"govuk-table__cell\"\n          [class.border--bottom-none]=\"testRecord.testHistory.length === i + 1\"\n        >\n          {{ archivedTestRecord.lastUpdatedAt | date: 'dd/MM/yyyy' | DefaultNullOrEmpty }}\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n</table>\n"
        },
        {
            "name": "TestHistoryComponent",
            "id": "component-TestHistoryComponent-c9609143083b05e6b33d632e002cc55adeca54e2b9752c3e04fe16c9ef407cb8bc1ad7d0a20416fcd1ff4011ed2e86bfe1f1106765a83d608c9c01bdb6f3649a-1",
            "file": "archive/src/app/technical-record/test-history/test-history.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-history",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "testResultJson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TestResultModel[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\n\n@Component({\n  selector: 'vtm-test-history',\n  templateUrl: './test-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestHistoryComponent implements OnInit {\n  @Input() testResultJson: TestResultModel[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TestHistoryComponent-1",
            "templateData": "<table class=\"govuk-table govuk-!-margin-bottom-0\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\">Test type</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Test date</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Expiry date</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Certificate number</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Result</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Tester name</th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\" *ngIf=\"testResultJson; else noTestHistory\">\n    <ng-container\n      *ngFor=\"let testRes of testResultJson | SortByDatePipe: 'testEndTimestamp'; let i = index\"\n    >\n      <tr\n        class=\"govuk-table__row\"\n        *ngFor=\"\n          let testType of testRes.testTypes | SortByDatePipe: 'testTypeEndTimestamp';\n          let ii = index\n        \"\n      >\n        <td id=\"{{ 'test-testCode-tRes-' + i + '-' + ii }}\" class=\"govuk-table__cell\">\n          {{ testType.testTypeName | DefaultNullOrEmpty | titlecase }}\n        </td>\n        <td id=\"{{ 'test-testTypeEndTimestamp-tRes-' + i + '-' + ii }}\" class=\"govuk-table__cell\">\n          <span *ngIf=\"testType.testTypeEndTimestamp; else hyphen\">\n            {{ testType.testTypeEndTimestamp | date: 'dd/MM/yyyy' }}\n          </span>\n        </td>\n        <td id=\"{{ 'test-expiryDate-tRes-' + i + '-' + ii }}\" class=\"govuk-table__cell\">\n          <span\n            *ngIf=\"testType.testExpiryDate && testType.testExpiryDate.trim() !== ''; else hyphen\"\n          >\n            {{ testType.testExpiryDate | date: 'dd/MM/yyyy':'UTC' }}\n          </span>\n        </td>\n        <td id=\"{{ 'test-certificateNumber-tRes-' + i + '-' + ii }}\" class=\"govuk-table__cell\">\n          {{ testType.certificateNumber | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-testResult-tRes-' + i + '-' + ii }}\"\n          class=\"govuk-table__cell govuk-!-font-weight-bold\"\n          [class.font--green]=\"testType.testResult === 'pass'\"\n          [class.font--blue]=\"testType.testResult === 'prs'\"\n          [class.font--red]=\"\n            testType.testResult === 'fail' || testType.testResult === 'abandoned'\n          \"\n        >\n          {{ testType.testResult | DefaultNullOrEmpty | uppercase }}\n        </td>\n        <td id=\"{{ 'test-testerName-' + i + '-' + ii }}\" class=\"govuk-table__cell\">\n          {{ testRes.testerName | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-view-' + i }}\" class=\"govuk-table__cell\">\n          <a\n            class=\"govuk-link govuk-link--no-visited-state\"\n            id=\"{{ 'test-view-' + testType.testNumber }}\"\n            [routerLink]=\"['/test-record', testType.testNumber]\"\n            [queryParams]=\"{\n              testResultId: testRes.testResultId,\n              systemNumber: testRes.systemNumber\n            }\"\n            >View</a\n          >\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n  <ng-template #noTestHistory>\n    <tbody class=\"govuk-table__body\">\n      <tr>\n        <td id=\"test-testCode-tRes-0-0\">-</td>\n        <td id=\"test-testTypeEndTimestamp-tRes-0-0\">-</td>\n        <td id=\"test-expiryDate-tRes-0-0\">-</td>\n        <td id=\"test-certificateNumber-tRes-0-0\">-</td>\n        <td id=\"test-testResult-tRes-0-0\">-</td>\n        <td id=\"test-testerName-0-0\">-</td>\n      </tr>\n    </tbody>\n  </ng-template>\n</table>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "TestRecordComponent",
            "id": "component-TestRecordComponent-6b849c868b02fc11bc7b8025125ac90a023a188fd0f0c14aa12146bb2e1cfaf925f094c59cbd76d51492fa326193a1f015cbd8aaa7e433dc92a12a6085fc0846",
            "file": "archive/src/app/test-record/test-record.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-record",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-record.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "preparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Preparer[]",
                    "decorators": []
                },
                {
                    "name": "testResultObj",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "TestRecordTestType",
                    "decorators": []
                },
                {
                    "name": "testStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TestStation[]",
                    "decorators": []
                },
                {
                    "name": "testTypesApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "TestTypesApplicable",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "downloadCert",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "submitTest",
                    "defaultValue": "new EventEmitter<TestResultModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                },
                {
                    "name": "switchState",
                    "defaultValue": "new EventEmitter<VIEW_STATE>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "hasDefectsApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "hasEmissionApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "hasSeatBeltApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "testResultParentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "downloadCertificate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveTestResult",
                    "args": [
                        {
                            "name": "testResultParentForm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultParentForm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchCurrentState",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { initAll } from 'govuk-frontend';\nimport { TestRecordTestType } from '@app/models/test-record-test-type';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TestRecordMapper, TestTypesApplicable } from '@app/test-record/test-record.mapper';\nimport { Preparer } from '@app/models/preparer';\nimport { DialogBoxComponent } from '@app/shared/dialog-box/dialog-box.component';\nimport { TestStation } from '@app/models/test-station';\nimport { PreventLeavePageModalComponent } from '@app/shared/prevent-page-leave-modal/prevent-leave-page-modal.component';\n\n@Component({\n  selector: 'vtm-test-record',\n  templateUrl: './test-record.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestRecordComponent implements OnInit {\n  @Input() editState: VIEW_STATE;\n  @Input() preparers: Preparer[];\n  @Input() testResultObj: TestRecordTestType;\n  @Input() testStations: TestStation[];\n  @Input() testTypesApplicable: TestTypesApplicable;\n  @Output() submitTest = new EventEmitter<TestResultModel>();\n  @Output() switchState = new EventEmitter<VIEW_STATE>();\n  @Output() downloadCert = new EventEmitter<string>();\n  testResultParentForm: FormGroup;\n\n  hasDefectsApplicable: boolean;\n  hasEmissionApplicable: boolean;\n  hasSeatBeltApplicable: boolean;\n\n  constructor(\n    private parent: FormGroupDirective,\n    protected fb: FormBuilder,\n    private dialog: MatDialog,\n    private testRecordMapper: TestRecordMapper\n  ) {}\n\n  ngOnInit(): void {\n    this.hasDefectsApplicable = this.testTypesApplicable.defectsApplicable[\n      this.testResultObj.testType.testTypeId\n    ];\n    this.hasSeatBeltApplicable = !(\n      this.testTypesApplicable.seatBeltApplicable[this.testResultObj.testType.testTypeId] &&\n      this.testResultObj.testRecord.vehicleType === 'psv'\n    );\n    this.hasEmissionApplicable = !(\n      this.testTypesApplicable.emissionDetailsApplicable[\n        this.testResultObj.testType.testTypeId\n      ] &&\n      (this.testResultObj.testRecord.vehicleType === 'psv' ||\n        this.testResultObj.testRecord.vehicleType === 'hgv') &&\n      this.testResultObj.testType.testResult === 'pass'\n    );\n\n    initAll();\n    this.switchState.emit(VIEW_STATE.VIEW_ONLY);\n    this.testResultParentForm = new FormGroup({ testType: new FormGroup({}) });\n  }\n\n  switchCurrentState(state: string) {\n    if (state === 'edit') {\n      this.switchState.emit(VIEW_STATE.EDIT);\n    } else {\n      const dialogRef = this.dialog.open(PreventLeavePageModalComponent, {\n        width: '45vw'\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result) {\n          this.switchState.emit(VIEW_STATE.VIEW_ONLY);\n          this.testResultObj = JSON.parse(JSON.stringify(this.testResultObj));\n          this.testResultParentForm = new FormGroup({ testType: new FormGroup({}) });\n        } else {\n          this.switchState.emit(VIEW_STATE.EDIT);\n        }\n      });\n    }\n  }\n\n  onSaveTestResult(testResultParentForm) {\n    const testResultUpdated: TestResultModel = this.testRecordMapper.mapFormValues(\n      JSON.parse(JSON.stringify(this.testResultParentForm.getRawValue())),\n      JSON.parse(JSON.stringify(this.testResultObj))\n    );\n\n    const dialogRef = this.dialog.open(DialogBoxComponent, {\n      width: '45vw',\n      data: { context: 'Enter reason for changing test record', actionName: 'Save test record' }\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.isSave) {\n        testResultUpdated.reasonForCreation = result.data;\n        this.submitTest.emit(testResultUpdated);\n      }\n    });\n  }\n\n  downloadCertificate() {\n    const fileName = `${this.testResultObj.testType.testNumber}_${this.testResultObj.testRecord.vin}.pdf`;\n    this.downloadCert.emit(fileName);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-width-container\">\n  <a class=\"govuk-back-link\" id=\"test-back-button\" vtmBackButton>Back</a>\n\n  <main class=\"govuk-main-wrapper\">\n    <div class=\"govuk-grid-row\">\n      <div class=\"govuk-grid-column-full\">\n        <h1 class=\"govuk-heading-xl\" id=\"test-heading\">Test record</h1>\n      </div>\n    </div>\n\n    <div class=\"govuk-grid-row\">\n      <ng-container *ngIf=\"!editState\">\n        <div class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0\">\n          <button\n            id=\"test-change-test-record\"\n            class=\"govuk-button govuk-button--secondary govuk-!-padding-left-3 govuk-!-padding-right-3\"\n            data-module=\"govuk-button\"\n            (click)=\"switchCurrentState('edit')\"\n          >\n            Change test record\n          </button>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"editState\">\n        <div class=\"govuk-grid-column-one-quarter govuk-!-margin-right-0 govuk-!-padding-right-0\">\n          <button\n            id=\"test-save-test-record\"\n            class=\"govuk-button govuk-!-padding-left-3 govuk-!-padding-right-3\"\n            data-module=\"govuk-button\"\n            (click)=\"onSaveTestResult(testResultParentForm)\"\n          >\n            Save test record\n          </button>\n        </div>\n      </ng-container>\n      <div\n        *ngIf=\"editState\"\n        class=\"govuk-grid-column-one-quarter govuk-!-margin-top-1 govuk-!-margin-left-0 govuk-!-padding-left-0\"\n      >\n        <a\n          id=\"test-cancel-edit\"\n          class=\"govuk-link govuk-link--no-visited-state govuk-!-margin-left-2 govuk-!-font-size-19\"\n          (click)=\"switchCurrentState('view')\"\n          href=\"javascript:void(0)\"\n          >Cancel</a\n        >\n      </div>\n      <div\n        *ngIf=\"!editState\"\n        class=\"govuk-grid-column-one-quarter govuk-!-margin-left-0 govuk-!-padding-left-0\"\n      >\n        <button\n          id=\"test-view-certificate\"\n          class=\"govuk-button govuk-button--secondary govuk-!-padding-left-3 govuk-!-padding-right-3\"\n          data-module=\"govuk-button\"\n          (click)=\"downloadCertificate()\"\n        >\n          View certificate\n        </button>\n      </div>\n    </div>\n    <form\n      [formGroup]=\"testResultParentForm\"\n      (ngSubmit)=\"onSaveTestResult(testResultParentForm)\"\n      vtmFormConnector=\"testResultParentForm\"\n    >\n      <div class=\"govuk-grid-row\">\n        <div class=\"govuk-grid-column-full\">\n          <vtm-accordion>\n            <vtm-accordion-item [title]=\"'Vehicle'\">\n              <vtm-vehicle\n                [testRecord]=\"testResultObj.testRecord\"\n                [preparers]=\"preparers\"\n                [editState]=\"editState\"\n              ></vtm-vehicle>\n            </vtm-accordion-item>\n            <vtm-accordion-item [title]=\"'Test'\">\n              <vtm-test-section\n                [testType]=\"testResultObj.testType\"\n                [testRecord]=\"testResultObj.testRecord\"\n                [testTypesApplicable]=\"testTypesApplicable\"\n                [editState]=\"editState\"\n              ></vtm-test-section>\n            </vtm-accordion-item>\n            <span [hidden]=\"hasDefectsApplicable\">\n              <vtm-accordion-item [title]=\"'Defects'\">\n                <vtm-defects\n                  [testType]=\"testResultObj.testType\"\n                  [testRecord]=\"testResultObj.testRecord\"\n                  [testTypesApplicable]=\"testTypesApplicable\"\n                ></vtm-defects>\n              </vtm-accordion-item>\n            </span>\n            <span [hidden]=\"hasSeatBeltApplicable\">\n              <vtm-accordion-item [title]=\"'Seatbelt installation check'\">\n                <vtm-seatbelt-installation-check\n                  [testType]=\"testResultObj.testType\"\n                  [editState]=\"editState\"\n                  [hasSeatBeltApplicable]=\"hasSeatBeltApplicable\"\n                ></vtm-seatbelt-installation-check>\n              </vtm-accordion-item>\n            </span>\n            <span [hidden]=\"hasEmissionApplicable\">\n              <vtm-accordion-item [title]=\"'Emission details'\">\n                <vtm-emission-details\n                  [testRecord]=\"testResultObj.testRecord\"\n                  [testType]=\"testResultObj.testType\"\n                  [editState]=\"editState\"\n                  [hasEmissionApplicable]=\"hasEmissionApplicable\"\n                ></vtm-emission-details>\n              </vtm-accordion-item>\n            </span>\n            <vtm-accordion-item [title]=\"'Visit'\">\n              <vtm-visit\n                [testRecord]=\"testResultObj.testRecord\"\n                [editState]=\"editState\"\n                [testStations]=\"testStations\"\n              ></vtm-visit>\n            </vtm-accordion-item>\n            <vtm-accordion-item [title]=\"'Notes'\">\n              <vtm-notes [testType]=\"testResultObj.testType\" [editState]=\"editState\"></vtm-notes>\n            </vtm-accordion-item>\n            <span [hidden]=\"editState\">\n              <vtm-accordion-item [title]=\"'Test record history'\">\n                <vtm-test-history\n                  [testRecord]=\"testResultObj.testRecord\"\n                  [editState]=\"editState\"\n                ></vtm-test-history>\n              </vtm-accordion-item>\n            </span>\n          </vtm-accordion>\n        </div>\n      </div>\n    </form>\n  </main>\n</div>\n"
        },
        {
            "name": "TestRecordContainer",
            "id": "component-TestRecordContainer-40a5b6782e92c5ca97ecec3ee3faa970f4e8153e28726553dcf2871ada6df4816546980a262b17310d1308632fccc8f2315e28c2937bfad8322b86166026c47c",
            "file": "archive/src/app/test-record/test-record.container.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-record-container",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"testRecord$ | async as testResultObj\">\n  <vtm-test-record\n    [testResultObj]=\"testResultObj\"\n    [preparers]=\"preparers$ | async\"\n    [editState]=\"editState$ | async\"\n    [testStations]=\"testStations$ | async\"\n    [testTypesApplicable]=\"this.testTypesApplicable\"\n    (submitTest)=\"onTestSubmit($event)\"\n    (switchState)=\"currentStateHandler($event)\"\n    (downloadCert)=\"downloadCertificate($event)\"\n  >\n  </vtm-test-record>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "editState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<VIEW_STATE>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isFormDirty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "preparers$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Preparer[]>",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "testRecord$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TestRecordTestType>",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "testStations$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TestStation[]>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "testTypeNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "testTypesApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TestTypesApplicable",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "currentStateHandler",
                    "args": [
                        {
                            "name": "state",
                            "type": "VIEW_STATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "VIEW_STATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadCertificate",
                    "args": [
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTestSubmit",
                    "args": [
                        {
                            "name": "testResultUpdated",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testResultUpdated",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '@app/store/state/app.state';\nimport {\n  getTestViewState,\n  selectTestTypeById\n} from '@app/store/selectors/VehicleTestResultModel.selectors';\nimport { ActivatedRoute } from '@angular/router';\nimport { TestRecordMapper, TestTypesApplicable } from '@app/test-record/test-record.mapper';\nimport { Preparer } from '@app/models/preparer';\nimport { TestRecordTestType } from '@app/models/test-record-test-type';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport {\n  SetTestViewState,\n  UpdateTestResult,\n  DownloadCertificate\n} from '@app/store/actions/VehicleTestResultModel.actions';\nimport { TestStation } from '@app/models/test-station';\nimport { getPreparers, getTestStations } from '@app/store/selectors/ReferenceData.selectors';\nimport { TestResultTestTypeNumber } from '@app/models/test-result-test-type-number';\n\n@Component({\n  selector: 'vtm-test-record-container',\n  template: `\n    <ng-container *ngIf=\"testRecord$ | async as testResultObj\">\n      <vtm-test-record\n        [testResultObj]=\"testResultObj\"\n        [preparers]=\"preparers$ | async\"\n        [editState]=\"editState$ | async\"\n        [testStations]=\"testStations$ | async\"\n        [testTypesApplicable]=\"this.testTypesApplicable\"\n        (submitTest)=\"onTestSubmit($event)\"\n        (switchState)=\"currentStateHandler($event)\"\n        (downloadCert)=\"downloadCertificate($event)\"\n      >\n      </vtm-test-record>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestRecordContainer implements OnInit {\n  testRecord$: Observable<TestRecordTestType>;\n  preparers$: Observable<Preparer[]>;\n  editState$: Observable<VIEW_STATE>;\n  testStations$: Observable<TestStation[]>;\n  testTypesApplicable: TestTypesApplicable;\n  isFormDirty: boolean;\n  testTypeNumber: string;\n\n  constructor(\n    private store: Store<IAppState>,\n    private route: ActivatedRoute,\n    private testRecordMapper: TestRecordMapper\n  ) {}\n\n  ngOnInit(): void {\n    this.testTypesApplicable = {\n      seatBeltApplicable: this.testRecordMapper.getTestTypeApplicable('seatBeltApplicable'),\n      defectsApplicable: this.testRecordMapper.getTestTypeApplicable('defectsApplicable'),\n      emissionDetailsApplicable: this.testRecordMapper.getTestTypeApplicable(\n        'emissionDetailsApplicable'\n      ),\n      anniversaryDateApplicable: this.testRecordMapper.getTestTypeApplicable(\n        'anniversaryDateApplicable'\n      ),\n      expiryDateApplicable: this.testRecordMapper.getTestTypeApplicable('expiryDateApplicable'),\n      certificateApplicable: this.testRecordMapper.getTestTypeApplicable('certificateApplicable'),\n      specialistTestApplicable: this.testRecordMapper.getTestTypeApplicable(\n        'specialistTestApplicable'\n      ),\n      specialistCertificateApplicable: this.testRecordMapper.getTestTypeApplicable(\n        'specialistCertificateApplicable'\n      ),\n      specialistCOIFApplicable: this.testRecordMapper.getTestTypeApplicable(\n        'specialistCOIFApplicable'\n      )\n    };\n\n    this.route.paramMap.subscribe((params) => {\n      this.testTypeNumber = params.get('id');\n      this.testRecord$ = this.store.select(selectTestTypeById(this.testTypeNumber));\n    });\n    this.preparers$ = this.store.select(getPreparers);\n    this.editState$ = this.store.select(getTestViewState);\n    this.testStations$ = this.store.select(getTestStations);\n  }\n\n  onTestSubmit(testResultUpdated: TestResultModel) {\n    const testResultTestTypeNumber: TestResultTestTypeNumber = {\n      testResultUpdated: testResultUpdated,\n      testTypeNumber: this.testTypeNumber,\n      testResultsUpdated: {} as TestResultModel[]\n    };\n\n    this.store.dispatch(new UpdateTestResult(testResultTestTypeNumber));\n  }\n\n  currentStateHandler(state: VIEW_STATE) {\n    this.store.dispatch(new SetTestViewState(state));\n  }\n\n  downloadCertificate(fileName: string) {\n    this.store.dispatch(new DownloadCertificate(fileName));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<IAppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TestSectionComponent",
            "id": "component-TestSectionComponent-893012ead02ebc771f26baef855c3ac4f02a0efd924fa0c2ec8b140fd45f730e480a87e1bafae68a84e16870c4f0fda8e650824211fcc26c990e5f7a88d2ed68",
            "file": "archive/src/app/test-record/test-section/test-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-section",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TestType",
                    "decorators": []
                },
                {
                    "name": "testTypesApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TestTypesApplicable",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasCertificateNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { TestTypesApplicable } from '@app/test-record/test-record.mapper';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-test-section',\n  templateUrl: './test-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestSectionComponent implements OnInit {\n  @Input() testType: TestType;\n  @Input() testRecord: TestResultModel;\n  @Input() testTypesApplicable: TestTypesApplicable;\n  @Input() editState: VIEW_STATE;\n\n  hasCertificateNumber: boolean;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.hasCertificateNumber =\n      this.testTypesApplicable.certificateApplicable[this.testType.testTypeId] ||\n      (this.testTypesApplicable.specialistCertificateApplicable[this.testType.testTypeId] &&\n        this.testType.testResult === 'pass');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test type\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testTypeName\">\n      {{ testType.testTypeName | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test code\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testCode\">\n      {{ testType.testCode | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Result\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testResult\">\n      {{ testType.testResult | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Reason for abandoning\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-reasonForAbandoning\">\n      {{ testType.reasonForAbandoning | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Additional details for abandoning\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-additionalCommentsForAbandon\">\n      {{ testType.additionalCommentsForAbandon | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <ng-container *ngIf=\"testTypesApplicable\">\n    <div *ngIf=\"hasCertificateNumber\" class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Certificate number\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-certificateNumber\">\n        {{ testType.certificateNumber | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"testTypesApplicable\">\n    <div\n      *ngIf=\"\n        testTypesApplicable.specialistCOIFApplicable[testType.testTypeId] &&\n        testType.testResult === 'pass'\n      \"\n      class=\"govuk-summary-list__row\"\n    >\n      <dt class=\"govuk-summary-list__key\">\n        Certificate number (COIF)\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-certificateNumberCOIF\">\n        {{ testType.secondaryCertificateNumber | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n  </ng-container>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test number\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testNumber\">\n      {{ testType.testNumber | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <ng-container *ngIf=\"testTypesApplicable\">\n    <div\n      *ngIf=\"testTypesApplicable.expiryDateApplicable[testType.testTypeId]\"\n      class=\"govuk-summary-list__row\"\n    >\n      <dt class=\"govuk-summary-list__key\">\n        Expiry date\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-testExpiryDate\">\n        <span *ngIf=\"testType.testExpiryDate; else hyphen\">\n          {{ testType.testExpiryDate | date: 'dd/MM/yyyy':'UTC' }}\n        </span>\n      </dd>\n    </div>\n    <div\n      *ngIf=\"testTypesApplicable.anniversaryDateApplicable[testType.testTypeId]\"\n      class=\"govuk-summary-list__row\"\n    >\n      <dt class=\"govuk-summary-list__key\">\n        Anniversary date\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-testAnniversaryDate\">\n        <span *ngIf=\"testType.testAnniversaryDate; else hyphen\">\n          {{ testType.testAnniversaryDate | date: 'dd/MM/yyyy':'UTC' }}\n        </span>\n      </dd>\n    </div>\n  </ng-container>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test date\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testEndTimestamp\">\n      <span *ngIf=\"testType.testTypeEndTimestamp; else hyphen\">\n        {{ testType.testTypeEndTimestamp | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Start time\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testTypeStartTimestamp\">\n      <span *ngIf=\"testType.testTypeStartTimestamp; else hyphen\">\n        {{ testType.testTypeStartTimestamp | date: 'shortTime':'UTC' }}\n      </span>\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt\n      class=\"govuk-summary-list__key\"\n      [class.border--bottom-none]=\"\n        !testTypesApplicable.defectsApplicable[testType.testTypeId] &&\n        !testTypesApplicable.specialistTestApplicable[testType.testTypeId]\n      \"\n    >\n      End time\n    </dt>\n    <dd\n      class=\"govuk-summary-list__value\"\n      [class.border--bottom-none]=\"\n        !testTypesApplicable.defectsApplicable[testType.testTypeId] &&\n        !testTypesApplicable.specialistTestApplicable[testType.testTypeId]\n      \"\n      id=\"test-testTypeEndTimestamp\"\n    >\n      <span *ngIf=\"testType.testTypeEndTimestamp; else hyphen\">\n        {{ testType.testTypeEndTimestamp | date: 'shortTime':'UTC' }}\n      </span>\n    </dd>\n  </div>\n  <ng-container *ngIf=\"testTypesApplicable\">\n    <div\n      *ngIf=\"\n        testTypesApplicable.defectsApplicable[testType.testTypeId] ||\n        testTypesApplicable.specialistTestApplicable[testType.testTypeId]\n      \"\n      class=\"govuk-summary-list__row\"\n    >\n      <dt class=\"govuk-summary-list__key border--bottom-none\">\n        Prohibition issued\n      </dt>\n      <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-prohibitionIssued\">\n        {{ testType.prohibitionIssued | DefaultNullOrEmpty }}\n      </dd>\n    </div>\n  </ng-container>\n</dl>\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n\n<ng-container *ngIf=\"editState\">\n  <vtm-test-section-edit\n    [testRecord]=\"testRecord\"\n    [testType]=\"testType\"\n    [testTypesApplicable]=\"testTypesApplicable\"\n  ></vtm-test-section-edit>\n</ng-container>\n"
        },
        {
            "name": "TestSectionEditComponent",
            "id": "component-TestSectionEditComponent-9cf01517afbfc463c4f50b1be3c9b2a542e6500b2c8cb310bb0f5e78ba7b1e59a4f99dba170ae03f5c3bf850fc31e148cc7acd613a59b97e9040753b79854adf",
            "file": "archive/src/app/test-record/test-section/edit/test-section-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-test-section-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-section-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "TestType",
                    "decorators": []
                },
                {
                    "name": "testTypesApplicable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "TestTypesApplicable",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isAbandoned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "prohibitionOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "prohibitionOptionSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "reasonsForAbandoning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "reasonsForAbandoningOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "resultOptions",
                    "defaultValue": "Object.values(RESULT)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "testResultSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "testTypeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "mapReasonsToFormGroup",
                    "args": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "SelectOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeTestType",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestType } from '@app/models/test.type';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogBoxConfirmationComponent } from '@app/shared/dialog-box-confirmation/dialog-box-confirmation.component';\nimport { Router } from '@angular/router';\nimport { RESULT } from '@app/test-record/test-record.enums';\nimport {\n  ControlContainer,\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  Validators\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { SelectOption } from '@app/models/select-option';\nimport { TestRecordMapper, TestTypesApplicable } from '@app/test-record/test-record.mapper';\nimport { FORM_UTILS } from '@app/utils';\n\n@Component({\n  selector: 'vtm-test-section-edit',\n  templateUrl: './test-section-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class TestSectionEditComponent implements OnInit {\n  @Input() testType: TestType;\n  @Input() testRecord: TestResultModel;\n  @Input() testTypesApplicable: TestTypesApplicable;\n  resultOptions: string[] = Object.values(RESULT);\n  testResultChildForm: FormGroupDirective;\n  testTypeGroup: FormGroup;\n  testResultSubscription: Subscription;\n  isAbandoned: boolean;\n  prohibitionOptionSelected: string;\n  prohibitionOptions: SelectOption[];\n  reasonsForAbandoning: string[];\n  reasonsForAbandoningOptions;\n\n  constructor(\n    private dialog: MatDialog,\n    private router: Router,\n    parentForm: FormGroupDirective,\n    private testRecordMapper: TestRecordMapper\n  ) {\n    this.testResultChildForm = parentForm;\n  }\n\n  get reasonForAbandoning() {\n    return this.testTypeGroup.get('reasonForAbandoning') as FormArray;\n  }\n\n  ngOnInit() {\n    this.isAbandoned = this.testType.testResult === 'abandoned';\n    this.prohibitionOptionSelected = this.testType.prohibitionIssued ? 'Yes' : 'No';\n    this.reasonsForAbandoning = this.testRecordMapper.getReasonsForAbandoning(\n      this.testRecord.vehicleType,\n      this.testType.testTypeId\n    );\n\n    this.prohibitionOptions = new DisplayOptionsPipe().transform(\n      ['Yes', 'No'],\n      [this.prohibitionOptionSelected]\n    );\n    this.reasonsForAbandoningOptions = new DisplayOptionsPipe().transform(\n      this.reasonsForAbandoning,\n      [this.testType.reasonForAbandoning]\n    );\n\n    this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n    if (!this.testTypeGroup) {\n      this.testResultChildForm.form.addControl('testType', new FormGroup({}));\n      this.testTypeGroup = this.testResultChildForm.form.get('testType') as FormGroup;\n    }\n\n    if (!!this.testTypeGroup) {\n      FORM_UTILS.addControlsToFormGroup(this.testTypeGroup, [\n        {\n          name: 'testResult',\n          fieldState: { value: this.testType.testResult, validators: [Validators.required] }\n        },\n        {\n          name: 'additionalCommentsForAbandon',\n          fieldState: { value: this.testType.additionalCommentsForAbandon }\n        },\n        {\n          name: 'certificateNumber',\n          fieldState: {\n            value: this.testType.certificateNumber,\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'testExpiryDate',\n          fieldState: { value: this.testType.testExpiryDate, validators: [Validators.required] }\n        },\n        {\n          name: 'testAnniversaryDate',\n          fieldState: {\n            value: this.testType.testAnniversaryDate,\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'prohibitionIssued',\n          fieldState: {\n            value: this.testType.prohibitionIssued,\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'reasonForAbandoning',\n          fieldState: {\n            value: this.mapReasonsToFormGroup(this.reasonsForAbandoningOptions),\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'testTypeEndTimestampDate',\n          fieldState: {\n            value: this.testType.testTypeEndTimestamp,\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'testTypeEndTimestampTime',\n          fieldState: {\n            value: this.testType.testTypeEndTimestamp,\n            validators: [Validators.required]\n          }\n        },\n        {\n          name: 'testTypeStartTimestamp',\n          fieldState: {\n            value: this.testType.testTypeStartTimestamp,\n            validators: [Validators.required]\n          }\n        }\n      ]);\n\n      this.testResultSubscription = this.testTypeGroup\n        .get('testResult')\n        .valueChanges.subscribe((value) => {\n          this.isAbandoned = value === 'abandoned';\n        });\n    }\n  }\n\n  mapReasonsToFormGroup(options: SelectOption[]) {\n    return options.map((option) => {\n      return new FormControl(option.selected);\n    });\n  }\n\n  onChangeTestType() {\n    const dialogRef = this.dialog.open(DialogBoxConfirmationComponent, {\n      width: '45vw',\n      data: {\n        context:\n          '<h2 class=\"govuk-heading-l\">Change test type</h2>' +\n          '<p class=\"govuk-body\">If you change the test type, some of the current test details will be lost.</br>' +\n          'Print a version of the current test record or save the details to refer to when entering the details for the new test type.</p>',\n        actionName: 'Change test type'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.router.navigate(['/select-test-type', this.testType.testNumber]);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "reasonForAbandoning": {
                    "name": "reasonForAbandoning",
                    "getSignature": {
                        "name": "reasonForAbandoning",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            },
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test type\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testTypeName\">\n      {{ testType.testTypeName | DefaultNullOrEmpty | titlecase }}\n    </dd>\n    <dd class=\"govuk-summary-list__actions\">\n      <a\n        class=\"govuk-link govuk-!-font-size-19\"\n        (click)=\"onChangeTestType()\"\n        href=\"javascript:void(0)\"\n      >\n        <span>Change</span>\n      </a>\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test code\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testCode\">\n      {{ testType.testCode | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test number\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testNumber\">\n      {{ testType.testNumber | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<form formGroupName=\"testType\">\n  <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n    <div class=\"govuk-grid-column-full\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Result\n      </label>\n      <div class=\"govuk-radios\">\n        <div class=\"govuk-radios__item\" *ngFor=\"let res of resultOptions\">\n          <input\n            class=\"govuk-radios__input\"\n            id=\"{{ 'test-testResult-' + res }}\"\n            type=\"radio\"\n            formControlName=\"testResult\"\n            value=\"{{ res | lowercase }}\"\n            [checked]=\"\n              testType.testResult !== 'prs'\n                ? (testType.testResult | titlecase) === res\n                : (testType.testResult | uppercase) === res\n            \"\n          />\n          <label class=\"govuk-label govuk-radios__label\">\n            {{ res }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"isAbandoned\" class=\"govuk-grid-row govuk-!-margin-bottom-5\">\n    <div class=\"govuk-grid-column-full\">\n      <div class=\"govuk-inset-text govuk-!-margin-bottom-0 govuk-!-padding-bottom-0\">\n        <div class=\"govuk-grid-row\">\n          <div class=\"govuk-grid-column-full\">\n            <h4 class=\"govuk-heading-s\">Reason for abandoning</h4>\n\n            <div class=\"govuk-checkboxes\">\n              <div\n                *ngFor=\"let reason of reasonForAbandoning.controls; let i = index\"\n                class=\"govuk-checkboxes__item\"\n                formGroupName=\"reasonForAbandoning\"\n              >\n                <input\n                  class=\"govuk-checkboxes__input\"\n                  id=\"test-reason-{{ i }}\"\n                  type=\"checkbox\"\n                  [formControl]=\"reason\"\n                  [value]=\"this.reasonsForAbandoningOptions[i].selected\"\n                />\n                <label class=\"govuk-label govuk-checkboxes__label\">\n                  <span>{{ this.reasonsForAbandoningOptions[i].name }}</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"govuk-grid-row govuk-!-margin-top-7\">\n          <div class=\"govuk-grid-column-two-thirds\">\n            <div class=\"govuk-form-group\">\n              <label\n                class=\"govuk-label govuk-!-font-weight-bold\"\n                for=\"additionalCommentsForAbandon\"\n              >\n                Additional details for abandoning\n              </label>\n              <span id=\"additionalCommentsForAbandon\" class=\"govuk-hint\">\n                Notes about the reason for abandoning should be displayed here...\n              </span>\n              <textarea\n                class=\"govuk-textarea\"\n                id=\"more-detail\"\n                formControlName=\"additionalCommentsForAbandon\"\n                rows=\"5\"\n                aria-describedby=\"additionalCommentsForAbandon\"\n                >{{ testType.additionalCommentsForAbandon }}</textarea\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"testTypesApplicable.certificateApplicable[testType.testTypeId]\"\n    class=\"govuk-grid-row govuk-!-margin-bottom-7\"\n  >\n    <div class=\"govuk-grid-column-one-half\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Certificate number\n      </label>\n      <input\n        class=\"govuk-input\"\n        id=\"test-certificateNumber\"\n        formControlName=\"certificateNumber\"\n        type=\"text\"\n      />\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"testTypesApplicable.expiryDateApplicable[testType.testTypeId]\"\n    class=\"govuk-grid-row govuk-!-margin-bottom-3\"\n  >\n    <div class=\"govuk-grid-column-three-quarters\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Expiry Date\n      </label>\n      <vtm-date-input\n        id=\"test-testExpiryDate\"\n        ariaDescribedBy=\"testExpiryDate\"\n        formControlName=\"testExpiryDate\"\n        ngDefaultControl\n      >\n      </vtm-date-input>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"testTypesApplicable.anniversaryDateApplicable[testType.testTypeId]\"\n    class=\"govuk-grid-row govuk-!-margin-bottom-3\"\n  >\n    <div class=\"govuk-grid-column-three-quarters\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Anniversary Date\n      </label>\n      <vtm-date-input\n        id=\"test-testAnniversaryDate\"\n        ariaDescribedBy=\"testAnniversaryDate\"\n        formControlName=\"testAnniversaryDate\"\n        ngDefaultControl\n      >\n      </vtm-date-input>\n    </div>\n  </div>\n\n  <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n    <div class=\"govuk-grid-column-three-quarters\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Test date\n      </label>\n      <vtm-date-input\n        id=\"test-testTypeEndTimestampDate\"\n        ariaDescribedBy=\"testTypeEndTimestampDate\"\n        formControlName=\"testTypeEndTimestampDate\"\n        ngDefaultControl\n      >\n      </vtm-date-input>\n    </div>\n  </div>\n\n  <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n    <div class=\"govuk-grid-column-three-quarters\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Start time\n      </label>\n      <vtm-time-input\n        id=\"test-testTypeStartTimestamp\"\n        ariaDescribedBy=\"testTypeStartTimestamp\"\n        formControlName=\"testTypeStartTimestamp\"\n        ngDefaultControl\n      >\n      </vtm-time-input>\n    </div>\n  </div>\n\n  <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n    <div class=\"govuk-grid-column-three-quarters\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        End time\n      </label>\n      <vtm-time-input\n        id=\"test-testTypeEndTimestampTime\"\n        ariaDescribedBy=\"testTypeEndTimestampTime\"\n        formControlName=\"testTypeEndTimestampTime\"\n        ngDefaultControl\n      >\n      </vtm-time-input>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"testTypesApplicable.defectsApplicable[testType.testTypeId]\"\n    class=\"govuk-grid-row govuk-!-margin-bottom-3\"\n  >\n    <div class=\"govuk-grid-column-full\">\n      <label class=\"govuk-label govuk-!-font-weight-bold\">\n        Prohibition Issued\n      </label>\n      <div class=\"govuk-radios\">\n        <div class=\"govuk-radios__item\" *ngFor=\"let option of prohibitionOptions\">\n          <input\n            class=\"govuk-radios__input\"\n            id=\"test-prohibitionIssued-{{ option.id }}\"\n            formControlName=\"prohibitionIssued\"\n            type=\"radio\"\n            value=\"{{ option.selected }}\"\n            [checked]=\"option.selected\"\n          />\n          <label class=\"govuk-label govuk-radios__label\">\n            {{ option.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "TimeInputComponent",
            "id": "component-TimeInputComponent-df268d2fbcb113d4b48db9ee5c3680483ffcaac2f0c5efd46ef04c06c7cac2843f332f87b50bdf0b3a1a59b89c4160feff89a623a36f7dbe44ea516226c2e0cb",
            "file": "archive/src/app/shared/components/time-input/time-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TimeInputComponent), multi: true\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: FormFieldControl, useExisting: TimeInputComponent\n}",
                    "type": "component"
                }
            ],
            "selector": "vtm-time-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./time-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "aria-describedby",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "controlType",
                    "defaultValue": "'time'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "externalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.id'"
                        }
                    ]
                },
                {
                    "name": "internalId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "onchange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeInputs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "timeString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "timeString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  forwardRef,\n  HostBinding,\n  Injector,\n  Type,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport {\n  FormGroup,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  FormControl,\n  NgControl\n} from '@angular/forms';\nimport { map, tap, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { FormFieldControl } from '../control';\n\nlet index = 0;\n\n@Component({\n  selector: 'vtm-time-input',\n  templateUrl: './time-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TimeInputComponent),\n      multi: true\n    },\n    {\n      provide: FormFieldControl,\n      useExisting: TimeInputComponent\n    }\n  ]\n})\nexport class TimeInputComponent\n  implements ControlValueAccessor, FormFieldControl, OnInit, OnDestroy {\n  timeInputs: FormGroup;\n  controlType = 'time';\n  multi = true;\n\n  @HostBinding('attr.id')\n  externalId = '';\n\n  @Input('aria-describedby') ariaDescribedBy: string | null;\n  @Input()\n  set id(value: string) {\n    this.internalId = value;\n    this.externalId = null;\n  }\n  get id() {\n    return `${this.internalId}-${index}`;\n  }\n  private internalId = '';\n\n  @Input('value') _value = '';\n  set value(val) {\n    this._value = val;\n    this.onchange(val);\n  }\n  get value() {\n    return this._value;\n  }\n\n  private onDestroy$: Subject<void> = new Subject();\n  private onchange: any = () => {};\n\n  constructor(private injector: Injector) {\n    index += 1;\n  }\n\n  ngOnInit(): void {\n    this.timeInputs = new FormGroup({\n      hour: new FormControl(''),\n      minute: new FormControl('')\n    });\n    this.timeInputs.valueChanges\n      .pipe(\n        map(({ hour, minute }) => {\n          const resultDate = new Date();\n\n          resultDate.setUTCHours(hour);\n          resultDate.setUTCMinutes(minute);\n\n          if (!!resultDate.toJSON()) {\n            return resultDate.toISOString();\n          }\n\n          return null;\n        }),\n        tap((result) => {\n          this.value = result;\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  get ngControl(): NgControl {\n    return this.injector.get<NgControl>(NgControl as Type<NgControl>);\n  }\n\n  writeValue(timeString: string): void {\n    let hour = '';\n    let minute = '';\n    const getDate = new Date(timeString);\n\n    [hour, minute] = !!getDate.toJSON()\n      ? [getDate.getUTCHours().toString(), getDate.getUTCMinutes().toString()]\n      : [hour, minute];\n\n    this.timeInputs.patchValue({ hour, minute });\n  }\n\n  registerOnChange(fn: any): void {\n    this.onchange = fn;\n  }\n\n  registerOnTouched(_: any): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "FormFieldControl",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 60,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                },
                "ngControl": {
                    "name": "ngControl",
                    "getSignature": {
                        "name": "ngControl",
                        "type": "",
                        "returnType": "NgControl",
                        "line": 107
                    }
                }
            },
            "templateData": "<ng-container [formGroup]=\"timeInputs\">\n  <div class=\"govuk-date-input\">\n    <div class=\"govuk-date-input__item\">\n      <div class=\"govuk-form-group\">\n        <label class=\"govuk-label govuk-date-input__label\" for=\"{{ id }}-hour\">\n          Hour\n        </label>\n        <input\n          class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n          [class.govuk-input--error]=\"false\"\n          formControlName=\"hour\"\n          id=\"{{ id }}-hour\"\n          name=\"hour\"\n          type=\"number\"\n          [attr.aria-describedby]=\"ariaDescribedBy\"\n          pattern=\"[0-9]*\"\n          maxlength=\"2\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n\n    <div class=\"govuk-date-input__item\">\n      <div class=\"govuk-form-group\">\n        <label class=\"govuk-label govuk-date-input__label\" for=\"{{ id }}-minute\">\n          Minute\n        </label>\n        <input\n          class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n          [class.govuk-input--error]=\"false\"\n          formControlName=\"minute\"\n          id=\"{{ id }}-minute\"\n          name=\"minute\"\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          maxlength=\"2\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-cb690a2a029ab8d5423fbe2d8bcb64ae9483de4a938871b0070b0c1a3d37483eed1d710acf659d5fbea2657769ccc357bae5311ba8f853d5680e2e94add79b79",
            "file": "archive/src/app/shared/components/tree/tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tree-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "treeData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TreeData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "sendTreeData",
                    "defaultValue": "new EventEmitter<KeyValue<string, string>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValue<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTreeFlatDataSource<TreeNode | TreeNode>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "levels",
                    "defaultValue": "new Map<TreeNode, number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "treeControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlatTreeControl<TreeNode>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "treeFlattener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTreeFlattener<TreeNode | TreeNode>",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "convertToTreeNodes",
                    "args": [
                        {
                            "name": "treeData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode[]",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "treeData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getChildren",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "BehaviorSubject<{}>",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLevel",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasChildren",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isExpandable",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapTreeDataToTreeNodes",
                    "args": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setActiveNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sortTreeNodeByChildren",
                    "args": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "1 | -1 | 0",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transformer",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TreeNode",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\nimport { KeyValue } from '@angular/common';\nimport { TreeData } from '@app/models/tree-data';\n\nexport class TreeNode {\n  children: BehaviorSubject<TreeNode[]>;\n  isActive?: boolean;\n  constructor(public nodeName: string, public id: string, children?: TreeNode[]) {\n    this.children = new BehaviorSubject(children === undefined ? [] : children);\n  }\n}\n\n@Component({\n  selector: 'vtm-tree-component',\n  templateUrl: './tree.component.html'\n})\nexport class TreeComponent implements OnInit {\n  @Input() treeData: TreeData[];\n  @Output() sendTreeData = new EventEmitter<KeyValue<string, string>>();\n\n  levels = new Map<TreeNode, number>();\n\n  activeNode: KeyValue<string, string>;\n\n  treeControl: FlatTreeControl<TreeNode>;\n  treeFlattener: MatTreeFlattener<TreeNode, TreeNode>;\n  dataSource: MatTreeFlatDataSource<TreeNode, TreeNode>;\n\n  constructor() {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer.bind(this),\n      this.getLevel.bind(this),\n      this.isExpandable.bind(this),\n      this.getChildren.bind(this)\n    );\n\n    this.treeControl = new FlatTreeControl<TreeNode>(\n      this.getLevel.bind(this),\n      this.isExpandable.bind(this)\n    );\n\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.treeData ? this.convertToTreeNodes(this.treeData) : [];\n  }\n\n  convertToTreeNodes(treeData): TreeNode[] {\n    return treeData\n      .map(this.mapTreeDataToTreeNodes.bind(this))\n      .sort(this.sortTreeNodeByChildren.bind(this));\n  }\n\n  private mapTreeDataToTreeNodes(obj) {\n    const hasChildren = obj.children && obj.children.length;\n\n    if (hasChildren) {\n      return new TreeNode(obj.nodeName, obj.id, this.convertToTreeNodes(obj.children));\n    } else {\n      return new TreeNode(obj.nodeName, obj.id);\n    }\n  }\n\n  sortTreeNodeByChildren(a, b) {\n    if (a.children && a.children.value < b.children && b.children.value) {\n      return -1;\n    }\n    if (a.children && a.children.value > b.children && b.children.value) {\n      return 1;\n    }\n    return 0;\n  }\n\n  getLevel(node: TreeNode): number {\n    return this.levels.get(node) || 0;\n  }\n\n  isExpandable(node: TreeNode): boolean {\n    return node.children.value.length > 0;\n  }\n\n  getChildren(node: TreeNode) {\n    return node.children;\n  }\n\n  transformer(node: TreeNode, level: number) {\n    this.levels.set(node, level);\n    return node;\n  }\n\n  hasChildren(index: number, node: TreeNode): boolean {\n    return node.children.value.length > 0;\n  }\n\n  setActiveNode(node) {\n    this.treeControl.dataNodes.forEach((dnode) => (dnode.isActive = false));\n    node.isActive = !node.isActive;\n\n    this.activeNode = { key: node.id, value: node.nodeName };\n\n    this.sendTreeData.emit(this.activeNode);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 30
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"govuk-!-margin-bottom-6\">\n  <!-- nodes without children -->\n  <mat-tree-node\n    class=\"tree-parent-node\"\n    [ngClass]=\"{ 'is-active': node.isActive }\"\n    *matTreeNodeDef=\"let node\"\n    matTreeNodeToggle\n    matTreeNodePadding\n  >\n    <button\n      class=\"govuk-!-margin-left-6\"\n      id=\"test-tree-button-parent-{{ node.id }}\"\n      (click)=\"setActiveNode(node)\"\n      mat-icon-button\n    >\n      {{ node.nodeName }}\n    </button>\n  </mat-tree-node>\n\n  <!-- nodes that have children -->\n  <mat-tree-node\n    class=\"tree-child-node\"\n    [ngClass]=\"{ 'is-active': node.isActive }\"\n    *matTreeNodeDef=\"let node; when: hasChildren\"\n    matTreeNodePadding\n  >\n    <button\n      id=\"test-tree-button-child-{{ node.id }}\"\n      (click)=\"setActiveNode(node)\"\n      mat-icon-button\n      matTreeNodeToggle\n      [attr.aria-label]=\"'toggle ' + node.nodeName\"\n    >\n      <i class=\"material-icons\">{{\n        treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'\n      }}</i>\n      {{ node.nodeName }}\n    </button>\n  </mat-tree-node>\n</mat-tree>\n"
        },
        {
            "name": "TypeApprovalComponent",
            "id": "component-TypeApprovalComponent-77b83236931c224eb44433bac17db1abdbd1d0598f1abefe3a73eac220c5acd059e6946e6c23832c58e3cea510268f347d2c0a6dbeb1b78d66075b0ce1415546",
            "file": "archive/src/app/technical-record/vehicle-summary/edit/type-approval/type-approval.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-type-approval",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./type-approval.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "approvalTypeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ControlContainer, FormGroupDirective, FormGroup, FormBuilder } from '@angular/forms';\n\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { SelectOption } from '@app/models/select-option';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { APPROVAL_TYPE } from '@app/technical-record/technical-record.constants';\n\n@Component({\n  selector: 'vtm-type-approval',\n  templateUrl: './type-approval.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class TypeApprovalComponent implements OnInit {\n  @Input() techRecord: TechRecord;\n\n  techRecordFg: FormGroup;\n  approvalTypeOptions: SelectOption[];\n\n  constructor(private parent: FormGroupDirective, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.approvalTypeOptions = new DisplayOptionsPipe().transform(APPROVAL_TYPE);\n\n    this.techRecordFg = this.parent.form as FormGroup;\n    this.techRecordFg.addControl('approvalType', this.fb.control(this.techRecord.approvalType));\n    this.techRecordFg.addControl(\n      'approvalTypeNumber',\n      this.fb.control(this.techRecord.approvalTypeNumber)\n    );\n    this.techRecordFg.addControl('ntaNumber', this.fb.control(this.techRecord.ntaNumber));\n    this.techRecordFg.addControl('variantNumber', this.fb.control(this.techRecord.variantNumber));\n    this.techRecordFg.addControl(\n      'variantVersionNumber',\n      this.fb.control(this.techRecord.variantVersionNumber)\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container>\n  <div class=\"govuk-form-group\">\n    <fieldset class=\"govuk-fieldset\">\n      <h2 class=\"govuk-heading-m govuk-!-margin-bottom-2\">Type approval</h2>\n      <form [formGroup]=\"techRecordFg\">\n        <!-- Approval type -->\n        <div class=\"govuk-form-group\">\n          <label for=\"test-edit-approvalType\" class=\"govuk-label govuk-!-font-weight-bold\">\n            Approval type\n          </label>\n          <select id=\"test-edit-approvalType\" formControlName=\"approvalType\" class=\"govuk-select\">\n            <option *ngFor=\"let type of approvalTypeOptions\" [ngValue]=\"type.name\">\n              {{ type.name }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Approval type number -->\n        <div class=\"govuk-form-group\">\n          <label for=\"test-edit-approvalTypeNumber\" class=\"govuk-label govuk-!-font-weight-bold\">\n            Approval type number (optional)\n          </label>\n          <input\n            id=\"test-edit-approvalTypeNumber\"\n            type=\"text\"\n            name=\"approvalTypeNumber\"\n            maxlength=\"25\"\n            formControlName=\"approvalTypeNumber\"\n            class=\"govuk-input govuk-input govuk-input--width-20\"\n            vtmNullValue\n          />\n        </div>\n\n        <!-- National type approval -->\n        <div class=\"govuk-form-group\">\n          <label for=\"test-edit-ntaNumber\" class=\"govuk-label govuk-!-font-weight-bold\">\n            National type approval number (optional)\n          </label>\n          <input\n            id=\"test-edit-ntaNumber\"\n            type=\"text\"\n            name=\"ntaNumber\"\n            maxlength=\"40\"\n            formControlName=\"ntaNumber\"\n            class=\"govuk-input govuk-input govuk-input--width-20\"\n            vtmNullValue\n          />\n        </div>\n\n        <!-- Variant number -->\n        <div class=\"govuk-form-group\">\n          <label for=\"test-edit-variantNumber\" class=\"govuk-label govuk-!-font-weight-bold\">\n            Variant number (optional)\n          </label>\n          <input\n            id=\"test-edit-variantNumber\"\n            type=\"text\"\n            name=\"variantNumber\"\n            maxlength=\"25\"\n            formControlName=\"variantNumber\"\n            class=\"govuk-input govuk-input govuk-input--width-20\"\n            vtmNullValue\n          />\n        </div>\n\n        <!-- Variant version number -->\n        <div class=\"govuk-form-group\">\n          <label\n            for=\"test-edit-variantVersionNumber\"\n            class=\"govuk-label govuk-!-font-weight-bold\"\n          >\n            Variant version number (optional)\n          </label>\n          <input\n            id=\"test-edit-variantVersionNumber\"\n            type=\"text\"\n            name=\"variantVersionNumber\"\n            maxlength=\"35\"\n            formControlName=\"variantVersionNumber\"\n            class=\"govuk-input govuk-input govuk-input--width-20\"\n            vtmNullValue\n          />\n        </div>\n      </form>\n    </fieldset>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "TyresComponent",
            "id": "component-TyresComponent-0fbed14b444b5e19a9812fa5bd68ca38c512ea6d07513665a9251cef5f4229b14507ba29eb9c76c08914132fd2f67496fe0bd406ea52ec381ca0d2ed5ecc6985",
            "file": "archive/src/app/technical-record/tyres/tyres.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tyres",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tyres.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '../../models/tech-record.model';\n\n@Component({\n  selector: 'vtm-tyres',\n  templateUrl: './tyres.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TyresComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n  @Input() editState: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <table class=\"govuk-table table-details\">\n    <thead class=\"govuk-table__head\">\n      <tr\n        class=\"govuk-table__row\"\n        *ngIf=\"activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl'\"\n      >\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Tyre use code</th>\n        <td id=\"test-tyreUseCode\" class=\"govuk-table__cell\">\n          {{ activeRecord.tyreUseCode | DefaultNullOrEmpty }}\n        </td>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n      </tr>\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType === 'psv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Speed restriction</th>\n        <td id=\"test-speedRestriction\" class=\"govuk-table__cell\">\n          {{ activeRecord.speedRestriction | DefaultNullOrEmpty }}\n        </td>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n      </tr>\n    </thead>\n    <tbody class=\"govuk-table__body\">\n      <tr class=\"govuk-table__row\">\n        <th scope=\"col\" class=\"govuk-table__header\"></th>\n        <td scope=\"col\" class=\"govuk-table__header govuk-!-font-weight-bold\">Tyre code</td>\n        <td scope=\"col\" class=\"govuk-table__header govuk-!-font-weight-bold\">Tyre size</td>\n        <td scope=\"col\" class=\"govuk-table__header govuk-!-font-weight-bold\">Ply rating</td>\n        <td\n          scope=\"col\"\n          class=\"govuk-table__header govuk-!-font-weight-bold\"\n          *ngIf=\"activeRecord.vehicleType === 'psv'\"\n        >\n          Speed category symbol\n        </td>\n        <td scope=\"col\" class=\"govuk-table__header govuk-!-font-weight-bold\">Fitment code</td>\n        <td scope=\"col\" class=\"govuk-table__header govuk-!-font-weight-bold\">Load index</td>\n      </tr>\n      <tr class=\"govuk-table__row\" *ngFor=\"let axelNo of activeRecord.axles\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n          Axle {{ axelNo.axleNumber | DefaultNullOrEmpty }}\n        </th>\n        <td id=\"{{ 'test-tyreCode-' + axelNo.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axelNo.tyres.tyreCode | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-tyreSize-' + axelNo.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axelNo.tyres.tyreSize | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-plyRating-' + axelNo.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axelNo.tyres.plyRating | DefaultNullOrEmpty }}\n        </td>\n        <td\n          id=\"{{ 'test-speedCategorySymbol-' + axelNo.axleNumber }}\"\n          class=\"govuk-table__cell\"\n          *ngIf=\"activeRecord.vehicleType === 'psv'\"\n        >\n          {{ axelNo.tyres.speedCategorySymbol | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-fitmentCode-' + axelNo.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axelNo.tyres.fitmentCode | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-dataTrAxles-' + axelNo.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axelNo.tyres.dataTrAxles | DefaultNullOrEmpty }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n\n<!-- Edit Tyres -->\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-tyres-edit [techRecord]=\"activeRecord\"></vtm-tyres-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "TyresEditComponent",
            "id": "component-TyresEditComponent-9d68c7cdc5e6a7e571bd7ec4c5c8b98015d63ca4ed23148a8d4c53200759dac15ad140c8102e5e698f4afbd1bb41120e26354d7bc07b650d3ec1ff973e0c2299",
            "file": "archive/src/app/technical-record/tyres/edit/tyres-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-tyres-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tyres-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fitmentCodeOptions",
                    "defaultValue": "new DisplayOptionsPipe().transform(FITMENT_CODE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "numberOfAxles$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "addAxleTyresGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleArrayGroup",
                    "args": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleTyresGroup",
                    "args": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createAxleTyresGroupByNumberOfAxles",
                    "args": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAxleTyresGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormGroupDirective,\n  FormGroup,\n  FormBuilder,\n  FormArray\n} from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { TechRecord, Axle, Tyres } from '@app/models/tech-record.model';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { FITMENT_CODE } from '@app/technical-record/technical-record.constants';\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\n\n@Component({\n  selector: 'vtm-tyres-edit',\n  templateUrl: './tyres-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class TyresEditComponent implements OnInit {\n  @Input() techRecord: TechRecord;\n\n  techRecordFg: FormGroup;\n  fitmentCodeOptions = new DisplayOptionsPipe().transform(FITMENT_CODE);\n  numberOfAxles$: Observable<number>;\n  onDestroy$ = new Subject();\n\n  get axlesTyres() {\n    return this.techRecordFg.get('axlesTyres') as FormArray;\n  }\n\n  constructor(\n    private parent: FormGroupDirective,\n    private fb: FormBuilder,\n    private techRecHelper: TechRecordHelperService,\n    private detectChange: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.numberOfAxles$ = this.techRecHelper.getNumberOfAxles();\n\n    const { axles } = this.techRecord;\n    const techAxles = axles && axles.length ? axles : [];\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl('tyreUseCode', this.fb.control(this.techRecord.tyreUseCode));\n    this.techRecordFg.addControl('axlesTyres', this.buildAxleArrayGroup(techAxles));\n\n    this.handleFormChanges();\n  }\n\n  buildAxleArrayGroup(axles: Axle[]): FormArray {\n    return this.fb.array(axles.map(this.buildAxleTyresGroup.bind(this)));\n  }\n\n  buildAxleTyresGroup(axle: Axle): FormGroup {\n    const tyres: Tyres = axle.tyres ? axle.tyres : ({} as Tyres);\n\n    return this.fb.group({\n      axleNumber: this.fb.control(axle.axleNumber),\n      tyres: this.fb.group({\n        tyreCode: this.fb.control(tyres.tyreCode),\n        tyreSize: this.fb.control(tyres.tyreSize),\n        plyRating: this.fb.control(tyres.plyRating),\n        fitmentCode: this.fb.control(tyres.fitmentCode),\n        dataTrAxles: this.fb.control(tyres.dataTrAxles)\n      })\n    });\n  }\n\n  handleFormChanges() {\n    this.numberOfAxles$\n      .pipe(\n        tap((numAxles) => {\n          this.createAxleTyresGroupByNumberOfAxles(numAxles);\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  private createAxleTyresGroupByNumberOfAxles(numOfAxles: number): void {\n    const currentAxleTyresGroups = this.axlesTyres.controls.length;\n    const numOfIterations: number = currentAxleTyresGroups - numOfAxles;\n\n    numOfIterations < 0\n      ? this.addAxleTyresGroupByIterations(numOfIterations)\n      : this.removeAxleTyresGroupByIterations(numOfIterations);\n\n    this.axlesTyres.markAsDirty();\n  }\n\n  private addAxleTyresGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index < 0; index++) {\n      const axleTyresGroup = this.buildAxleTyresGroup({\n        axleNumber: this.axlesTyres.controls.length + 1\n      } as Axle);\n\n      this.axlesTyres.push(axleTyresGroup);\n    }\n  }\n\n  private removeAxleTyresGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index > 0; index--) {\n      this.axlesTyres.removeAt(--this.axlesTyres.controls.length);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "axlesTyres": {
                    "name": "axlesTyres",
                    "getSignature": {
                        "name": "axlesTyres",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div [formGroup]=\"techRecordFg\">\n          <!-- Tyre usecode -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-tyreUseCode\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Tyre use code (optional)\n            </label>\n            <input\n              id=\"test-edit-tyreUseCode\"\n              type=\"text\"\n              name=\"tyreUseCode\"\n              maxlength=\"2\"\n              formControlName=\"tyreUseCode\"\n              class=\"govuk-input govuk-input--width-2\"\n              vtmNullValue\n            />\n          </div>\n\n          <!-- Axle tyres -->\n          <ng-container *ngIf=\"axlesTyres.length\">\n            <div formArrayName=\"axlesTyres\">\n              <div\n                *ngFor=\"let axleTyre of axlesTyres.controls; let i = index\"\n                [formGroup]=\"axleTyre\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    tyreTemplate;\n                    context: {\n                      $implicit: {\n                        group: axleTyre.get('tyres'),\n                        labelHead: 'Axle ' + axleTyre.get('axleNumber').value,\n                        fields: {\n                          index: '-' + (i + 1),\n                          tyreCode: 'tyreCode',\n                          tyreSize: 'tyreSize',\n                          plyRating: 'plyRating',\n                          fitmentCode: 'fitmentCode',\n                          dataTrAxles: 'dataTrAxles'\n                        }\n                      }\n                    }\n                  \"\n                ></ng-container>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-template let-tyreTemplate #tyreTemplate>\n            <div class=\"govuk-form-group\" [formGroup]=\"tyreTemplate.group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                {{ tyreTemplate.labelHead }}\n              </label>\n              <div class=\"govuk-inset-text govuk-!-margin-top-3\">\n                <div class=\"govuk-!-margin-left-3\">\n                  <!-- Tyre code -->\n                  <div class=\"govuk-form-group\">\n                    <label\n                      for=\"test-edit-{{ tyreTemplate.fields.tyreCode }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                    >\n                      Tyre code\n                    </label>\n                    <input\n                      id=\"test-edit-{{ tyreTemplate.fields.tyreCode }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      type=\"number\"\n                      maxlength=\"5\"\n                      name=\"{{ tyreTemplate.fields.tyreCode }}\"\n                      class=\"govuk-input govuk-input--width-5\"\n                      formControlName=\"{{ tyreTemplate.fields.tyreCode }}\"\n                    />\n                  </div>\n\n                  <!-- Tyre size -->\n                  <div class=\"govuk-form-group\">\n                    <label\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                      for=\"test-edit-{{ tyreTemplate.fields.tyreSize }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                    >\n                      Tyre size\n                    </label>\n                    <input\n                      id=\"test-edit-{{ tyreTemplate.fields.tyreSize }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      type=\"text\"\n                      maxlength=\"10\"\n                      formControlName=\"{{ tyreTemplate.fields.tyreSize }}\"\n                      class=\"govuk-input govuk-input--width-10\"\n                    />\n                  </div>\n\n                  <!-- Ply rating -->\n                  <div class=\"govuk-form-group\">\n                    <label\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                      for=\"test-edit-{{ tyreTemplate.fields.plyRating }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                    >\n                      Ply rating (optional)\n                    </label>\n                    <input\n                      id=\"test-edit-{{ tyreTemplate.fields.plyRating }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      type=\"text\"\n                      maxlength=\"2\"\n                      name=\"{{ tyreTemplate.fields.plyRating }}\"\n                      formControlName=\"{{ tyreTemplate.fields.plyRating }}\"\n                      class=\"govuk-input govuk-input--width-2\"\n                      vtmNullValue\n                    />\n                  </div>\n\n                  <!-- Fitment code -->\n                  <div class=\"govuk-form-group\">\n                    <label\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                      for=\"test-edit-{{ tyreTemplate.fields.fitmentCode }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                    >\n                      Fitment code\n                    </label>\n                    <select\n                      id=\"test-edit-{{ tyreTemplate.fields.fitmentCode }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      formControlName=\"{{ tyreTemplate.fields.fitmentCode }}\"\n                      class=\"govuk-select\"\n                    >\n                      <option *ngFor=\"let code of fitmentCodeOptions\" [ngValue]=\"code.name\">\n                        {{ code.name }}\n                      </option>\n                    </select>\n                  </div>\n\n                  <!-- Load index -->\n                  <div class=\"govuk-form-group\">\n                    <label\n                      for=\"test-edit-{{ tyreTemplate.fields.dataTrAxles }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                    >\n                      Load index (optional)\n                    </label>\n                    <input\n                      id=\"test-edit-{{ tyreTemplate.fields.dataTrAxles }}{{\n                        tyreTemplate.fields.index\n                      }}\"\n                      type=\"number\"\n                      maxlength=\"3\"\n                      name=\"{{ tyreTemplate.fields.dataTrAxles }}\"\n                      class=\"govuk-input govuk-input--width-4\"\n                      formControlName=\"{{ tyreTemplate.fields.dataTrAxles }}\"\n                      vtmNullValue\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "VehicleComponent",
            "id": "component-VehicleComponent-b3dd997aad889c3ce1afa3bdfa9862b1e8a5ba78701baf60a60698821d173a909f5f975a6df4bf127f09c753c5763be024c8c59ec9d9ac661d773c0eeedc90f5",
            "file": "archive/src/app/test-record/vehicle/vehicle.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "preparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Preparer[]",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TestResultModel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countryOfRegistration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { Preparer } from '@app/models/preparer';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { COUNTRY_OF_REGISTRATION } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-vehicle',\n  templateUrl: './vehicle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VehicleComponent implements OnChanges {\n  @Input() testRecord: TestResultModel;\n  @Input() preparers: Preparer[];\n  @Input() editState: VIEW_STATE;\n  countryOfRegistration: string;\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.countryOfRegistration = COUNTRY_OF_REGISTRATION[this.testRecord.countryOfRegistration];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Vehicle identification number (VIN)\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-vin\">\n      {{ testRecord.vin | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Vehicle registration mark (VRM)\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-vrm\">\n      {{ testRecord.vrm | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div *ngIf=\"testRecord.vehicleType === 'trl'\" class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Trailer ID\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-trailerId\">\n      {{ testRecord.trailerId | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Country of registration\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-countryOfRegistration\">\n      {{ this.countryOfRegistration | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      EU vehicle category\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-euVehicleCategory\">\n      {{ testRecord.euVehicleCategory | DefaultNullOrEmpty | CapitalizeString }}\n    </dd>\n  </div>\n  <div *ngIf=\"testRecord.vehicleType !== 'trl'\" class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Odometer reading\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-odometerReading\">\n      {{\n        [testRecord.odometerReading | number: '1.0-2', testRecord.odometerReadingUnits]\n          | DisplayByDelimiter: ' '\n          | DefaultNullOrEmpty\n      }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key border--bottom-none\">\n      Preparer\n    </dt>\n    <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-preparer\">\n      {{\n        [testRecord.preparerName, testRecord.preparerId]\n          | DisplayByDelimiter: ' - '\n          | DefaultNullOrEmpty\n      }}\n    </dd>\n  </div>\n</dl>\n<ng-container *ngIf=\"editState\">\n  <vtm-vehicle-edit [testRecord]=\"testRecord\" [preparers]=\"preparers\"></vtm-vehicle-edit>\n</ng-container>\n"
        },
        {
            "name": "VehicleEditComponent",
            "id": "component-VehicleEditComponent-f0fce76070766d96535d6f7a5f408280febb1d9a6a346a98f9c4ad1e0ebe4cbe6877c2fd7b1553140eddbbe07d59ce0533fcae5e97fc8f462420359f6d1ebe8c",
            "file": "archive/src/app/test-record/vehicle/edit/vehicle-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "preparers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Preparer[]",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TestResultModel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countryOfRegistration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "countryOfRegistrationOptions",
                    "defaultValue": "Object.values(COUNTRY_OF_REGISTRATION)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "euVehicleCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "odometerReadingUnits",
                    "defaultValue": "Object.values(ODOMETER_READING_UNITS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "preparersOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ControlContainer, FormControl, FormGroupDirective, Validators } from '@angular/forms';\nimport {\n  EU_VEHICLE_CATEGORY_HGV,\n  EU_VEHICLE_CATEGORY_PSV,\n  EU_VEHICLE_CATEGORY_TRL,\n  ODOMETER_READING_UNITS\n} from '@app/test-record/test-record.enums';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { Preparer } from '@app/models/preparer';\nimport { COUNTRY_OF_REGISTRATION } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-vehicle-edit',\n  templateUrl: './vehicle-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class VehicleEditComponent implements OnInit {\n  @Input() testRecord: TestResultModel;\n  @Input() preparers: Preparer[];\n  @Input() isSubmitted: boolean;\n  euVehicleCategories: string[];\n  countryOfRegistrationOptions: string[] = Object.values(COUNTRY_OF_REGISTRATION);\n  odometerReadingUnits: string[] = Object.values(ODOMETER_READING_UNITS);\n  preparersOptions: string[];\n  testResultChildForm: FormGroupDirective;\n  countryOfRegistration: string;\n\n  constructor(parentForm: FormGroupDirective) {\n    this.testResultChildForm = parentForm;\n  }\n\n  ngOnInit() {\n    this.countryOfRegistration = COUNTRY_OF_REGISTRATION[this.testRecord.countryOfRegistration];\n\n    this.testResultChildForm.form.addControl(\n      'vin',\n      new FormControl({ value: this.testRecord.vin, disabled: true }, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(21)\n      ])\n    );\n    this.testResultChildForm.form.addControl(\n      'vrm',\n      new FormControl(\n        { value: !!this.testRecord.vrm ? this.testRecord.vrm : '-', disabled: true },\n        [Validators.required, Validators.minLength(1), Validators.maxLength(8)]\n      )\n    );\n    this.testResultChildForm.form.addControl(\n      'trailerId',\n      new FormControl({ value: this.testRecord.trailerId, disabled: true }, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'countryOfRegistration',\n      new FormControl(this.countryOfRegistration, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'euVehicleCategory',\n      new FormControl(this.testRecord.euVehicleCategory, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'odometerReading',\n      new FormControl(this.testRecord.odometerReading, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'odometerReadingUnits',\n      new FormControl(this.testRecord.odometerReadingUnits, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'preparer',\n      new FormControl(\n        !!this.testRecord.preparerName && !!this.testRecord.preparerId\n          ? this.testRecord.preparerName + '(' + this.testRecord.preparerId + ')'\n          : ''\n      )\n    );\n\n    this.preparersOptions = !!this.preparers\n      ? this.preparers.map(\n          ({ preparerName, preparerId }) =>\n            `${!!preparerName ? preparerName : ''} ${!!preparerId ? '(' + preparerId + ')' : ''}`\n        )\n      : [''];\n\n    if (!!this.testRecord) {\n      switch (this.testRecord.vehicleType) {\n        case 'psv':\n          this.euVehicleCategories = Object.values(EU_VEHICLE_CATEGORY_PSV);\n          break;\n        case 'hgv':\n          this.euVehicleCategories = Object.values(EU_VEHICLE_CATEGORY_HGV);\n          break;\n        case 'trl':\n          this.euVehicleCategories = Object.values(EU_VEHICLE_CATEGORY_TRL);\n          break;\n        default:\n          this.euVehicleCategories = [''];\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div class=\"govuk-form-group\">\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Vehicle identification number (VIN)\n              </label>\n              <input class=\"govuk-input\" id=\"test-vin\" formControlName=\"vin\" type=\"text\" />\n            </div>\n          </div>\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Vehicle registration mark (VRM)\n              </label>\n            </div>\n          </div>\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-third\">\n              <input class=\"govuk-input\" id=\"test-vrm\" formControlName=\"vrm\" type=\"text\" />\n            </div>\n          </div>\n          <div\n            *ngIf=\"testRecord.vehicleType === 'trl'\"\n            class=\"govuk-grid-row govuk-!-margin-bottom-3\"\n          >\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Trailer ID\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-trailerId\"\n                formControlName=\"trailerId\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Country of registration\n              </label>\n              <vtm-autocomplete\n                [autocompleteData]=\"countryOfRegistrationOptions\"\n                id=\"countryOfRegistration\"\n                ariaDescribedBy=\"countryOfRegistration\"\n                formControlName=\"countryOfRegistration\"\n                ngDefaultControl\n              ></vtm-autocomplete>\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-three-quarters\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                EU vehicle category\n              </label>\n              <div class=\"govuk-radios\">\n                <div\n                  class=\"govuk-radios__item\"\n                  *ngFor=\"let euCategory of euVehicleCategories; let i = index\"\n                >\n                  <input\n                    class=\"govuk-radios__input\"\n                    id=\"{{ 'test-euVehicleCategory-' + i }}\"\n                    type=\"radio\"\n                    formControlName=\"euVehicleCategory\"\n                    value=\"{{ euCategory | lowercase }}\"\n                    [checked]=\"(testRecord.euVehicleCategory | titlecase) == euCategory\"\n                  />\n                  <label class=\"govuk-label govuk-radios__label\">\n                    {{ euCategory }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"testRecord.vehicleType !== 'trl'\">\n            <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n              <div class=\"govuk-grid-column-one-half\">\n                <label class=\"govuk-label govuk-!-font-weight-bold\">\n                  Odometer reading\n                </label>\n                <input\n                  class=\"govuk-input\"\n                  id=\"test-odometerReading\"\n                  formControlName=\"odometerReading\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n\n            <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n              <div class=\"govuk-grid-column-one-half\">\n                <label class=\"govuk-label govuk-!-font-weight-bold\">\n                  Odometer reading unit\n                </label>\n                <select\n                  class=\"govuk-select\"\n                  id=\"test-odometerReadingUnit\"\n                  formControlName=\"odometerReadingUnits\"\n                >\n                  <option\n                    *ngFor=\"let unit of odometerReadingUnits; let i = index\"\n                    [selected]=\"testRecord.odometerReadingUnits == unit\"\n                    [value]=\"unit\"\n                    id=\"{{ 'test-odometerReadingUnit-' + i }}\"\n                    >{{ unit }}</option\n                  >\n                </select>\n              </div>\n            </div>\n          </ng-container>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Preparer\n              </label>\n              <vtm-autocomplete\n                [autocompleteData]=\"preparersOptions\"\n                id=\"preparer\"\n                ariaDescribedBy=\"preparer\"\n                formControlName=\"preparer\"\n                ngDefaultControl\n              ></vtm-autocomplete>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "VehicleSummaryComponent",
            "id": "component-VehicleSummaryComponent-56e3bb4643163aaef5f92cbc503b359ae8e8b238481900e563b33db1f0d249f96e94896584d5dd65e98e3ae827af25f4833c9cc1daf4add728f5770e955046ea",
            "file": "archive/src/app/technical-record/vehicle-summary/vehicle-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-summary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "VIEW_STATE",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isStandardVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "techRecHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TechRecordHelperService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vehicleClassDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "axlesHasParkingBrakeMrk",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\n\nimport { TechRecord } from '@app/models/tech-record.model';\nimport { TechRecordHelperService } from '../tech-record-helper.service';\nimport { VIEW_STATE } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-vehicle-summary',\n  templateUrl: './vehicle-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VehicleSummaryComponent implements OnChanges {\n  @Input() activeRecord: TechRecord;\n  @Input() editState: boolean;\n  @Input() viewState: VIEW_STATE;\n\n  vehicleClassDescription: string;\n  isStandardVehicle: boolean;\n\n  constructor(public techRecHelper: TechRecordHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { activeRecord } = changes;\n\n    if (activeRecord) {\n      this.vehicleClassDescription =\n        this.activeRecord.vehicleClass && this.activeRecord.vehicleClass.description\n          ? this.activeRecord.vehicleClass.description\n          : null;\n\n      this.isStandardVehicle = this.techRecHelper.isStandardVehicle(\n        this.activeRecord.vehicleType\n      );\n    }\n  }\n\n  axlesHasParkingBrakeMrk(): boolean {\n    return (\n      this.activeRecord.axles &&\n      this.activeRecord.axles.length &&\n      this.activeRecord.axles.some((x) => x.parkingBrakeMrk)\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Vehicle type\n      </dt>\n      <dd id=\"test-vehicleType\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.vehicleType | DefaultNullOrEmpty | uppercase }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Date of first registration\n      </dt>\n      <dd id=\"test-regnDate\" class=\"govuk-summary-list__value\">\n        <span *ngIf=\"activeRecord.regnDate; else hyphen\">\n          {{ activeRecord.regnDate | date: 'dd/MM/yyyy' }}\n        </span>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Year of manufacture\n      </dt>\n      <dd id=\"test-manufactureYear\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.manufactureYear | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Number of axles\n      </dt>\n      <dd id=\"test-noOfaxles\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.noOfAxles | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n      <dt class=\"govuk-summary-list__key\">\n        DTP number\n      </dt>\n      <dd id=\"test-dtpNumber\" class=\"govuk-summary-list__value\">\n        <div *ngIf=\"activeRecord.brakes; else hyphen\">\n          {{ activeRecord.brakes.dtpNumber | DefaultNullOrEmpty }}\n        </div>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n      <dt class=\"govuk-summary-list__key\">\n        Axles fitted with a parking brake\n      </dt>\n      <dd class=\"govuk-summary-list__value\" id=\"test-parkingBrakeMrk\">\n        <ng-container *ngIf=\"axlesHasParkingBrakeMrk(); else hyphen\">\n          <div *ngFor=\"let axel of activeRecord.axles\">\n            <div *ngIf=\"axel.parkingBrakeMrk\">\n              <span id=\"{{ 'test-parkingBrakeMrkAxle-' + axel.axleNumber }}\"\n                >Axle {{ axel.axleNumber }}</span\n              >\n            </div>\n          </div>\n        </ng-container>\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        Vehicle class\n      </dt>\n      <dd id=\"test-vehicleClassDescription\" class=\"govuk-summary-list__value\">\n        {{ vehicleClassDescription | DefaultNullOrEmpty | CapitalizeString }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n      <dt class=\"govuk-summary-list__key\">\n        Vehicle configuration\n      </dt>\n      <dd id=\"test-vehicleConfiguration\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.vehicleConfiguration | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        EU vehicle category\n      </dt>\n      <dd id=\"test-euVehicleCategory\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.euVehicleCategory | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n      <dt class=\"govuk-summary-list__key\">\n        Departmental vehicle marker\n      </dt>\n      <dd id=\"test-departmentalVehicleMarker\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.departmentalVehicleMarker | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n      <dt class=\"govuk-summary-list__key\">\n        Alteration marker\n      </dt>\n      <dd id=\"test-alterationMarker\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.alterationMarker | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n\n  <ng-container *ngIf=\"activeRecord.vehicleType === 'hgv'\">\n    <vtm-vehicle-summary-hgv [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-hgv>\n  </ng-container>\n\n  <ng-container *ngIf=\"activeRecord.vehicleType === 'psv'\">\n    <vtm-vehicle-summary-psv [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-psv>\n  </ng-container>\n\n  <ng-container *ngIf=\"activeRecord.vehicleType === 'trl'\">\n    <vtm-vehicle-summary-trl [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-trl>\n  </ng-container>\n\n  <dl class=\"govuk-summary-list\" *ngIf=\"isStandardVehicle\">\n    <h2 class=\"govuk-heading-m\">Type Approval</h2>\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Approval type</dt>\n      <dd id=\"test-approvalType\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.approvalType | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Approval type number</dt>\n      <dd id=\"test-approvalTypeNumber\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.approvalTypeNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">National type approval number</dt>\n      <dd id=\"test-ntaNumber\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.ntaNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Variant number</dt>\n      <dd id=\"test-variantNumber\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.variantNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">Variant version number</dt>\n      <dd id=\"test-variantVersionNumber\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.variantVersionNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"activeRecord.vehicleType === 'psv'\">\n      <dt class=\"govuk-summary-list__key\">\n        COIF serial number\n      </dt>\n      <dd id=\"test-coifSerialNumber\" class=\"govuk-summary-list__value\">\n        {{ activeRecord?.coifSerialNumber | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"activeRecord.vehicleType === 'psv'\">\n      <dt class=\"govuk-summary-list__key\">\n        COIF certifier name\n      </dt>\n      <dd id=\"test-coifCertifierName\" class=\"govuk-summary-list__value\">\n        {{ activeRecord?.coifCertifierName | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n\n    <div class=\"govuk-summary-list__row\" *ngIf=\"activeRecord.vehicleType === 'psv'\">\n      <dt class=\"govuk-summary-list__key\">\n        COIF date\n      </dt>\n      <dd id=\"test-coifDate\" class=\"govuk-summary-list__value\">\n        {{ activeRecord.coifDate | DefaultNullOrEmpty }}\n      </dd>\n      <dd class=\"govuk-summary-list__value\"></dd>\n    </div>\n  </dl>\n</ng-container>\n\n<ng-template #hyphen><span>-</span></ng-template>\n\n<!-- Edit Vehicle Summary -->\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-vehicle-summary-edit\n          [techRecord]=\"activeRecord\"\n          [viewState]=\"viewState\"\n        ></vtm-vehicle-summary-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "VehicleSummaryEditComponent",
            "id": "component-VehicleSummaryEditComponent-20c887fddcc36fb8bf374ead56dc8a163da41dbf9feb784523392c18d5d8dc119b1ccc12dc69d13df9f548aebd6293e8de9fc66d7b2cc18ec448d5bb318fcfcf",
            "file": "archive/src/app/technical-record/vehicle-summary/edit/vehicle-summary-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-summary-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-summary-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "viewState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "VIEW_STATE",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "axleNoOptions",
                    "defaultValue": "AXLE_NUM_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "booleanOptions",
                    "defaultValue": "BOOLEAN_RADIO_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "displayInEditView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "fuelPropulsionOptions",
                    "defaultValue": "new DisplayOptionsPipe().transform(FUEL_PROPULSION)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "numberOfAxles$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "vehicleClassOptions",
                    "defaultValue": "new DisplayOptionsPipe().transform(VEHICLE_CLASS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "vehicleConfigOptions",
                    "defaultValue": "new DisplayOptionsPipe().transform(VEHICLE_CONFIGURATION)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "vehicleEUCategoryOptions",
                    "defaultValue": "new DisplayOptionsPipe().transform(VEHICLE_EUCATEGORY)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "vehicleTypeOptions",
                    "defaultValue": "{\n    ['HGV']: VEHICLE_TYPES.HGV,\n    ['PSV']: VEHICLE_TYPES.PSV,\n    ['Trailer']: VEHICLE_TYPES.TRL\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "addAxleGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleArrayGroup",
                    "args": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleGroup",
                    "args": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createAxleGroupByNumberOfAxles",
                    "args": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAxleGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 248,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisplayOptionByDefault",
                    "args": [
                        {
                            "name": "currentValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unsorted",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  FormGroup,\n  ControlContainer,\n  FormGroupDirective,\n  FormBuilder,\n  FormArray\n} from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, tap, takeUntil } from 'rxjs/operators';\n\nimport { TechRecord, Axle } from '@app/models/tech-record.model';\nimport { VEHICLE_TYPES, VIEW_STATE } from '@app/app.enums';\nimport {\n  AXLE_NUM_OPTIONS,\n  BOOLEAN_RADIO_OPTIONS,\n  FUEL_PROPULSION,\n  VEHICLE_CLASS,\n  VEHICLE_CONFIGURATION,\n  VEHICLE_EUCATEGORY\n} from '@app/technical-record/technical-record.constants';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\n\n@Component({\n  selector: 'vtm-vehicle-summary-edit',\n  templateUrl: './vehicle-summary-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class VehicleSummaryEditComponent implements OnInit, OnDestroy {\n  @Input() techRecord: TechRecord;\n  @Input() viewState: VIEW_STATE;\n\n  techRecordFg: FormGroup;\n  numberOfAxles$: Observable<number>;\n  onDestroy$ = new Subject();\n  displayInEditView: boolean;\n\n  vehicleTypeOptions = {\n    ['HGV']: VEHICLE_TYPES.HGV,\n    ['PSV']: VEHICLE_TYPES.PSV,\n    ['Trailer']: VEHICLE_TYPES.TRL\n  };\n  booleanOptions = BOOLEAN_RADIO_OPTIONS;\n  axleNoOptions = AXLE_NUM_OPTIONS;\n  fuelPropulsionOptions = new DisplayOptionsPipe().transform(FUEL_PROPULSION);\n  vehicleClassOptions = new DisplayOptionsPipe().transform(VEHICLE_CLASS);\n  vehicleConfigOptions = new DisplayOptionsPipe().transform(VEHICLE_CONFIGURATION);\n  vehicleEUCategoryOptions = new DisplayOptionsPipe().transform(VEHICLE_EUCATEGORY);\n\n  get axles() {\n    return this.techRecordFg.get('axles') as FormArray;\n  }\n\n  constructor(\n    private parent: FormGroupDirective,\n    private fb: FormBuilder,\n    private techRecHelper: TechRecordHelperService,\n    private detectChange: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.numberOfAxles$ = this.techRecHelper.getNumberOfAxles();\n    this.displayInEditView = this.viewState === VIEW_STATE.EDIT;\n\n    const { brakes, axles, vehicleClass } = this.techRecord;\n    const dtpNumber = brakes ? brakes.dtpNumber : null;\n    const techAxles = axles && axles.length ? axles : [];\n    const vehicleClassDesc =\n      vehicleClass && vehicleClass.description ? vehicleClass.description : null;\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl('vehicleType', this.fb.control(this.techRecord.vehicleType));\n    this.techRecordFg.addControl('regnDate', this.fb.control(this.techRecord.regnDate));\n    this.techRecordFg.addControl(\n      'manufactureYear',\n      this.fb.control(this.techRecord.manufactureYear)\n    );\n    this.techRecordFg.addControl('noOfAxles', this.fb.control(this.techRecord.noOfAxles));\n    this.techRecordFg.addControl(\n      'brakes',\n      this.fb.group({\n        dtpNumber: this.fb.control(dtpNumber)\n      })\n    );\n    this.techRecordFg.addControl('axles', this.buildAxleArrayGroup(techAxles));\n    this.techRecordFg.addControl(\n      'speedLimiterMrk',\n      this.fb.control(\n        this.setDisplayOptionByDefault(this.techRecord.speedLimiterMrk, BOOLEAN_RADIO_OPTIONS.No)\n      )\n    );\n    this.techRecordFg.addControl(\n      'tachoExemptMrk',\n      this.fb.control(\n        this.setDisplayOptionByDefault(this.techRecord.tachoExemptMrk, BOOLEAN_RADIO_OPTIONS.No)\n      )\n    );\n    this.techRecordFg.addControl('euroStandard', this.fb.control(this.techRecord.euroStandard));\n    this.techRecordFg.addControl(\n      'roadFriendly',\n      this.fb.control(\n        this.setDisplayOptionByDefault(this.techRecord.roadFriendly, BOOLEAN_RADIO_OPTIONS.No)\n      )\n    );\n    this.techRecordFg.addControl(\n      'fuelPropulsionSystem',\n      this.fb.control(this.techRecord.fuelPropulsionSystem)\n    );\n    this.techRecordFg.addControl(\n      'drawbarCouplingFitted',\n      this.fb.control(\n        this.setDisplayOptionByDefault(\n          this.techRecord.drawbarCouplingFitted,\n          BOOLEAN_RADIO_OPTIONS.No\n        )\n      )\n    );\n    this.techRecordFg.addControl(\n      'vehicleClass',\n      this.fb.group({\n        description: this.fb.control(vehicleClassDesc)\n      })\n    );\n    this.techRecordFg.addControl(\n      'vehicleConfiguration',\n      this.fb.control(this.techRecord.vehicleConfiguration)\n    );\n    this.techRecordFg.addControl(\n      'offRoad',\n      this.fb.control(\n        this.setDisplayOptionByDefault(this.techRecord.offRoad, BOOLEAN_RADIO_OPTIONS.No)\n      )\n    );\n    this.techRecordFg.addControl(\n      'numberOfWheelsDriven',\n      this.fb.control(this.techRecord.numberOfWheelsDriven)\n    );\n    this.techRecordFg.addControl(\n      'euVehicleCategory',\n      this.fb.control(this.techRecord.euVehicleCategory)\n    );\n    this.techRecordFg.addControl(\n      'emissionsLimit',\n      this.fb.control(this.techRecord.emissionsLimit)\n    );\n    this.techRecordFg.addControl(\n      'departmentalVehicleMarker',\n      this.fb.control(\n        this.setDisplayOptionByDefault(\n          this.techRecord.departmentalVehicleMarker,\n          BOOLEAN_RADIO_OPTIONS.No\n        )\n      )\n    );\n    this.techRecordFg.addControl(\n      'alterationMarker',\n      this.fb.control(\n        this.techRecord.alterationMarker\n          ? this.techRecord.alterationMarker\n          : BOOLEAN_RADIO_OPTIONS.No\n      )\n    );\n\n    this.handleFormChanges();\n  }\n\n  buildAxleArrayGroup(axles: Axle[]): FormArray {\n    return this.fb.array(axles.map(this.buildAxleGroup.bind(this)));\n  }\n\n  buildAxleGroup(axle: Axle): FormGroup {\n    return this.fb.group({\n      name: `Axle ${axle.axleNumber}`,\n      selected: axle.parkingBrakeMrk,\n      axleNumber: axle.axleNumber\n    });\n  }\n\n  setDisplayOptionByDefault(currentValue: boolean, defaultValue: boolean): boolean {\n    if (currentValue === undefined) {\n      return defaultValue;\n    }\n\n    return currentValue;\n  }\n\n  unsorted(): number {\n    return 0;\n  }\n\n  handleFormChanges() {\n    this.techRecordFg\n      .get('noOfAxles')\n      .valueChanges.pipe(\n        debounceTime(500),\n        tap((value) => this.techRecHelper.setNumberOfAxles(value)),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n\n    this.numberOfAxles$\n      .pipe(\n        tap((numAxles) => {\n          this.createAxleGroupByNumberOfAxles(numAxles);\n          this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  private createAxleGroupByNumberOfAxles(numOfAxles: number): void {\n    const numOfIterations: number = this.axles.controls.length - numOfAxles;\n\n    numOfIterations < 0\n      ? this.addAxleGroupByIterations(numOfIterations)\n      : this.removeAxleGroupByIterations(numOfIterations);\n\n    this.axles.markAsDirty();\n  }\n\n  private addAxleGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index < 0; index++) {\n      const axleGroup = this.buildAxleGroup({\n        axleNumber: this.axles.controls.length + 1,\n        parkingBrakeMrk: false\n      } as Axle);\n\n      this.axles.push(axleGroup);\n    }\n  }\n\n  private removeAxleGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index > 0; index--) {\n      this.axles.removeAt(--this.axles.controls.length);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "axles": {
                    "name": "axles",
                    "getSignature": {
                        "name": "axles",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <form [formGroup]=\"techRecordFg\">\n          <!-- Vehicle type -->\n          <div class=\"govuk-radios govuk-!-margin-bottom-6\">\n            <label for=\"test-edit-vehicleType\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Vehicle type\n            </label>\n            <div class=\"govuk-radios__item\" *ngFor=\"let option of vehicleTypeOptions | keyvalue\">\n              <input\n                class=\"govuk-radios__input\"\n                id=\"test-edit-vehicleType-{{ option.key }}\"\n                name=\"vehicleType\"\n                formControlName=\"vehicleType\"\n                type=\"radio\"\n                [value]=\"option.value\"\n              />\n              <label\n                class=\"govuk-label govuk-radios__label\"\n                for=\"test-edit-vehicleType-{{ option.key }}\"\n              >\n                {{ option.key }}\n              </label>\n            </div>\n          </div>\n\n          <!-- Date of first registration -->\n          <div class=\"govuk-form-group\">\n            <div role=\"group\" aria-describedby=\"registration-date\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\" for=\"test-edit-regnDate\">\n                Date of first registration\n              </label>\n              <vtm-date-input\n                id=\"test-edit-regnDate\"\n                ariaDescribedBy=\"regnDate\"\n                formControlName=\"regnDate\"\n              ></vtm-date-input>\n            </div>\n          </div>\n\n          <!-- Year of manufacture -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-manufactureYear\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Year of manufacture\n            </label>\n            <input\n              id=\"test-edit-manufactureYear\"\n              type=\"number\"\n              name=\"manufactureYear\"\n              maxlength=\"4\"\n              formControlName=\"manufactureYear\"\n              class=\"govuk-input govuk-input--width-4\"\n            />\n          </div>\n\n          <!-- Number of axles -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-noOfAxles\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Number of axles\n            </label>\n            <select id=\"test-edit-noOfAxles\" formControlName=\"noOfAxles\" class=\"govuk-select\">\n              <option *ngFor=\"let axleNo of axleNoOptions\" [ngValue]=\"axleNo\">\n                {{ axleNo }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Dtp number -->\n          <div class=\"govuk-form-group\" [formGroup]=\"techRecordFg.get('brakes')\">\n            <label for=\"test-edit-dtpNumber\" class=\"govuk-label govuk-!-font-weight-bold\">\n              DTp number\n            </label>\n            <input\n              id=\"test-edit-dtpNumber\"\n              type=\"text\"\n              name=\"dtpNumber\"\n              maxlength=\"6\"\n              formControlName=\"dtpNumber\"\n              class=\"govuk-input govuk-input--width-5\"\n            />\n          </div>\n\n          <!-- Axles with parking brake -->\n          <ng-container *ngIf=\"axles.length\">\n            <div class=\"govuk-form-group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Axles fitted with a parking brake\n              </label>\n              <div class=\"govuk-checkboxes\" formArrayName=\"axles\">\n                <ng-container\n                  *ngFor=\"let axle of axles.controls; let i = index\"\n                  [formGroup]=\"axle\"\n                >\n                  <div class=\"govuk-checkboxes__item\">\n                    <input\n                      id=\"test-edit-axle-{{ i + 1 }}\"\n                      type=\"checkbox\"\n                      [value]=\"axle.get('selected').value\"\n                      [formControl]=\"axle.get('selected')\"\n                      class=\"govuk-checkboxes__input\"\n                    />\n                    <label\n                      for=\"test-edit-axle-{{ i + 1 }}\"\n                      class=\"govuk-label govuk-checkboxes__label\"\n                    >\n                      {{ axle.get('name').value }}\n                    </label>\n                  </div>\n                </ng-container>\n              </div>\n            </div>\n          </ng-container>\n\n          <!-- Speed limiter exempt -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Speed limiter exempt',\n                  field: 'speedLimiterMrk'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Tacho exempt -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Tacho exempt',\n                  field: 'tachoExemptMrk'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Euro standard -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-euroStandard\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Euro standard\n            </label>\n            <input\n              id=\"test-edit-euroStandard\"\n              type=\"text\"\n              name=\"euroStandard\"\n              formControlName=\"euroStandard\"\n              class=\"govuk-input govuk-input--width-2\"\n            />\n          </div>\n\n          <!-- Road friendly suspension -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Road friendly suspension',\n                  field: 'roadFriendly'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!--Fuel propulsion  -->\n          <div class=\"govuk-form-group\">\n            <label\n              for=\"test-edit-fuelPropulsionSystem\"\n              class=\"govuk-label govuk-!-font-weight-bold\"\n            >\n              Fuel/propulsion system\n            </label>\n            <select\n              id=\"test-edit-fuelPropulsionSystem\"\n              formControlName=\"fuelPropulsionSystem\"\n              class=\"govuk-select\"\n            >\n              <option *ngFor=\"let fuelProp of fuelPropulsionOptions\" [ngValue]=\"fuelProp.name\">\n                {{ fuelProp.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Drawbar coupling fitted -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Drawbar coupling fitted',\n                  field: 'drawbarCouplingFitted'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Vehicle class -->\n          <div class=\"govuk-form-group\" [formGroup]=\"techRecordFg.get('vehicleClass')\">\n            <label\n              for=\"test-edit-vehicleClass-description\"\n              class=\"govuk-label govuk-!-font-weight-bold\"\n            >\n              Vehicle class\n            </label>\n            <select\n              id=\"test-edit-vehicleClass-description\"\n              formControlName=\"description\"\n              class=\"govuk-select\"\n            >\n              <option *ngFor=\"let desc of vehicleClassOptions\" [ngValue]=\"desc.name\">\n                {{ desc.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Vehicle configuration -->\n          <div class=\"govuk-form-group\">\n            <label\n              for=\"test-edit-vehicleConfiguration\"\n              class=\"govuk-label govuk-!-font-weight-bold\"\n            >\n              Vehicle configuration\n            </label>\n            <select\n              id=\"test-edit-vehicleConfiguration\"\n              formControlName=\"vehicleConfiguration\"\n              class=\"govuk-select\"\n            >\n              <option *ngFor=\"let config of vehicleConfigOptions\" [ngValue]=\"config.name\">\n                {{ config.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Offroad vehicle -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Off road vehicle',\n                  field: 'offRoad'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Number of wheels driven -->\n          <div class=\"govuk-form-group\">\n            <label\n              for=\"test-edit-numberOfWheelsDriven\"\n              class=\"govuk-label govuk-!-font-weight-bold\"\n            >\n              Number of wheels driven\n            </label>\n            <input\n              id=\"test-edit-numberOfWheelsDriven\"\n              type=\"number\"\n              name=\"numberOfWheelsDriven\"\n              formControlName=\"numberOfWheelsDriven\"\n              class=\"govuk-input govuk-input--width-4\"\n            />\n          </div>\n\n          <!-- EU vehicle category -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-euVehicleCategory\" class=\"govuk-label govuk-!-font-weight-bold\">\n              EU vehicle category\n            </label>\n            <select\n              id=\"test-edit-euVehicleCategory\"\n              formControlName=\"euVehicleCategory\"\n              class=\"govuk-select\"\n            >\n              <option *ngFor=\"let category of vehicleEUCategoryOptions\" [ngValue]=\"category.name\">\n                {{ category.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Emission limit -->\n          <div class=\"govuk-form-group\">\n            <label for=\"test-edit-emissionsLimit\" class=\"govuk-label govuk-!-font-weight-bold\">\n              Emission limit (optional)\n            </label>\n            <input\n              id=\"test-edit-emissionsLimit\"\n              type=\"number\"\n              name=\"emissionsLimit\"\n              formControlName=\"emissionsLimit\"\n              class=\"govuk-input govuk-input govuk-input--width-20\"\n              vtmNullValue\n            />\n          </div>\n\n          <!-- Departmental vehicle marker -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              boolTemplate;\n              context: {\n                $implicit: {\n                  label: 'Departmental vehicle marker',\n                  field: 'departmentalVehicleMarker'\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Alteration marker -->\n          <ng-container *ngIf=\"displayInEditView\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                boolTemplate;\n                context: {\n                  $implicit: {\n                    label: 'Alteration marker',\n                    field: 'alterationMarker'\n                  }\n                }\n              \"\n            >\n            </ng-container>\n          </ng-container>\n\n          <ng-template let-boolTemplate #boolTemplate>\n            <div class=\"govuk-radios govuk-radios--inline govuk-!-margin-bottom-5\">\n              <label\n                for=\"test-edit-{{ boolTemplate.field }}\"\n                class=\"govuk-label govuk-!-font-weight-bold\"\n              >\n                {{ boolTemplate.label }}\n              </label>\n              <div\n                class=\"govuk-radios__item\"\n                *ngFor=\"let option of booleanOptions | keyvalue: unsorted\"\n              >\n                <input\n                  class=\"govuk-radios__input\"\n                  id=\"test-edit-{{ boolTemplate.field }}-{{ option.key }}\"\n                  name=\"{{ boolTemplate.field }}\"\n                  formControlName=\"{{ boolTemplate.field }}\"\n                  type=\"radio\"\n                  [value]=\"option.value\"\n                />\n                <label\n                  class=\"govuk-label govuk-radios__label\"\n                  for=\"test-edit-{{ boolTemplate.field }}-{{ option.key }}\"\n                >\n                  {{ option.key }}\n                </label>\n              </div>\n            </div>\n          </ng-template>\n\n          <!-- Type approval -->\n          <vtm-type-approval [techRecord]=\"techRecord\"></vtm-type-approval>\n        </form>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "VehicleSummaryHgvComponent",
            "id": "component-VehicleSummaryHgvComponent-1e7f8e5d805dea9763ff48ba82e36482ecdf000edd062006609683aac63e5508a16c7bf9344f63ec61dbb8cf844aeb619b868d6b350e29b123637e3a5025d7d5",
            "file": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-hgv/vehicle-summary-hgv.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-summary-hgv",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-summary-hgv.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-vehicle-summary-hgv',\n  templateUrl: './vehicle-summary-hgv.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VehicleSummaryHgvComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Speed limiter exempt\n    </dt>\n    <dd id=\"test-speedLimiterMrk\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.speedLimiterMrk | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Tacho exempt\n    </dt>\n    <dd id=\"test-tachoExemptMrk\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.tachoExemptMrk | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Euro standard\n    </dt>\n    <dd id=\"test-euroStandard\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.euroStandard | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Fuel/propulsion system\n    </dt>\n    <dd id=\"test-fuelpropulsionsystem\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.fuelPropulsionSystem | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Number of wheels driven\n    </dt>\n    <dd id=\"test-numberOfWheelsDriven\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.numberOfWheelsDriven | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Emission limit\n    </dt>\n    <dd id=\"test-emissionsLimit\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.emissionsLimit | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Drawbar coupling fitted\n    </dt>\n    <dd id=\"test-drawbarCouplingFitted\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.drawbarCouplingFitted | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Offroad vehicle\n    </dt>\n    <dd id=\"test-offRoad\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.offRoad | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Road friendly suspension\n    </dt>\n    <dd id=\"test-roadFriendly\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.roadFriendly | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n"
        },
        {
            "name": "VehicleSummaryPsvComponent",
            "id": "component-VehicleSummaryPsvComponent-2af419c3bfa762141d33c49d766e6fe532e612faffd93ee4e029b1e0fdcb554c45faba9374fc9336b376003343375cbe460e6a7cebbb7d7bc9e0b7f14a22241e",
            "file": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-psv/vehicle-summary-psv.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-summary-psv",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-summary-psv.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-vehicle-summary-psv',\n  templateUrl: './vehicle-summary-psv.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VehicleSummaryPsvComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Speed limiter exempt\n    </dt>\n    <dd id=\"test-speedLimiterMrk\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.speedLimiterMrk | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Tacho exempt\n    </dt>\n    <dd id=\"test-tachoExemptMrk\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.tachoExemptMrk | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Euro standard\n    </dt>\n    <dd id=\"test-euroStandard\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.euroStandard | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Fuel/propulsion system\n    </dt>\n    <dd id=\"test-fuelpropulsionsystem\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.fuelPropulsionSystem | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Number of wheels driven\n    </dt>\n    <dd id=\"test-numberOfWheelsDriven\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.numberOfWheelsDriven | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Emission limit\n    </dt>\n    <dd id=\"test-emissionsLimit\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.emissionsLimit | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Seats lower deck\n    </dt>\n    <dd id=\"test-seatsLowerDeck\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.seatsLowerDeck | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Seats upper deck\n    </dt>\n    <dd id=\"test-seatsUpperDeck\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.seatsUpperDeck | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Standing capacity\n    </dt>\n    <dd id=\"test-standingCapacity\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.standingCapacity | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Vehicle size\n    </dt>\n    <dd id=\"test-vehicleSize\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.vehicleSize | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Number of seat belts\n    </dt>\n    <dd id=\"test-numberOfSeatbelts\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.numberOfSeatbelts | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      <p class=\"white-space--normal\">Seatbelt installation approval date / type approved</p>\n    </dt>\n    <dd id=\"test-seatbeltInstallationApprovalDate\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"activeRecord.seatbeltInstallationApprovalDate; else hyphen\">\n        {{ activeRecord.seatbeltInstallationApprovalDate | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <dl class=\"govuk-summary-list\"></dl>\n</dl>\n\n<ng-template #hyphen><span>-</span></ng-template>\n"
        },
        {
            "name": "VehicleSummaryTrlComponent",
            "id": "component-VehicleSummaryTrlComponent-42661df587adb0344f927bae6ad57a0d758d096101ba7d8953cea7c6fa449a046bc9937c4875cd3d7ea55f9ae479b0c35a4ffb412ebc0c5071c4b0d6b4e5c9b2",
            "file": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-trl/vehicle-summary-trl.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-vehicle-summary-trl",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vehicle-summary-trl.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-vehicle-summary-trl',\n  templateUrl: './vehicle-summary-trl.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VehicleSummaryTrlComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      First use date\n    </dt>\n    <dd id=\"test-firstUseDate\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"activeRecord.firstUseDate; else hyphen\">\n        {{ activeRecord.firstUseDate | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Suspension type\n    </dt>\n    <dd id=\"test-suspensionType\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.suspensionType | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Coupling type\n    </dt>\n    <dd id=\"test-couplingType\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.couplingType | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Max load on coupling\n    </dt>\n    <dd id=\"test-maxLoadOnCoupling\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.maxLoadOnCoupling | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Frame description\n    </dt>\n    <dd id=\"test-frameDescription\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.frameDescription | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Road friendly suspension\n    </dt>\n    <dd id=\"test-roadFriendly\" class=\"govuk-summary-list__value\">\n      {{ activeRecord.roadFriendly | DefaultNullOrEmpty }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<ng-template #hyphen><span>-</span></ng-template>\n"
        },
        {
            "name": "VehicleTechnicalRecordComponent",
            "id": "component-VehicleTechnicalRecordComponent-cfe9549acabd11590d48d0fd4b319a37f6ccf1b5c5da316da512a72fd04d40506cf9ff303d1567ba292fd66f4abf46697ba0152323a18a1b45dfb4b7dcd40c41",
            "file": "src/app/vehicle-technical-record/vehicle-technical-record.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vehicle-technical-record",
            "styleUrls": [
                "./vehicle-technical-record.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vehicle-technical-record.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "technicalRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "axlesHasParkingBrakeMrk",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { TechRecord } from '../models/tech-record.model';\n\n// largely copied from  archive/../vehicle-summary.component.ts\n@Component({\n  selector: 'app-vehicle-technical-record',\n  templateUrl: './vehicle-technical-record.component.html',\n  styleUrls: ['./vehicle-technical-record.component.scss']\n})\nexport class VehicleTechnicalRecordComponent{\n  @Input() technicalRecord?: TechRecord;\n\n  constructor() { }\n\n  get vehicleClassDescription(): string | undefined {\n    return this.technicalRecord?.vehicleClass.description;\n  }\n\n  get isStandardVehicle(): boolean {\n    return (\n      'hgv' === this.technicalRecord?.vehicleType ||\n      'trl' === this.technicalRecord?.vehicleType ||\n      'psv' === this.technicalRecord?.vehicleType);\n  }\n\n  axlesHasParkingBrakeMrk(): boolean {\n    return (\n      this.technicalRecord != undefined &&\n      this.technicalRecord.axles &&\n      this.technicalRecord.axles.length > 0 &&\n      this.technicalRecord.axles.some((x) => x.parkingBrakeMrk)\n    );\n  }\n\n  // export enum VEHICLE_TYPES {\n  //   PSV = 'psv',\n  //   HGV = 'hgv',\n  //   TRL = 'trl',\n  //   Car = 'car',\n  //   LGV = 'lgv',\n  //   Moto = 'motorcycle'\n  // }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./vehicle-technical-record.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "accessors": {
                "vehicleClassDescription": {
                    "name": "vehicleClassDescription",
                    "getSignature": {
                        "name": "vehicleClassDescription",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 15
                    }
                },
                "isStandardVehicle": {
                    "name": "isStandardVehicle",
                    "getSignature": {
                        "name": "isStandardVehicle",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 19
                    }
                }
            },
            "templateData": "<dl class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Vehicle type</dt>\n    <dd id=\"test-vehicleType\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.vehicleType | uppercase }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Date of first registration</dt>\n    <dd id=\"test-regnDate\" class=\"govuk-summary-list__value\">\n      <span *ngIf=\"technicalRecord?.regnDate; else hyphen\">\n        {{ technicalRecord?.regnDate | date: 'dd/MM/yyyy' }}\n      </span>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Year of manufacture</dt>\n    <dd id=\"test-manufactureYear\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.manufactureYear }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Number of axles</dt>\n    <dd id=\"test-noOfaxles\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.noOfAxles }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n    <dt class=\"govuk-summary-list__key\">DTP number</dt>\n    <dd id=\"test-dtpNumber\" class=\"govuk-summary-list__value\">\n      <div *ngIf=\"technicalRecord?.brakes; else hyphen\">\n        {{ technicalRecord?.brakes?.dtpNumber }}\n      </div>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n    <dt class=\"govuk-summary-list__key\">Axles fitted with a parking brake</dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-parkingBrakeMrk\">\n      <ng-container *ngIf=\"axlesHasParkingBrakeMrk(); else hyphen\">\n        <div *ngFor=\"let axel of technicalRecord?.axles\">\n          <div *ngIf=\"axel.parkingBrakeMrk\">\n            <span id=\"{{ 'test-parkingBrakeMrkAxle-' + axel.axleNumber }}\">Axle {{ axel.axleNumber }}</span>\n          </div>\n        </div>\n      </ng-container>\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Vehicle class</dt>\n    <dd id=\"test-vehicleClassDescription\" class=\"govuk-summary-list__value\">\n      {{ vehicleClassDescription | titlecase }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n    <dt class=\"govuk-summary-list__key\">Vehicle configuration</dt>\n    <dd id=\"test-vehicleConfiguration\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.vehicleConfiguration }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">EU vehicle category</dt>\n    <dd id=\"test-euVehicleCategory\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.euVehicleCategory }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n    <dt class=\"govuk-summary-list__key\">Departmental vehicle marker</dt>\n    <dd id=\"test-departmentalVehicleMarker\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.departmentalVehicleMarker }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"isStandardVehicle\">\n    <dt class=\"govuk-summary-list__key\">Alteration marker</dt>\n    <dd id=\"test-alterationMarker\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.alterationMarker }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<!--\n<ng-container *ngIf=\"technicalRecord?.vehicleType === 'hgv'\">\n  <vtm-vehicle-summary-hgv [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-hgv>\n</ng-container>\n\n<ng-container *ngIf=\"technicalRecord?.vehicleType === 'psv'\">\n  <vtm-vehicle-summary-psv [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-psv>\n</ng-container>\n\n<ng-container *ngIf=\"technicalRecord?.vehicleType === 'trl'\">\n  <vtm-vehicle-summary-trl [activeRecord]=\"activeRecord\"></vtm-vehicle-summary-trl>\n</ng-container>\n-->\n\n<dl class=\"govuk-summary-list\" *ngIf=\"isStandardVehicle\">\n  <h2 class=\"govuk-heading-m\">Type Approval</h2>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Approval type</dt>\n    <dd id=\"test-approvalType\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.approvalType }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Approval type number</dt>\n    <dd id=\"test-approvalTypeNumber\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.approvalTypeNumber }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">National type approval number</dt>\n    <dd id=\"test-ntaNumber\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.ntaNumber }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Variant number</dt>\n    <dd id=\"test-variantNumber\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.variantNumber }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">Variant version number</dt>\n    <dd id=\"test-variantVersionNumber\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.variantVersionNumber }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"technicalRecord?.vehicleType === 'psv'\">\n    <dt class=\"govuk-summary-list__key\">COIF serial number</dt>\n    <dd id=\"test-coifSerialNumber\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.coifSerialNumber }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"technicalRecord?.vehicleType === 'psv'\">\n    <dt class=\"govuk-summary-list__key\">COIF certifier name</dt>\n    <dd id=\"test-coifCertifierName\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.coifCertifierName }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n\n  <div class=\"govuk-summary-list__row\" *ngIf=\"technicalRecord?.vehicleType === 'psv'\">\n    <dt class=\"govuk-summary-list__key\">COIF date</dt>\n    <dd id=\"test-coifDate\" class=\"govuk-summary-list__value\">\n      {{ technicalRecord?.coifDate }}\n    </dd>\n    <dd class=\"govuk-summary-list__value\"></dd>\n  </div>\n</dl>\n\n<ng-template #hyphen>\n  <span>-</span>\n</ng-template>\n"
        },
        {
            "name": "VisitComponent",
            "id": "component-VisitComponent-a57a0a761f0556841b1886cf2f2847c92fd388ee314e0fe5091cc7eac837b303b28ec8d3bb5b69fc2dc4e5e020860fdf4cecd1eb8f9091b19c8a54ea236ed467",
            "file": "archive/src/app/test-record/visit/visit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-visit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./visit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "VIEW_STATE",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestStation[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { VIEW_STATE } from '@app/app.enums';\nimport { TestStation } from '@app/models/test-station';\n\n@Component({\n  selector: 'vtm-visit',\n  templateUrl: './visit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisitComponent implements OnInit {\n  @Input() testRecord: TestResultModel;\n  @Input() editState: VIEW_STATE;\n  @Input() testStations: TestStation[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<dl *ngIf=\"!editState\" class=\"govuk-summary-list\">\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Test facility name/number\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testStationName\">\n      {{\n        [testRecord.testStationName, testRecord.testStationPNumber]\n          | DisplayByDelimiter: ' - '\n          | DefaultNullOrEmpty\n      }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Type of test facility\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testStationType\">\n      {{ testRecord.testStationType | DefaultNullOrEmpty | uppercase }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key\">\n      Tester name\n    </dt>\n    <dd class=\"govuk-summary-list__value\" id=\"test-testerName\">\n      {{ testRecord.testerName | DefaultNullOrEmpty | titlecase }}\n    </dd>\n  </div>\n  <div class=\"govuk-summary-list__row\">\n    <dt class=\"govuk-summary-list__key border--bottom-none\">\n      Email address\n    </dt>\n    <dd class=\"govuk-summary-list__value border--bottom-none\" id=\"test-testerEmailAddress\">\n      {{ testRecord.testerEmailAddress | DefaultNullOrEmpty }}\n    </dd>\n  </div>\n</dl>\n\n<ng-container *ngIf=\"editState\">\n  <vtm-visit-edit [testStations]=\"testStations\" [testRecord]=\"testRecord\"></vtm-visit-edit>\n</ng-container>\n"
        },
        {
            "name": "VisitEditComponent",
            "id": "component-VisitEditComponent-88212c88dfeea53c2595a3ba88dca81e69af1f00d07c6ac398d676acc674cecf3cfa004ba7d559452098de848e2ff486a2c4aafafd6777e8cc93ab493f2ce5b8",
            "file": "archive/src/app/test-record/visit/edit/visit-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-visit-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./visit-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{ provide: ControlContainer, useExisting: FormGroupDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "testRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TestResultModel",
                    "decorators": []
                },
                {
                    "name": "testStations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TestStation[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "testResultChildForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "testStationName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "testStationPNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "testStationsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "testStationType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchTestStationType",
                    "args": [
                        {
                            "name": "testStationPNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "testStationPNumber",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TestStation } from '@app/models/test-station';\nimport { ControlContainer, FormControl, FormGroupDirective, Validators } from '@angular/forms';\nimport { TestResultModel } from '@app/models/test-result.model';\nimport { TestRecordMapper } from '@app/test-record/test-record.mapper';\n\n@Component({\n  selector: 'vtm-visit-edit',\n  templateUrl: './visit-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{ provide: ControlContainer, useExisting: FormGroupDirective }]\n})\nexport class VisitEditComponent implements OnInit {\n  @Input() testRecord: TestResultModel;\n  @Input() testStations: TestStation[];\n  @Input() isSubmitted: boolean;\n\n  testStationsOptions: string[];\n  testStationType = '';\n  testStationPNumber = '';\n  testStationName = '';\n  testResultChildForm: FormGroupDirective;\n\n  constructor(private testRecordMapper: TestRecordMapper, parentForm: FormGroupDirective) {\n    this.testResultChildForm = parentForm;\n  }\n\n  ngOnInit() {\n    this.testStationType = this.testRecord.testStationType\n      ? this.testRecord.testStationType.toUpperCase()\n      : '';\n    this.testStationPNumber = !!this.testRecord.testStationPNumber\n      ? ' (' + this.testRecord.testStationPNumber + ')'\n      : '';\n    this.testStationName = !!this.testRecord.testStationName\n      ? this.testRecord.testStationName\n      : '';\n\n    this.testResultChildForm.form.addControl(\n      'testStationNameNumber',\n      new FormControl(this.testStationName + ' ' + this.testStationPNumber, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'testStationType',\n      new FormControl(\n        {\n          value: this.testRecord.testStationType\n            ? this.testRecord.testStationType.toUpperCase()\n            : '',\n          disabled: true\n        },\n        Validators.required\n      )\n    );\n    this.testResultChildForm.form.addControl(\n      'testerName',\n      new FormControl(this.testRecord.testerName, Validators.required)\n    );\n    this.testResultChildForm.form.addControl(\n      'testerEmailAddress',\n      new FormControl(this.testRecord.testerEmailAddress, [Validators.required, Validators.email])\n    );\n\n    this.testStationsOptions = !!this.testStations\n      ? this.testStations.map(\n          ({ testStationName, testStationPNumber }) =>\n            `${!!testStationName ? testStationName : ''} ${\n              !!testStationPNumber ? '(' + testStationPNumber + ')' : ''\n            }`\n        )\n      : [''];\n\n    this.testResultChildForm.form\n      .get('testStationNameNumber')\n      .valueChanges.subscribe((testStationVal) => {\n        const testStationPNumberMatch = testStationVal.match(/\\((.*)\\)/);\n        const testStationPNumber = !!testStationPNumberMatch ? testStationPNumberMatch.pop() : '';\n        this.testStationType = this.searchTestStationType(testStationPNumber);\n        this.testResultChildForm.form.get('testStationType').setValue(this.testStationType);\n      });\n  }\n\n  searchTestStationType(testStationPNumber: string) {\n    let testStationType;\n    this.testStations.forEach(function(item) {\n      if (item.testStationPNumber === testStationPNumber) {\n        testStationType = item.testStationType;\n      }\n    });\n\n    return this.testRecordMapper.getTestStationType(testStationType);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "testRecordMapper",
                        "type": "TestRecordMapper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parentForm",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div class=\"govuk-form-group\">\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Test facility name/number\n              </label>\n              <vtm-autocomplete\n                [autocompleteData]=\"testStationsOptions\"\n                id=\"testStationNameNumber\"\n                ariaDescribedBy=\"testStationNameNumber\"\n                formControlName=\"testStationNameNumber\"\n                ngDefaultControl\n              ></vtm-autocomplete>\n            </div>\n          </div>\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-full\">\n              <div class=\"govuk-inset-text govuk-!-padding-bottom-0\">\n                <div class=\"govuk-grid-row\">\n                  <div\n                    class=\"govuk-grid-column-one-third govuk-!-font-weight-bold govuk-!-padding-right-0\"\n                  >\n                    Type of test facility\n                  </div>\n                  <div\n                    class=\"govuk-grid-column-one-half govuk-!-padding-left-0 section--test-station\"\n                  >\n                    <span> {{ this.testStationType }} </span>\n                    <input\n                      type=\"hidden\"\n                      class=\"govuk-input govuk-!-padding-bottom-5 border--none\"\n                      id=\"test-testStationType\"\n                      formControlName=\"testStationType\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Tester name\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-testerName\"\n                formControlName=\"testerName\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div class=\"govuk-grid-row govuk-!-margin-bottom-3\">\n            <div class=\"govuk-grid-column-one-half\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                Email address\n              </label>\n              <input\n                class=\"govuk-input\"\n                id=\"test-testerEmailAddress\"\n                formControlName=\"testerEmailAddress\"\n              />\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "WeightsComponent",
            "id": "component-WeightsComponent-fe9504c20f070788b325a793b5393fa0c222094f011c9e2aaf0bcc751a35903843ca9bc67a3c291bd440cea8f8975b74e1e92bb3c8bbd3301ae7c39b4c6b1eb4",
            "file": "archive/src/app/technical-record/weights/weights.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-weights",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./weights.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TechRecord",
                    "decorators": []
                },
                {
                    "name": "editState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TechRecord } from '../../models/tech-record.model';\n\n@Component({\n  selector: 'vtm-weights',\n  templateUrl: './weights.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WeightsComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n  @Input() editState: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!editState\">\n  <table\n    class=\"govuk-table\"\n    *ngIf=\"activeRecord.vehicleType === 'hgv' || activeRecord.vehicleType === 'trl'\"\n  >\n    <thead class=\"govuk-table__head\">\n      <tr class=\"govuk-table__row\">\n        <th scope=\"col\" class=\"govuk-table__header\"></th>\n        <th scope=\"col\" class=\"govuk-table__header govuk-!-width-one-quarter\">GB weight (kg)</th>\n        <th scope=\"col\" class=\"govuk-table__header govuk-!-width-one-quarter\">EEC weight (kg)</th>\n        <th scope=\"col\" class=\"govuk-table__header govuk-!-width-one-quarter\">\n          Design weight (kg)\n        </th>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n      </tr>\n    </thead>\n\n    <tbody class=\"govuk-table__body\">\n      <tr class=\"govuk-table__row\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Gross</th>\n        <td id=\"test-grossGbWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.grossGbWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-grossEecWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.grossEecWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-grossDesignWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.grossDesignWeight | DefaultNullOrEmpty }}\n        </td>\n        <th class=\"govuk-table__cell\"></th>\n        <th class=\"govuk-table__cell\"></th>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType === 'hgv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Train</th>\n        <td id=\"test-trainGbWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.trainGbWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-trainEecWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.trainEecWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-trainDesignWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.trainDesignWeight | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngIf=\"activeRecord.vehicleType === 'hgv'\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Max train</th>\n        <td id=\"test-maxTrainGbWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.maxTrainGbWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-maxTrainEecWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.maxTrainEecWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"test-maxTrainDesignWeight\" class=\"govuk-table__cell\">\n          {{ activeRecord.maxTrainDesignWeight | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n\n      <tr class=\"govuk-table__row\" *ngFor=\"let axle of activeRecord.axles\">\n        <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n          Axle {{ axle.axleNumber | DefaultNullOrEmpty }}\n        </th>\n        <td id=\"{{ 'test-gbWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axle.weights.gbWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-eecWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axle.weights.eecWeight | DefaultNullOrEmpty }}\n        </td>\n        <td id=\"{{ 'test-designWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n          {{ axle.weights.designWeight | DefaultNullOrEmpty }}\n        </td>\n        <td class=\"govuk-table__cell\"></td>\n        <td class=\"govuk-table__cell\"></td>\n      </tr>\n    </tbody>\n  </table>\n\n  <ng-container *ngIf=\"activeRecord.vehicleType === 'psv'\">\n    <vtm-weights-psv [activeRecord]=\"activeRecord\"></vtm-weights-psv>\n  </ng-container>\n</ng-container>\n\n<!-- Edit Weights -->\n<ng-container *ngIf=\"editState\">\n  <dl class=\"govuk-summary-list\">\n    <div class=\"govuk-summary-list__row\">\n      <dt class=\"govuk-summary-list__key\">\n        <vtm-weights-edit [techRecord]=\"activeRecord\"></vtm-weights-edit>\n      </dt>\n    </div>\n  </dl>\n</ng-container>\n"
        },
        {
            "name": "WeightsEditComponent",
            "id": "component-WeightsEditComponent-e68e9c26f56d40bf66ce4862f67e81786c8d9c8a90d2ad89893daf3eb5815107008679720d50e5860e1a87f9aaaf08a7588265f53f47121eccde8a5032701b65",
            "file": "archive/src/app/technical-record/weights/edit/weights-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-weights-edit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./weights-edit.component.html"
            ],
            "viewProviders": [
                {
                    "name": "{\n    provide: ControlContainer, useExisting: FormGroupDirective\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "techRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isPsvVehicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "numberOfAxles$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "onDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "techRecordFg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "addAxleWeightsGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleArrayGroup",
                    "args": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormArray",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axles",
                            "type": "Axle[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildAxleWeightsGroup",
                    "args": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "axle",
                            "type": "Axle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createAxleWeightsGroupByNumberOfAxles",
                    "args": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numOfAxles",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFormChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeAxleWeightsGroupByIterations",
                    "args": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "numofIterations",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef,\n  OnDestroy\n} from '@angular/core';\nimport {\n  FormGroup,\n  ControlContainer,\n  FormGroupDirective,\n  FormBuilder,\n  FormArray\n} from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\nimport { TechRecord, Axle, Weights } from '@app/models/tech-record.model';\nimport { TechRecordHelperService } from '@app/technical-record/tech-record-helper.service';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { VEHICLE_TYPES } from '@app/app.enums';\n\n@Component({\n  selector: 'vtm-weights-edit',\n  templateUrl: './weights-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useExisting: FormGroupDirective\n    }\n  ]\n})\nexport class WeightsEditComponent implements OnInit, OnDestroy {\n  @Input() techRecord: TechRecord;\n\n  techRecordFg: FormGroup;\n  numberOfAxles$: Observable<number>;\n  onDestroy$ = new Subject();\n  isPsvVehicle: boolean;\n\n  get axlesWeigths() {\n    return this.techRecordFg.get('axlesWeights') as FormArray;\n  }\n\n  constructor(\n    private parent: FormGroupDirective,\n    private fb: FormBuilder,\n    private techRecHelper: TechRecordHelperService,\n    private detectChange: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.numberOfAxles$ = this.techRecHelper.getNumberOfAxles();\n    this.isPsvVehicle = this.techRecord.vehicleType === VEHICLE_TYPES.PSV;\n\n    const { axles } = this.techRecord;\n    const techAxles = axles && axles.length ? axles : [];\n\n    this.techRecordFg = this.parent.form.get('techRecord') as FormGroup;\n    this.techRecordFg.addControl('grossGbWeight', this.fb.control(this.techRecord.grossGbWeight));\n    this.techRecordFg.addControl(\n      'grossEecWeight',\n      this.fb.control(this.techRecord.grossEecWeight)\n    );\n    this.techRecordFg.addControl(\n      'grossDesignWeight',\n      this.fb.control(this.techRecord.grossDesignWeight)\n    );\n\n    this.techRecordFg.addControl('trainGbWeight', this.fb.control(this.techRecord.trainGbWeight));\n    this.techRecordFg.addControl(\n      'trainEecWeight',\n      this.fb.control(this.techRecord.trainEecWeight)\n    );\n    this.techRecordFg.addControl(\n      'trainDesignWeight',\n      this.fb.control(this.techRecord.trainDesignWeight)\n    );\n\n    this.techRecordFg.addControl(\n      'maxTrainGbWeight',\n      this.fb.control(this.techRecord.maxTrainGbWeight)\n    );\n    this.techRecordFg.addControl(\n      'maxTrainEecWeight',\n      this.fb.control(this.techRecord.maxTrainEecWeight)\n    );\n    this.techRecordFg.addControl(\n      'maxTrainDesignWeight',\n      this.fb.control(this.techRecord.maxTrainDesignWeight)\n    );\n\n    this.techRecordFg.addControl('axlesWeights', this.buildAxleArrayGroup(techAxles));\n\n    this.handleFormChanges();\n  }\n\n  buildAxleArrayGroup(axles: Axle[]): FormArray {\n    return this.fb.array(axles.map(this.buildAxleWeightsGroup.bind(this)));\n  }\n\n  buildAxleWeightsGroup(axle: Axle): FormGroup {\n    const weights = axle.weights ? axle.weights : ({} as Weights);\n\n    return this.fb.group({\n      axleNumber: this.fb.control(axle.axleNumber),\n      weights: this.fb.group({\n        gbWeight: this.fb.control(weights.gbWeight),\n        eecWeight: this.fb.control(weights.eecWeight),\n        designWeight: this.fb.control(weights.designWeight)\n      })\n    });\n  }\n\n  handleFormChanges() {\n    this.numberOfAxles$\n      .pipe(\n        tap((numAxles) => {\n          this.createAxleWeightsGroupByNumberOfAxles(numAxles), this.detectChange.markForCheck();\n        }),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe();\n  }\n\n  private createAxleWeightsGroupByNumberOfAxles(numOfAxles: number): void {\n    const numOfIterations: number = this.axlesWeigths.controls.length - numOfAxles;\n\n    numOfIterations < 0\n      ? this.addAxleWeightsGroupByIterations(numOfIterations)\n      : this.removeAxleWeightsGroupByIterations(numOfIterations);\n\n    this.axlesWeigths.markAsDirty();\n  }\n\n  private addAxleWeightsGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index < 0; index++) {\n      const axleWeightsGroup = this.buildAxleWeightsGroup({\n        axleNumber: this.axlesWeigths.controls.length + 1\n      } as Axle);\n\n      this.axlesWeigths.push(axleWeightsGroup);\n    }\n  }\n\n  private removeAxleWeightsGroupByIterations(numofIterations: number): void {\n    let index = numofIterations;\n    for (; index > 0; index--) {\n      this.axlesWeigths.removeAt(--this.axlesWeigths.controls.length);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "parent",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "techRecHelper",
                        "type": "TechRecordHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "detectChange",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "axlesWeigths": {
                    "name": "axlesWeigths",
                    "getSignature": {
                        "name": "axlesWeigths",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "templateData": "<div class=\"govuk-grid-row\">\n  <div class=\"govuk-grid-column-three-quarters\">\n    <div class=\"govuk-form-group\">\n      <fieldset class=\"govuk-fieldset\">\n        <div [formGroup]=\"techRecordFg\">\n          <h2 class=\"govuk-heading-m\">Vehicle weight (kg)</h2>\n\n          <!-- Gross vehicle weight -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              weightTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg,\n                  labelHead: 'Gross vehicle weight',\n                  weightFields: [\n                    {\n                      label: 'GB',\n                      field: 'grossGbWeight'\n                    },\n                    {\n                      label: 'EEC (optional)',\n                      field: 'grossEecWeight'\n                    },\n                    {\n                      label: 'Design',\n                      field: 'grossDesignWeight'\n                    }\n                  ]\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Gross train weight -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              weightTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg,\n                  labelHead: 'Gross train weight',\n                  weightFields: [\n                    {\n                      label: 'GB',\n                      field: 'trainGbWeight'\n                    },\n                    {\n                      label: 'EEC (optional)',\n                      field: 'trainEecWeight'\n                    },\n                    {\n                      label: 'Design (optional)',\n                      field: 'trainDesignWeight'\n                    }\n                  ]\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Max train weight -->\n          <ng-container\n            *ngTemplateOutlet=\"\n              weightTemplate;\n              context: {\n                $implicit: {\n                  group: techRecordFg,\n                  labelHead: 'Max train weight',\n                  weightFields: [\n                    {\n                      label: 'GB',\n                      displayOptional: isPsvVehicle,\n                      field: 'maxTrainGbWeight'\n                    },\n                    {\n                      label: 'EEC (optional)',\n                      field: 'maxTrainEecWeight'\n                    },\n                    {\n                      label: 'Design (optional)',\n                      field: 'maxTrainDesignWeight'\n                    }\n                  ]\n                }\n              }\n            \"\n          >\n          </ng-container>\n\n          <!-- Axle weights -->\n          <ng-container *ngIf=\"axlesWeigths.length\">\n            <h2 class=\"govuk-heading-m\">Axle weight (kg)</h2>\n\n            <div formArrayName=\"axlesWeights\">\n              <div\n                *ngFor=\"let axleWeight of axlesWeigths.controls; let i = index\"\n                [formGroup]=\"axleWeight\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    weightTemplate;\n                    context: {\n                      $implicit: {\n                        group: axleWeight.get('weights'),\n                        labelHead: 'Axle ' + axleWeight.get('axleNumber').value,\n                        weightFields: [\n                          {\n                            index: '-' + (i + 1),\n                            label: 'GB',\n                            field: 'gbWeight'\n                          },\n                          {\n                            index: '-' + (i + 1),\n                            label: 'EEC (optional)',\n                            field: 'eecWeight'\n                          },\n                          {\n                            index: '-' + (i + 1),\n                            label: 'Design',\n                            field: 'designWeight'\n                          }\n                        ]\n                      }\n                    }\n                  \"\n                ></ng-container>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-template let-weightTemplate #weightTemplate>\n            <div class=\"govuk-form-group\" [formGroup]=\"weightTemplate.group\">\n              <label class=\"govuk-label govuk-!-font-weight-bold\">\n                {{ weightTemplate.labelHead }}\n              </label>\n              <div class=\"govuk-inset-text govuk-!-margin-top-3\">\n                <ng-container *ngFor=\"let item of weightTemplate.weightFields\">\n                  <div class=\"govuk-form-group govuk-!-margin-left-3\">\n                    <label\n                      for=\"test-edit-{{ item.field }}{{ item.index }}\"\n                      class=\"govuk-label govuk-!-font-weight-bold\"\n                    >\n                      <span>{{ item.label }}</span>\n                      <span *ngIf=\"item.displayOptional\">&nbsp;(optional)</span>\n                    </label>\n                    <input\n                      id=\"test-edit-{{ item.field }}{{ item.index }}\"\n                      type=\"number\"\n                      maxlength=\"5\"\n                      name=\"{{ item.field }}\"\n                      class=\"govuk-input govuk-input--width-5\"\n                      formControlName=\"{{ item.field }}\"\n                      vtmNullValue\n                    />\n                  </div>\n                </ng-container>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "WeightsPsvComponent",
            "id": "component-WeightsPsvComponent-3f85ad1dbcf8e4bc961191cba049e0bc4915beeadf0b62deb1f76d55b9876f251226ef405d1dbfa55c9dd21ce45c717f7974c67a8c689d91d895bb648842ca10",
            "file": "archive/src/app/technical-record/weights/weights-psv/weights-psv.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "vtm-weights-psv",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./weights-psv.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRecord",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TechRecord",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { TechRecord } from '@app/models/tech-record.model';\n\n@Component({\n  selector: 'vtm-weights-psv',\n  templateUrl: './weights-psv.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WeightsPsvComponent implements OnInit {\n  @Input() activeRecord: TechRecord;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table class=\"govuk-table table-details\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n      <th scope=\"col\" class=\"govuk-table__header\">Kerb weight (kg)</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Laden weight (kg)</th>\n      <th scope=\"col\" class=\"govuk-table__header\">GB weight (kg)</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Design weight (kg)</th>\n      <th scope=\"col\" class=\"govuk-table__header\">Unladen weight (kg)</th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\">\n    <tr class=\"govuk-table__row\">\n      <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Gross</th>\n      <td id=\"test-grossKerbWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.grossKerbWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-grossLadenWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.grossLadenWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-grossGbWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.grossGbWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-grossDesignWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.grossDesignWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-unladenWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.unladenWeight | DefaultNullOrEmpty }}\n      </td>\n    </tr>\n\n    <tr class=\"govuk-table__row\" *ngFor=\"let axle of activeRecord.axles\">\n      <th class=\"govuk-table__cell govuk-!-font-weight-bold\">\n        Axle {{ axle.axleNumber | DefaultNullOrEmpty }}\n      </th>\n      <td id=\"{{ 'test-kerbWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n        {{ axle.weights.kerbWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"{{ 'test-ladenWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n        {{ axle.weights.ladenWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"{{ 'test-gbWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n        {{ axle.weights.gbWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"{{ 'test-designWeight-' + axle.axleNumber }}\" class=\"govuk-table__cell\">\n        {{ axle.weights.designWeight | DefaultNullOrEmpty }}\n      </td>\n      <td class=\"govuk-table__cell\"></td>\n    </tr>\n  </tbody>\n</table>\n<table class=\"govuk-table table-details\">\n  <thead class=\"govuk-table__head\">\n    <tr class=\"govuk-table__row\">\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n      <th scope=\"col\" class=\"govuk-table__header govuk-!-width-one-quarter\">\n        Max GB weight (kg)\n      </th>\n      <th scope=\"col\" class=\"govuk-table__header govuk-!-width-one-quarter\">\n        Design weight (kg)\n      </th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n      <th scope=\"col\" class=\"govuk-table__header\"></th>\n    </tr>\n  </thead>\n  <tbody class=\"govuk-table__body\">\n    <tr class=\"govuk-table__row\">\n      <th class=\"govuk-table__cell govuk-!-font-weight-bold\">Train</th>\n      <td id=\"test-maxTrainGbWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.maxTrainGbWeight | DefaultNullOrEmpty }}\n      </td>\n      <td id=\"test-trainDesignWeight\" class=\"govuk-table__cell\">\n        {{ activeRecord.trainDesignWeight | DefaultNullOrEmpty }}\n      </td>\n      <td class=\"govuk-table__cell\"></td>\n      <td class=\"govuk-table__cell\"></td>\n      <td class=\"govuk-table__cell\"></td>\n    </tr>\n  </tbody>\n</table>\n"
        }
    ],
    "modules": [
        {
            "name": "AdrModule",
            "id": "module-AdrModule-91d6ce381865486505cecbf47e19d3a5836ef70be550d653123af6cb6b8cb3a6eff21856fe13481cdbd2d74dd96caff4f2e7a1d8e568b93f3adb0b6369a90686",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/technical-record/adr/adr.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { SharedModule } from '@app/shared';\nimport { AdrComponent } from './adr.component';\nimport { ApplicantDetailsComponent } from './applicant-details/applicant-details.component';\nimport { ApplicantDetailsEditComponent } from './applicant-details/edit/applicant-details-edit.component';\nimport { AdrDetailsComponent } from './adr-details/adr-details.component';\nimport { AdrDetailsEditComponent } from './adr-details/edit/adr-details-edit.component';\nimport { TankDetailsComponent } from './tank-details/tank-details.component';\nimport { TankDetailsEditComponent } from './tank-details/edit/tank-details-edit.component';\nimport { TankInpectionsComponent } from './tank-inpections/tank-inpections.component';\nimport { TankInspectionsEditComponent } from './tank-inpections/edit/tank-inspections-edit.component';\nimport { MemoComponent } from './memo/memo.component';\nimport { MemoEditComponent } from './memo/edit/memo-edit.component';\nimport { TankDocumentsComponent } from './tank-documents/tank-documents.component';\nimport { BatteryListApplicableComponent } from './battery-list-applicable/battery-list-applicable.component';\nimport { BatteryListApplicableEditComponent } from './battery-list-applicable/edit/battery-list-applicable-edit.component';\nimport { DeclarationSeenComponent } from './declaration-seen/declaration-seen.component';\nimport { DeclarationSeenEditComponent } from './declaration-seen/edit/declaration-seen-edit.component';\nimport { CertificateComponent } from './certificate/certificate.component';\nimport { CertificateEditComponent } from './certificate/edit/certificate-edit.component';\nimport { AdditionalAdrDetailsComponent } from './additional-adr-details/additional-adr-details.component';\nimport { AdditionalAdrDetailEditComponent } from './additional-adr-details/edit/additional-adr-detail-edit.component';\n\nconst COMPOSABLE = [\n  AdrComponent,\n  ApplicantDetailsComponent,\n  ApplicantDetailsEditComponent,\n  AdrDetailsComponent,\n  AdrDetailsEditComponent,\n  TankDetailsComponent,\n  TankDetailsEditComponent,\n  TankInpectionsComponent,\n  TankInspectionsEditComponent,\n  MemoComponent,\n  MemoEditComponent,\n  TankDocumentsComponent,\n  BatteryListApplicableComponent,\n  BatteryListApplicableEditComponent,\n  DeclarationSeenComponent,\n  DeclarationSeenEditComponent,\n  CertificateComponent,\n  CertificateEditComponent,\n  AdditionalAdrDetailsComponent,\n  AdditionalAdrDetailEditComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    SharedModule,\n    FontAwesomeModule,\n    ReactiveFormsModule\n  ],\n  declarations: COMPOSABLE,\n  exports: COMPOSABLE\n})\nexport class AdrModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdditionalAdrDetailEditComponent"
                        },
                        {
                            "name": "AdditionalAdrDetailsComponent"
                        },
                        {
                            "name": "AdrComponent"
                        },
                        {
                            "name": "AdrDetailsComponent"
                        },
                        {
                            "name": "AdrDetailsEditComponent"
                        },
                        {
                            "name": "ApplicantDetailsComponent"
                        },
                        {
                            "name": "ApplicantDetailsEditComponent"
                        },
                        {
                            "name": "BatteryListApplicableComponent"
                        },
                        {
                            "name": "BatteryListApplicableEditComponent"
                        },
                        {
                            "name": "CertificateComponent"
                        },
                        {
                            "name": "CertificateEditComponent"
                        },
                        {
                            "name": "DeclarationSeenComponent"
                        },
                        {
                            "name": "DeclarationSeenEditComponent"
                        },
                        {
                            "name": "MemoComponent"
                        },
                        {
                            "name": "MemoEditComponent"
                        },
                        {
                            "name": "TankDetailsComponent"
                        },
                        {
                            "name": "TankDetailsEditComponent"
                        },
                        {
                            "name": "TankDocumentsComponent"
                        },
                        {
                            "name": "TankInpectionsComponent"
                        },
                        {
                            "name": "TankInspectionsEditComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdditionalAdrDetailEditComponent"
                        },
                        {
                            "name": "AdditionalAdrDetailsComponent"
                        },
                        {
                            "name": "AdrComponent"
                        },
                        {
                            "name": "AdrDetailsComponent"
                        },
                        {
                            "name": "AdrDetailsEditComponent"
                        },
                        {
                            "name": "ApplicantDetailsComponent"
                        },
                        {
                            "name": "ApplicantDetailsEditComponent"
                        },
                        {
                            "name": "BatteryListApplicableComponent"
                        },
                        {
                            "name": "BatteryListApplicableEditComponent"
                        },
                        {
                            "name": "CertificateComponent"
                        },
                        {
                            "name": "CertificateEditComponent"
                        },
                        {
                            "name": "DeclarationSeenComponent"
                        },
                        {
                            "name": "DeclarationSeenEditComponent"
                        },
                        {
                            "name": "MemoComponent"
                        },
                        {
                            "name": "MemoEditComponent"
                        },
                        {
                            "name": "TankDetailsComponent"
                        },
                        {
                            "name": "TankDetailsEditComponent"
                        },
                        {
                            "name": "TankDocumentsComponent"
                        },
                        {
                            "name": "TankInpectionsComponent"
                        },
                        {
                            "name": "TankInspectionsEditComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-1c6362dffdc9e4256cfa82dd9427701ac07c0a24e6834c23b7855d60dac6d47c616ef74533ad6f53fedd2410d90f82482a0e2e6f763a7b992edd7c9a94c6f7e0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MsalBroadcastService, MsalGuard, MsalGuardConfiguration, MsalInterceptor, MsalInterceptorConfiguration, MsalModule, MsalRedirectComponent, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG } from '@azure/msal-angular';\nimport { BrowserCacheLocation, InteractionType, IPublicClientApplication, PublicClientApplication } from '@azure/msal-browser';\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { reducers } from './reducers';\nimport { UserService } from './user-service/user-service';\nimport { HomeComponent } from './home/home.component';\nimport { HomeButtonComponent } from './home/home-button/home-button.component';\nimport { SearchComponent } from './search/search.component';\nimport { VehicleTechnicalRecordComponent } from './vehicle-technical-record/vehicle-technical-record.component';\nimport { DefaultNullOrEmpty } from './pipes/DefaultNullOrEmpty.pipe';\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  return new PublicClientApplication({\n    auth: {\n      clientId: environment.VTM_CLIENT_ID,\n      authority: environment.VTM_AUTHORITY_ID,\n      redirectUri: environment.VTM_REDIRECT_URI\n    },\n    cache: {\n      cacheLocation: BrowserCacheLocation.LocalStorage,\n      storeAuthStateInCookie: true\n    }\n  });\n}\n\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\n  const protectedResourceMap = new Map<string, Array<string>>();\n  protectedResourceMap.set('https://graph.microsoft.com/v1.0/me', ['user.read']);\n\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap\n  };\n}\n\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\n  return {\n    interactionType: InteractionType.Redirect,\n    authRequest: {\n      scopes: ['user.read']\n    },\n    loginFailedRoute: ''\n  };\n}\n\nexport function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\n  return localStorageSync({keys: ['userservice'], rehydrate: true})(reducer);\n}\n\nconst metaReducers: Array<MetaReducer<any, any>> = [localStorageSyncReducer];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    HomeButtonComponent,\n    SearchComponent,\n    VehicleTechnicalRecordComponent,\n    DefaultNullOrEmpty\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MsalModule,\n    HttpClientModule,\n    StoreModule.forRoot(\n        reducers,\n        {metaReducers}\n    ),\n    StoreDevtoolsModule.instrument({\n      name: \"VTM Web Dev Tools\",\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, //Log-only mode in production\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true\n    },\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory\n    },\n    {\n      provide: MSAL_GUARD_CONFIG,\n      useFactory: MSALGuardConfigFactory\n    },\n    {\n      provide: MSAL_INTERCEPTOR_CONFIG,\n      useFactory: MSALInterceptorConfigFactory\n    },\n    MsalService,\n    MsalGuard,\n    MsalBroadcastService,\n    UserService,\n  ],\n  exports: [DefaultNullOrEmpty],\n  bootstrap: [AppComponent, MsalRedirectComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "UserService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "DefaultNullOrEmpty"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeButtonComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "VehicleTechnicalRecordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DefaultNullOrEmpty"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-c526d4121310bf04b15d0659dd4c49ec01d668a58f4a2e5daaa3af2dcb7687544aab1848235602d5a3d7c15f25c7c02be8e75703e33392a2afd6343fd1ed7cec-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppConfig } from '@app/app.config';\nimport { LandingPageComponent } from '@app/landing-page/landing-page.component';\nimport { FooterComponent } from '@app/shell/footer/footer.component';\nimport { HeaderComponent } from '@app/shell/header/header.component';\nimport { ShellPage } from '@app/shell/shell.page';\nimport { CustomSerializer } from '@app/store';\nimport { appReducers } from '@app/store/reducers/app.reducers';\nimport { TechnicalRecordCreateComponent } from '@app/technical-record-create/technical-record-create.component';\nimport { AuthTokenInterceptor } from '@app/technical-record-search/auth-token-interceptor';\nimport { environment } from '@environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub, faMedium, faStackOverflow } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faCheckSquare as farCheckSquare,\n  faSquare as farSquare\n} from '@fortawesome/free-regular-svg-icons';\nimport { faBars, faCheckSquare, faCoffee, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport {\n  AuthenticationGuard,\n  MsAdalAngular6Module,\n  MsAdalAngular6Service\n} from 'microsoft-adal-angular6';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { PendingChangesGuard } from './shared/pending-changes-guard/pending-changes.guard';\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerLoaderComponent } from './shared/spinner-loader/spinner-loader.component';\nimport { MultipleRecordsContainer } from '@app/multiple-records/multiple-records.container';\nimport { MultipleRecordsComponent } from '@app/multiple-records/multiple-records.component';\nimport { TestRecordModule } from '@app/test-record/test-record.module';\nimport { LogoutModalComponent } from './shell/header/logout-modal/logout-modal.component';\nimport { ROOT_EFFECTS } from './store/state/app.state';\nimport { ModalModule } from './modal/modal.module';\n\nlet adalConfig: any; // will be initialized by APP_INITIALIZER\nexport function msAdalAngular6ConfigFactory() {\n  return adalConfig;\n}\n\nexport function initializeApp(appConfig: AppConfig) {\n  const promise = appConfig.load().then(() => {\n    adalConfig = {\n      tenant: appConfig.settings.adalConfig.tenant,\n      clientId: appConfig.settings.adalConfig.clientId,\n      redirectUri: appConfig.settings.adalConfig.redirectUri,\n      endpoints: appConfig.settings.adalConfig.endpoints,\n      navigateToLoginRequestUrl: true,\n      cacheLocation: appConfig.settings.adalConfig.cacheLocation\n    };\n  });\n  return () => promise;\n}\n\nexport const COMPONENTS = [\n  AppComponent,\n  ShellPage,\n  LandingPageComponent,\n  HeaderComponent,\n  FooterComponent,\n  TechnicalRecordCreateComponent,\n  SpinnerLoaderComponent,\n  MultipleRecordsContainer,\n  MultipleRecordsComponent,\n  LogoutModalComponent\n];\n\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    MsAdalAngular6Module,\n    HttpClientModule,\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    MaterialModule,\n    SharedModule,\n    ModalModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    StoreModule.forRoot(appReducers),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\n    !(environment.name === 'deploy') ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot(ROOT_EFFECTS),\n    TestRecordModule\n  ],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n  entryComponents: [LogoutModalComponent],\n  providers: [\n    { provide: RouterStateSerializer, useClass: CustomSerializer },\n    AppConfig,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [AppConfig],\n      multi: true\n    },\n    MsAdalAngular6Service,\n    {\n      provide: 'adalConfig',\n      useFactory: msAdalAngular6ConfigFactory,\n      deps: []\n    },\n    AuthenticationGuard,\n    PendingChangesGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {\n    // Add an icon to the library for convenient access in other components\n    library.add(\n      faCoffee,\n      faSquare,\n      faCheckSquare,\n      farSquare,\n      farCheckSquare,\n      faStackOverflow,\n      faGithub,\n      faMedium,\n      faBars\n    );\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AppConfig"
                        },
                        {
                            "name": "AuthTokenInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        },
                        {
                            "name": "LogoutModalComponent"
                        },
                        {
                            "name": "MultipleRecordsComponent"
                        },
                        {
                            "name": "MultipleRecordsContainer"
                        },
                        {
                            "name": "ShellPage"
                        },
                        {
                            "name": "SpinnerLoaderComponent"
                        },
                        {
                            "name": "TechnicalRecordCreateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "!(environment"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "ModalModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TestRecordModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        },
                        {
                            "name": "LogoutModalComponent"
                        },
                        {
                            "name": "MultipleRecordsComponent"
                        },
                        {
                            "name": "MultipleRecordsContainer"
                        },
                        {
                            "name": "ShellPage"
                        },
                        {
                            "name": "SpinnerLoaderComponent"
                        },
                        {
                            "name": "TechnicalRecordCreateComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-8ce24d057ca2b860267b4888750bfd34a19da640b7c5d1ad5f72e1d321e58fce3520556ca8333bcde9a4f6ef59397517f2603495c827480723e379479fc2dad2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MsalGuard } from '@azure/msal-angular';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [MsalGuard]\n  },\n  {\n    path: 'search',\n    component: SearchComponent,\n    canActivate: [MsalGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-37bcf0d121ab1f410ab03138162692fd562e6bfe76dbbc619d205dae3d681934df88479500cdc87f37797128b0a46a58581a24fe2480beaeca01421e5d36827b-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationGuard } from 'microsoft-adal-angular6';\nimport { LandingPageComponent } from '@app/landing-page/landing-page.component';\nimport { TechnicalRecordCreateComponent } from '@app/technical-record-create/technical-record-create.component';\nimport { MultipleRecordsContainer } from '@app/multiple-records/multiple-records.container';\nimport { PreparersGuard } from '@app/test-record/guards/preparers.guard';\nimport { TestStationsGuard } from '@app/test-record/guards/test-stations.guard';\nimport { TestResultGuard } from '@app/test-record/guards/test-result.guard';\nimport { SelectTestTypeComponent } from '@app/test-record/select-test-type/select-test-type.component';\nimport { FormStateGuard } from './guards/form-state.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingPageComponent,\n    canActivate: [AuthenticationGuard, FormStateGuard]\n  },\n  {\n    path: 'search',\n    loadChildren:\n      './technical-record-search/technical-record-search.module#TechnicalRecordSearchModule',\n    canActivate: [AuthenticationGuard, FormStateGuard]\n  },\n  {\n    path: 'create',\n    component: TechnicalRecordCreateComponent,\n    canActivate: [AuthenticationGuard, FormStateGuard]\n  },\n  {\n    path: 'technical-record',\n    loadChildren: './technical-record/technical-record.module#TechnicalRecordModule',\n    canActivate: [AuthenticationGuard, FormStateGuard]\n  },\n  {\n    path: 'multiple-records',\n    component: MultipleRecordsContainer,\n    canActivate: [AuthenticationGuard, FormStateGuard]\n  },\n  {\n    path: 'test-record',\n    loadChildren: './test-record/test-record.module#TestRecordModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DirectivesModule",
            "id": "module-DirectivesModule-c6727156fb3136a46e5d9cb21f5b69e4e63ff327a3e989abbcccc6166b87fd433827ababf59be7aec97da1d05c1a432d6c78ca175ad5ec3a1045834f74c0cf2c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/shared/directives/directives.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BackButtonDirective } from './back-button.directive';\nimport { NullValueDirective } from './null-value.directive';\n\nexport const PIPES_AND_COMPONENTS = [BackButtonDirective, NullValueDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: PIPES_AND_COMPONENTS,\n  exports: PIPES_AND_COMPONENTS\n})\nexport class DirectivesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LibrariesModule",
            "id": "module-LibrariesModule-3c99292b73c3b80ade9c5e8cbd63fc1f492035ceb55b8f95c8647bb2a56c7e435a299980aa9293934eddb19b9ab6261022e05221eccf24badd61e8ff1355fcc9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/shared/libraries/libraries.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AccordionComponent } from '@app/shared/libraries/accordion/accordion.component';\nimport { AccordionItemComponent } from '@app/shared/libraries/accordion-item/accordion-item.component';\n\nexport const PIPES_AND_COMPONENTS = [AccordionComponent, AccordionItemComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: PIPES_AND_COMPONENTS,\n  exports: PIPES_AND_COMPONENTS\n})\nexport class LibrariesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-ed762c0c7a7751fea65ae35e9a4913927e28dd13593e4ad5b600296f6e49dc6ca2fe8f1ee20dcc102744d3d9aa1dcd13249ac7a2ef845d8509fc5b55955d1cdc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ModalModule",
            "id": "module-ModalModule-75af52701b3840f7c1541cddd292884770fc778851f928ee2b754905e679f009ddd1ad3d8f3bfe40bf2e11b4cc9bd60b0fddd95afb5feed3955ffb85a7dcdc1f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/modal/modal.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalContainerComponent } from './modal.container.component';\nimport { LoseChangesComponent } from './components/lose-changes/lose-changes.component';\nimport { ModalComponent } from './modal.component';\nimport { ModalEffects } from './modal.effects';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  imports: [CommonModule, EffectsModule.forFeature([ModalEffects])],\n  declarations: [ModalContainerComponent, ModalComponent, LoseChangesComponent],\n  entryComponents: [ModalComponent, LoseChangesComponent],\n  exports: [ModalContainerComponent]\n})\nexport class ModalModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoseChangesComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "ModalContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ModalContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-78ce280fb916d63e644e4240fcfa9ae3a1c8846e530b7a0684acdb2964acd705e96d4c9a344e1a981f43263f36cb00d2ed23b49963001583f5e77dbc7b50fab9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { AdrReasonModalComponent } from './adr-reason-modal/adr-reason-modal.component';\nimport { DateInputComponent } from './components/date-input/date-input.component';\nimport { PageNotFoundComponentComponent } from './page-not-found-component/page-not-found-component.component';\nimport { PreventLeavePageModalComponent } from './prevent-page-leave-modal/prevent-leave-page-modal.component';\nimport { ErrorSummaryComponent } from './error-summary/error-summary.component';\n\nimport { FilterRecordPipe } from '@app/pipes/FilterRecordPipe';\nimport { OrderByStatusPipe } from '@app/pipes/OrderByStatusPipe';\nimport { IsPrimaryVrmPipe } from '../pipes/IsPrimaryVrmPipe';\nimport { DefaultNullOrEmpty } from '@app/pipes/DefaultNullOrEmptyPipe';\nimport { PendingChangesService } from './pending-changes-service/pending-changes.service';\nimport { DisplayOptionsPipe } from '@app/pipes/display-options.pipe';\nimport { SortByDatePipe } from '@app/pipes/SortByDatePipe';\nimport { FormConnectorDirective } from '@app/directives/form-connector/form-connector.directive';\nimport { FilterMultipleRecordsPipe } from '@app/pipes/FilterMultipleRecordsPipe';\nimport { DisplayByDelimiter } from '@app/pipes/display-by-delimiter';\nimport { CapitalizeString } from '@app/pipes/capitalize-string';\nimport { DialogBoxComponent } from '@app/shared/dialog-box/dialog-box.component';\nimport { DirectivesModule } from '@app/shared/directives/directives.module';\nimport { DialogBoxConfirmationComponent } from '@app/shared/dialog-box-confirmation/dialog-box-confirmation.component';\nimport { DialogMinistryPlatesComponent } from '@app/shared/dialog-ministry-plates/dialog-ministry-plates.component';\nimport { MinistryPlatesComponent } from '@app/technical-record/ministry-plates/ministry-plates.component';\nimport { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\n\nexport const PIPES_AND_COMPONENTS = [\n  AdrReasonModalComponent,\n  DateInputComponent,\n  AutocompleteComponent,\n  PageNotFoundComponentComponent,\n  PreventLeavePageModalComponent,\n  ErrorSummaryComponent,\n  FormConnectorDirective,\n  DialogBoxComponent,\n  DialogBoxConfirmationComponent,\n  DialogMinistryPlatesComponent,\n  MinistryPlatesComponent,\n\n  IsPrimaryVrmPipe,\n  FilterRecordPipe,\n  DisplayOptionsPipe,\n  OrderByStatusPipe,\n  DefaultNullOrEmpty,\n  SortByDatePipe,\n  FilterMultipleRecordsPipe,\n  DisplayByDelimiter,\n  CapitalizeString\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, ReactiveFormsModule, MatDialogModule, DirectivesModule],\n  declarations: PIPES_AND_COMPONENTS,\n  exports: [PIPES_AND_COMPONENTS, DirectivesModule],\n  entryComponents: [\n    AdrReasonModalComponent,\n    PreventLeavePageModalComponent,\n    DialogBoxComponent,\n    DialogBoxConfirmationComponent,\n    DialogMinistryPlatesComponent\n  ],\n  providers: [FilterRecordPipe, PendingChangesService]\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "PendingChangesService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DirectivesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdrReasonModalComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "CapitalizeString"
                        },
                        {
                            "name": "DateInputComponent"
                        },
                        {
                            "name": "DialogBoxComponent"
                        },
                        {
                            "name": "DialogBoxConfirmationComponent"
                        },
                        {
                            "name": "DialogMinistryPlatesComponent"
                        },
                        {
                            "name": "DirectivesModule"
                        },
                        {
                            "name": "DisplayByDelimiter"
                        },
                        {
                            "name": "DisplayOptionsPipe"
                        },
                        {
                            "name": "ErrorSummaryComponent"
                        },
                        {
                            "name": "FilterMultipleRecordsPipe"
                        },
                        {
                            "name": "FilterRecordPipe"
                        },
                        {
                            "name": "FormConnectorDirective"
                        },
                        {
                            "name": "IsPrimaryVrmPipe"
                        },
                        {
                            "name": "MinistryPlatesComponent"
                        },
                        {
                            "name": "OrderByStatusPipe"
                        },
                        {
                            "name": "PageNotFoundComponentComponent"
                        },
                        {
                            "name": "PreventLeavePageModalComponent"
                        },
                        {
                            "name": "SortByDatePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechnicalRecordModule",
            "id": "module-TechnicalRecordModule-c9486b21a53b8567d941a8f3ec8013673b56b537259218de553a5905c2e904651f69ca54a2180c2c40e55b65465d022cfebc9264c7defd2c74ee5e6c05b669db",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/technical-record/technical-record.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterialModule } from '@app/material.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub, faMedium, faStackOverflow } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faCheckSquare as farCheckSquare,\n  faSquare as farSquare\n} from '@fortawesome/free-regular-svg-icons';\nimport {\n  faCheckSquare,\n  faCoffee,\n  faMinus,\n  faPlus,\n  faSquare\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { TechnicalRecordsContainer } from './technical-record.container';\nimport { TechnicalRecordComponent } from '@app/technical-record/technical-record.component';\nimport { RecordStatusComponent } from './record-status/record-status.component';\nimport { RecordStatusEditComponent } from './record-status/edit/record-status-edit.component';\nimport { RecordIdentificationComponent } from './record-identification/record-identification.component';\nimport { RecordIdentificationEditComponent } from './record-identification/edit/record-identification-edit.component';\nimport { VehicleSummaryComponent } from './vehicle-summary/vehicle-summary.component';\nimport { VehicleSummaryPsvComponent } from './vehicle-summary/vehicle-summary-psv/vehicle-summary-psv.component';\nimport { VehicleSummaryHgvComponent } from './vehicle-summary/vehicle-summary-hgv/vehicle-summary-hgv.component';\nimport { VehicleSummaryTrlComponent } from './vehicle-summary/vehicle-summary-trl/vehicle-summary-trl.component';\nimport { VehicleSummaryEditComponent } from './vehicle-summary/edit/vehicle-summary-edit.component';\nimport { TypeApprovalComponent } from './vehicle-summary/edit/type-approval/type-approval.component';\nimport { NotesEditComponent } from './notes/edit/notes-edit.component';\nimport { BodyComponent } from './body/body.component';\nimport { BodyEditComponent } from './body/edit/body-edit.component';\nimport { BodyPsvComponent } from './body/body-psv/body-psv.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { TechRecHistoryComponent } from './tech-rec-history/tech-rec-history.component';\nimport { TestHistoryComponent } from './test-history/test-history.component';\nimport { WeightsComponent } from './weights/weights.component';\nimport { WeightsPsvComponent } from './weights/weights-psv/weights-psv.component';\nimport { WeightsEditComponent } from './weights/edit/weights-edit.component';\nimport { TyresComponent } from './tyres/tyres.component';\nimport { TyresEditComponent } from './tyres/edit/tyres-edit.component';\nimport { DimensionsComponent } from './dimensions/dimensions.component';\nimport { DimensionsEditComponent } from './dimensions/edit/dimensions-edit.component';\nimport { ApplicantComponent } from './applicant/applicant.component';\nimport { ApplicantEditComponent } from './applicant/edit/applicant-edit.component';\nimport { DocumentsComponent } from './documents/documents.component';\nimport { DocumentsEditComponent } from './documents/edit/documents-edit.component';\nimport { PlatesComponent } from './plates/plates.component';\nimport { BrakesComponent } from './brakes/brakes.component';\nimport { BrakesPsvComponent } from './brakes/brakes-psv/brakes-psv.component';\nimport { PurchaserComponent } from './purchaser/purchaser.component';\nimport { ManufacturerComponent } from './manufacturer/manufacturer.component';\nimport { AuthorisationIntoServiceComponent } from './authorisation-into-service/authorisation-into-service.component';\nimport { LettersOfAuthorisationComponent } from './letters-of-authorisation/letters-of-authorisation.component';\nimport { AxleBrakesComponent } from './brakes/axle-brakes/axle-brakes.component';\nimport { DdaComponent } from './dda/dda.component';\nimport { AdrModule } from './adr/adr.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TechnicalRecordsContainer\n  }\n];\n\nconst COMPONENTS = [\n  TechnicalRecordsContainer,\n  TechnicalRecordComponent,\n  RecordStatusComponent,\n  RecordStatusEditComponent,\n  RecordIdentificationComponent,\n  RecordIdentificationEditComponent,\n  VehicleSummaryComponent,\n  VehicleSummaryPsvComponent,\n  VehicleSummaryHgvComponent,\n  VehicleSummaryTrlComponent,\n  VehicleSummaryEditComponent,\n  TypeApprovalComponent,\n  NotesEditComponent,\n  BodyEditComponent,\n  BodyComponent,\n  BodyPsvComponent,\n  WeightsComponent,\n  WeightsPsvComponent,\n  WeightsEditComponent,\n  TyresComponent,\n  TyresEditComponent,\n  DimensionsComponent,\n  DimensionsEditComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TechRecHistoryComponent,\n  ApplicantComponent,\n  ApplicantEditComponent,\n  DocumentsComponent,\n  DocumentsEditComponent,\n  PlatesComponent,\n  BrakesComponent,\n  BrakesPsvComponent,\n  PurchaserComponent,\n  ManufacturerComponent,\n  AuthorisationIntoServiceComponent,\n  LettersOfAuthorisationComponent,\n  AxleBrakesComponent,\n  DdaComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule.forChild(routes),\n    AdrModule\n  ],\n  declarations: COMPONENTS,\n  exports: [TechnicalRecordsContainer, TechnicalRecordComponent]\n})\nexport class TechnicalRecordModule {\n  constructor() {\n    // Add an icon to the library for convenient access in other components\n    library.add(\n      faCoffee,\n      faSquare,\n      faCheckSquare,\n      farSquare,\n      farCheckSquare,\n      faStackOverflow,\n      faGithub,\n      faMedium,\n      faPlus,\n      faMinus\n    );\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        },
                        {
                            "name": "LogoutModalComponent"
                        },
                        {
                            "name": "MultipleRecordsComponent"
                        },
                        {
                            "name": "MultipleRecordsContainer"
                        },
                        {
                            "name": "ShellPage"
                        },
                        {
                            "name": "SpinnerLoaderComponent"
                        },
                        {
                            "name": "TechnicalRecordCreateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AdrModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TechnicalRecordComponent"
                        },
                        {
                            "name": "TechnicalRecordsContainer"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechnicalRecordSearchModule",
            "id": "module-TechnicalRecordSearchModule-90a5f7a1292f7d1d488f8fca2e58adb9f524bca048d349e704d8518503b62385559aa8a4f911224a03b0e1f85e1c4b15cea47549077778aea7b49743467bf516",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/technical-record-search/technical-record-search.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgrxFormsModule } from 'ngrx-forms';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { MaterialModule } from '@app/material.module';\nimport { TechnicalRecordSearchComponent } from './technical-record-search.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthenticationGuard } from 'microsoft-adal-angular6';\nimport { TechnicalRecordService } from './technical-record.service';\nimport { TestResultService } from './test-result.service';\nimport { AdrReasonModalComponent } from '@app/shared/adr-reason-modal/adr-reason-modal.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { VehicleTestResultModelEffects } from '@app/store/effects/VehicleTestResultModel.effects';\nimport { VehicleTechRecordModelEffects } from '@app/store/effects/VehicleTechRecordModel.effects';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    MatFormFieldModule,\n    RouterModule.forChild([\n      { path: '', component: TechnicalRecordSearchComponent, canActivate: [AuthenticationGuard] }\n    ]),\n    EffectsModule.forFeature([VehicleTechRecordModelEffects, VehicleTestResultModelEffects]),\n    FormsModule,\n    SharedModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    NgrxFormsModule,\n    NgxJsonViewerModule\n  ],\n  declarations: [TechnicalRecordSearchComponent],\n  exports: [TechnicalRecordSearchComponent],\n  providers: [TechnicalRecordService, TestResultService],\n  entryComponents: [AdrReasonModalComponent]\n})\nexport class TechnicalRecordSearchModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "TechnicalRecordService"
                        },
                        {
                            "name": "TestResultService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TechnicalRecordSearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TechnicalRecordSearchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TestRecordModule",
            "id": "module-TestRecordModule-a93e166f4392d478763578f60d13c01c06f4d1e67c17eb2a4fbea42dad4ecc10953a411838b512840f28def6196f0b2de0e1db04eb13151efc93fc9cf300f278",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "archive/src/app/test-record/test-record.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormGroupDirective, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SharedModule } from '@app/shared';\nimport { RouterModule } from '@angular/router';\nimport { LibrariesModule } from '@app/shared/libraries/libraries.module';\nimport { AuthenticationGuard } from 'microsoft-adal-angular6';\n\nimport { TestRecordComponent } from '@app/test-record/test-record.component';\nimport { VehicleComponent } from './vehicle/vehicle.component';\nimport { TestSectionComponent } from './test-section/test-section.component';\nimport { DefectsComponent } from './defects/defects.component';\nimport { SeatbeltInstallationCheckComponent } from './seatbelt-installation-check/seatbelt-installation-check.component';\nimport { EmissionDetailsComponent } from './emission-details/emission-details.component';\nimport { VisitComponent } from './visit/visit.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { TestHistoryComponent } from './test-history/test-history.component';\nimport { TestRecordContainer } from '@app/test-record/test-record.container';\nimport { DefectsEditComponent } from './defects/edit/defects-edit.component';\nimport { VehicleEditComponent } from './vehicle/edit/vehicle-edit.component';\nimport { SeatbeltInstallationCheckEditComponent } from './seatbelt-installation-check/edit/seatbelt-installation-check-edit.component';\nimport { EmissionDetailsEditComponent } from './emission-details/edit/emission-details-edit.component';\nimport { NotesEditComponent } from './notes/edit/notes-edit.component';\nimport { VisitEditComponent } from './visit/edit/visit-edit.component';\nimport { TestSectionEditComponent } from './test-section/edit/test-section-edit.component';\nimport { SelectTestTypeComponent } from './select-test-type/select-test-type.component';\nimport { TimeInputComponent } from '@app/shared/components/time-input/time-input.component';\nimport { VehicleTestResultModelEffects } from '@app/store/effects/VehicleTestResultModel.effects';\nimport { SelectTestTypeContainer } from '@app/test-record/select-test-type/select-test-type.container';\nimport { TestResultGuard } from '@app/test-record/guards/test-result.guard';\nimport { PreparersGuard } from '@app/test-record/guards/preparers.guard';\nimport { TestStationsGuard } from '@app/test-record/guards/test-stations.guard';\nimport { TestTypeCategoriesGuard } from '@app/test-record/guards/test-type-categories.guard';\nimport { TreeComponent } from '@app/shared/components/tree/tree.component.ts';\nimport { FormStateGuard } from '@app/guards/form-state.guard';\n\nexport const COMPONENTS = [\n  TestRecordComponent,\n  VehicleComponent,\n  TestSectionComponent,\n  DefectsComponent,\n  SeatbeltInstallationCheckComponent,\n  EmissionDetailsComponent,\n  VisitComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TestRecordContainer,\n  DefectsEditComponent,\n  VehicleEditComponent,\n  SeatbeltInstallationCheckEditComponent,\n  EmissionDetailsEditComponent,\n  NotesEditComponent,\n  VisitEditComponent,\n  TimeInputComponent,\n  TestSectionEditComponent,\n  SelectTestTypeComponent,\n  SelectTestTypeContainer,\n  TreeComponent\n];\n\nexport const MODULES = [\n  CommonModule,\n  RouterModule.forChild([\n    {\n      path: 'test-record/:id',\n      component: TestRecordContainer,\n      canActivate: [\n        AuthenticationGuard,\n        TestResultGuard,\n        PreparersGuard,\n        TestStationsGuard,\n        FormStateGuard\n      ]\n    },\n    {\n      path: 'select-test-type/:id',\n      component: SelectTestTypeContainer,\n      canActivate: [TestTypeCategoriesGuard]\n    }\n  ]),\n  EffectsModule.forFeature([VehicleTestResultModelEffects]),\n  SharedModule,\n  LibrariesModule,\n  ReactiveFormsModule,\n  MaterialModule\n];\n\n@NgModule({\n  imports: [MODULES],\n  declarations: [COMPONENTS],\n  exports: [COMPONENTS],\n  providers: [FormGroupDirective]\n})\nexport class TestRecordModule {\n  constructor() {}\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        },
                        {
                            "name": "LogoutModalComponent"
                        },
                        {
                            "name": "MultipleRecordsComponent"
                        },
                        {
                            "name": "MultipleRecordsContainer"
                        },
                        {
                            "name": "ShellPage"
                        },
                        {
                            "name": "SpinnerLoaderComponent"
                        },
                        {
                            "name": "TechnicalRecordCreateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LibrariesModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LandingPageComponent"
                        },
                        {
                            "name": "LogoutModalComponent"
                        },
                        {
                            "name": "MultipleRecordsComponent"
                        },
                        {
                            "name": "MultipleRecordsContainer"
                        },
                        {
                            "name": "ShellPage"
                        },
                        {
                            "name": "SpinnerLoaderComponent"
                        },
                        {
                            "name": "TechnicalRecordCreateComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_userServiceReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(UserServiceActions.Login, (state, { name }) => ({ username: name })),\n  on(UserServiceActions.Logout, (state) => (initialState)),\n)"
            },
            {
                "name": "adalConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "appReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/reducers/app.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<IAppState>",
                "defaultValue": "{\n  router: routerReducer,\n  loader: LoaderReducer,\n  vehicleTechRecordModel: VehicleTechRecordReducers,\n  vehicleTestResultModel: VehicleTestResultModelReducers,\n  referenceData: ReferenceDataReducers,\n  error: ErrorReducer,\n  appFormState: AppFormStateReducer,\n  modalState: ModalReducer\n}"
            },
            {
                "name": "APPROVAL_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['NTA', 'ECTA', 'IVA', 'NSSTA', 'ECSSTA']"
            },
            {
                "name": "AXLE_NUM_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
            },
            {
                "name": "baseConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/assets/config/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  appInsights: {\n    instrumentationKey: '#{appInsightsKey}'\n  },\n  logging: {\n    console: true,\n    appInsights: true\n  },\n  aad: {\n    requireAuth: true\n  },\n  adalConfig: {\n    cacheLocation: 'localStorage',\n    endpoints: {\n      api: 'xxx-bae6-4760-b434-xxx'\n    }\n  }\n}"
            },
            {
                "name": "BODY_TYPE_DESC",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'articulated',\r\n  'single decker',\r\n  'double decker',\r\n  'other',\r\n  'petrol/oil tanker',\r\n  'skeletal',\r\n  'tipper',\r\n  'box',\r\n  'flat',\r\n  'refuse',\r\n  'skip loader',\r\n  'refrigerated'\r\n]"
            },
            {
                "name": "BOOLEAN_RADIO_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ ['Yes']: true, ['No']: false }"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AppComponent,\n  ShellPage,\n  LandingPageComponent,\n  HeaderComponent,\n  FooterComponent,\n  TechnicalRecordCreateComponent,\n  SpinnerLoaderComponent,\n  MultipleRecordsContainer,\n  MultipleRecordsComponent,\n  LogoutModalComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/test-record/test-record.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  TestRecordComponent,\n  VehicleComponent,\n  TestSectionComponent,\n  DefectsComponent,\n  SeatbeltInstallationCheckComponent,\n  EmissionDetailsComponent,\n  VisitComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TestRecordContainer,\n  DefectsEditComponent,\n  VehicleEditComponent,\n  SeatbeltInstallationCheckEditComponent,\n  EmissionDetailsEditComponent,\n  NotesEditComponent,\n  VisitEditComponent,\n  TimeInputComponent,\n  TestSectionEditComponent,\n  SelectTestTypeComponent,\n  SelectTestTypeContainer,\n  TreeComponent\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  TechnicalRecordsContainer,\n  TechnicalRecordComponent,\n  RecordStatusComponent,\n  RecordStatusEditComponent,\n  RecordIdentificationComponent,\n  RecordIdentificationEditComponent,\n  VehicleSummaryComponent,\n  VehicleSummaryPsvComponent,\n  VehicleSummaryHgvComponent,\n  VehicleSummaryTrlComponent,\n  VehicleSummaryEditComponent,\n  TypeApprovalComponent,\n  NotesEditComponent,\n  BodyEditComponent,\n  BodyComponent,\n  BodyPsvComponent,\n  WeightsComponent,\n  WeightsPsvComponent,\n  WeightsEditComponent,\n  TyresComponent,\n  TyresEditComponent,\n  DimensionsComponent,\n  DimensionsEditComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TechRecHistoryComponent,\n  ApplicantComponent,\n  ApplicantEditComponent,\n  DocumentsComponent,\n  DocumentsEditComponent,\n  PlatesComponent,\n  BrakesComponent,\n  BrakesPsvComponent,\n  PurchaserComponent,\n  ManufacturerComponent,\n  AuthorisationIntoServiceComponent,\n  LettersOfAuthorisationComponent,\n  AxleBrakesComponent,\n  DdaComponent\n]"
            },
            {
                "name": "COMPOSABLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AdrComponent,\n  ApplicantDetailsComponent,\n  ApplicantDetailsEditComponent,\n  AdrDetailsComponent,\n  AdrDetailsEditComponent,\n  TankDetailsComponent,\n  TankDetailsEditComponent,\n  TankInpectionsComponent,\n  TankInspectionsEditComponent,\n  MemoComponent,\n  MemoEditComponent,\n  TankDocumentsComponent,\n  BatteryListApplicableComponent,\n  BatteryListApplicableEditComponent,\n  DeclarationSeenComponent,\n  DeclarationSeenEditComponent,\n  CertificateComponent,\n  CertificateEditComponent,\n  AdditionalAdrDetailsComponent,\n  AdditionalAdrDetailEditComponent\n]"
            },
            {
                "name": "createConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/assets/config/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(config) => merge({}, baseConfig, config)"
            },
            {
                "name": "defaultDelay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "3000"
            },
            {
                "name": "defaultMaxRetry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "3"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.deploy.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: ''\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: '',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: 'http://localhost:3005',\n  // apiUrl: 'https://api.develop.cvs.dvsacloud.uk'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: 'dev'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/environments/environment.deploy.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: 'deploy'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: 'prod',\n  production: true,\n  APIServerUri: 'http://localhost:3005',\n  APITestResultServerUri: 'http://localhost:3006'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: 'dev',\n  production: false,\n  APIServerUri: 'http://localhost:3005',\n  APITestResultServerUri: `http://localhost:3006`\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EXPLOSIVE_TYPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[EXPLOSIVES2, EXPLOSIVES3]"
            },
            {
                "name": "EXPLOSIVES2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Explosives (type 2)'"
            },
            {
                "name": "EXPLOSIVES3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Explosives (type 3)'"
            },
            {
                "name": "FITMENT_CODE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['double', 'single']"
            },
            {
                "name": "FORM_UTILS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/utils/form.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  addControlsToFormGroup\n}"
            },
            {
                "name": "FUEL_PROPULSION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'DieselPetrol',\r\n  'Hybrid',\r\n  'Electric',\r\n  'CNG',\r\n  'Fuel cell',\r\n  'LNG',\r\n  'Other'\r\n]"
            },
            {
                "name": "FUNCTION_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ ['Articulated']: 'a', ['Rigid']: 'r' }"
            },
            {
                "name": "getActiveRecord",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(techRecords: TechRecord[]): TechRecord => {\r\n  let record: TechRecord;\r\n\r\n  record = techRecords.find((tRecord) => tRecord.statusCode === RECORD_STATUS.CURRENT);\r\n  if (record) {\r\n    return record;\r\n  }\r\n\r\n  record = techRecords.find((tRecord) => tRecord.statusCode === RECORD_STATUS.PROVISIONAL);\r\n  if (record) {\r\n    return record;\r\n  }\r\n\r\n  record = techRecords\r\n    .filter((tRecord) => tRecord.statusCode === RECORD_STATUS.ARCHIVED)\r\n    .sort((a, b) => getDateNumber(b.createdAt) - getDateNumber(a.createdAt))[0];\r\n  if (record) {\r\n    return record;\r\n  }\r\n}"
            },
            {
                "name": "getActiveVehicleTechRecord",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  // getUserDetails,\r\n  getSelectedVehicleTechRecord,\r\n  (vehicleTechRecord) => (searchRecord: TechRecord = null): VehicleTechRecordEdit => {\r\n    if (vehicleTechRecord) {\r\n      const primaryVrm: VrmModel = vehicleTechRecord.vrms.find((vrm) => vrm.isPrimary);\r\n\r\n      return {\r\n        msUserDetails: null,\r\n        vin: vehicleTechRecord.vin,\r\n        primaryVrm: primaryVrm ? primaryVrm.vrm : '',\r\n        secondaryVrms: vehicleTechRecord.vrms\r\n          .filter((vrm) => !vrm.isPrimary)\r\n          .map((secondaryVrm) => secondaryVrm.vrm),\r\n        trailerId: vehicleTechRecord.trailerId,\r\n        techRecord: [getTechRecord(vehicleTechRecord.techRecord, searchRecord)]\r\n      };\r\n    }\r\n  }\r\n)"
            },
            {
                "name": "getAppFormState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppFormState) => state.pristine\n)"
            },
            {
                "name": "getCurrentModalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/modal/modal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFeature, (state: ModalState) => state)"
            },
            {
                "name": "getDateNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(strDate: string) => new Date(strDate).getTime()"
            },
            {
                "name": "getErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  error: `Unable to load data. Please contact the help desk or refresh the page to try again.`\n}"
            },
            {
                "name": "getErrors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/error.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFeature, (state: ErrorState) => state.errors)"
            },
            {
                "name": "getFilteredTestTypeCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  getTestTypeCategories,\n  (state: IVehicleTestResultModelState, testTypeCategories: TestTypeCategory[]) => {\n    let testRecord: TestResultModel;\n    let filteredCategories;\n\n    if (state.selectedTestResultModel) {\n      testRecord = state.selectedTestResultModel;\n      filteredCategories = testTypeCategories.filter((element: TestTypeCategory) => {\n        return filterCategories(element, testRecord);\n      });\n    }\n\n    filteredCategories = getTestTypeTree(filteredCategories, 0);\n\n    return filteredCategories;\n  }\n)"
            },
            {
                "name": "getInitialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): IAppState => initialAppState"
            },
            {
                "name": "getModalPayload",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/modal/modal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ModalState) => state.payload\n)"
            },
            {
                "name": "getPreparers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.preparers\n)"
            },
            {
                "name": "getRouterInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/route.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectReducerState, (state) => state.state)"
            },
            {
                "name": "getRouterParams",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/route.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectReducerState, (state) => {\r\n  if (!!state) {\r\n    return { params: state.state.params, queryParams: state.state.queryParams };\r\n  }\r\n})"
            },
            {
                "name": "getSelectedVehicleTechRecord",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.selectedVehicleTechRecord\r\n)"
            },
            {
                "name": "getSelectedVehicleTestResultModel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.selectedTestResultModel\n)"
            },
            {
                "name": "getTechRecord",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(techRecords: TechRecord[], searchRecord: TechRecord): TechRecord => {\r\n  if (searchRecord) {\r\n    return techRecords.find(\r\n      (vRecord) => getDateNumber(vRecord.createdAt) === getDateNumber(searchRecord.createdAt)\r\n    );\r\n  }\r\n\r\n  return getActiveRecord(techRecords);\r\n}"
            },
            {
                "name": "getTechViewState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.viewState\r\n)"
            },
            {
                "name": "getTestStations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.testStations\n)"
            },
            {
                "name": "getTestTypeCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.testTypeCategories\n)"
            },
            {
                "name": "getTestViewState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.editState\n)"
            },
            {
                "name": "getUserState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<UserServiceState>('userservice')"
            },
            {
                "name": "getVehicleTechRecordMetaData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  getSelectedVehicleTechRecord,\r\n  (vRecord: VehicleTechRecordModel) => vRecord.metadata\r\n)"
            },
            {
                "name": "getVehicleTestResultModel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.vehicleTestResultModel\n)"
            },
            {
                "name": "index",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/components/date-input/date-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "index",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/components/time-input/time-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "Initial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "initialAppFormState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppFormState",
                "defaultValue": "{\n  pristine: true\n}"
            },
            {
                "name": "initialAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IAppState",
                "defaultValue": "{\r\n  loader: initialLoaderState,\r\n  vehicleTechRecordModel: initialVehicleTechRecordModelState,\r\n  vehicleTestResultModel: initialVehicleTestResultModelState,\r\n  referenceData: initialReferenceDataState,\r\n  error: initialErrorState,\r\n  appFormState: initialAppFormState,\r\n  modalState: initialModalState\r\n}"
            },
            {
                "name": "initialErrorState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/reducers/error.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ErrorState",
                "defaultValue": "{\n  errors: []\n}"
            },
            {
                "name": "initialLoaderState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/Loader.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ILoaderState",
                "defaultValue": "{\n  loading: false,\n  status: null,\n  error: null\n}"
            },
            {
                "name": "initialModalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/modal/modal.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ModalState",
                "defaultValue": "{\n  currentModal: APP_MODALS.NONE\n}"
            },
            {
                "name": "initialReferenceDataState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/ReferenceDataState.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ReferenceDataState",
                "defaultValue": "{\n  preparers: null,\n  testStations: null,\n  testTypeCategories: null\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserServiceState",
                "defaultValue": "{\n  username: \"(Not logged in)\",\n}"
            },
            {
                "name": "initialVehicleTechRecordModelState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/VehicleTechRecordModel.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "VehicleTechRecordState",
                "defaultValue": "{\r\n  vehicleTechRecordModel: null,\r\n  selectedVehicleTechRecord: null,\r\n  viewState: VIEW_STATE.VIEW_ONLY\r\n}"
            },
            {
                "name": "initialVehicleTestResultModelState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/VehicleTestResultModel.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IVehicleTestResultModelState",
                "defaultValue": "{\n  vehicleTestResultModel: null,\n  selectedTestResultModel: null,\n  editState: VIEW_STATE.VIEW_ONLY,\n  error: null\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[User Service] Login', props<{ name: string; }>())"
            },
            {
                "name": "Logout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[User Service] Logout')"
            },
            {
                "name": "makeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/body/bodyList.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'A FARLOW ENGINEERING LTD',\n  'A HINGLEY',\n  'A MORAIS AND CA LTD',\n  'A SILVA MATOS',\n  'A&R',\n  'A1 INTERNATIONAL',\n  'AAA',\n  'AARON',\n  'ABBEY',\n  'ABEL SYSTEMS LTD',\n  'ABM TRAILERS',\n  'ABTS',\n  'ACE',\n  'ACHILEITNER',\n  'ACKERMANN-FRUEHAUF',\n  'ACOTE BOON',\n  'ACTM',\n  'ACTOMEX',\n  'ADAMOLI',\n  'ADCLIFFE',\n  'ADL',\n  'AE WILSON',\n  'AEC',\n  'AGA',\n  'AGRIMAC',\n  'AHC',\n  'AHG',\n  'AHP',\n  'AHT',\n  'AIR PRODUCTS',\n  'AKSOYLU',\n  'AL-KO KOBER',\n  'ALBION',\n  'ALEX PRICE',\n  'ALEXANDER',\n  'ALEXANDER/DENNIS',\n  'ALFA ROMEO',\n  'ALHU',\n  'ALIWELD LTD',\n  'ALKO',\n  'ALLAN FULLER LTD',\n  'ALTHAM',\n  'ALUMINIOS CASTELLANO MANCHEGOS',\n  'ALUVAN',\n  'AMERICAN LE FRANCE',\n  'AMH',\n  'AMT',\n  'ANCO',\n  'ANDOVER',\n  'ANKAI',\n  'APRILIA',\n  'ARB',\n  'ARCERBI',\n  'ARDAGH',\n  'ARGYLE',\n  'ARJ TRAILERS',\n  'ARMSTRONG & HOYLE',\n  'ARTIC',\n  'ASCENDANT',\n  'ASCHE',\n  'ASCHERSLEBEN',\n  'ASHCROFT',\n  'ASTA',\n  'ASTON MARTIN',\n  'ATHY',\n  'ATLAS',\n  'ATTACUS',\n  'AUDI',\n  'AUGUST SCHMIDT - HAGAN',\n  'AUSTIN',\n  'AUTO GALANTAS',\n  'AUTOSAN',\n  'AVALUX',\n  'AVIA',\n  'AVONDALE\t',\n  'AWD',\n  'AYATS',\n  'B.PRORAIL',\n  'B12K',\n  'BACKERS',\n  'BAILEY\t',\n  'BALE',\n  'BALE FABRICATIONS',\n  'BANNAS',\n  'BARREIRO',\n  'BARRUS\t',\n  'BARTOLETTI',\n  'BARUVAL',\n  'BARVICK',\n  'BARYVAL',\n  'BASCON',\n  'BASCONTRIZ',\n  'BATESON',\n  'BBC',\n  'BCI',\n  'BEATEX',\n  'BEATSON',\n  'BEDFORD',\n  'BEDFORD/MARSHALL',\n  'BEE',\n  'BEECHWOOD',\n  'BELLE',\n  'BELLE COACHWORKS',\n  'BEN COOPER',\n  'BENALU',\n  'BENCE',\n  'BENELLI',\n  'BENNINGHOVEN',\n  'BENTLEY',\n  'BERDEX',\n  'BERGER',\n  'BESPOKE',\n  'BICKERS TRAILER',\n  'BINGLEY BOAT',\n  'BISCHOFF',\n  'BIZIEN',\n  'BKF3.15',\n  'BLACKBURN',\n  'BLACKMORE',\n  'BLACKSTONE',\n  'BLACKWATER',\n  'BLUEBIRD',\n  'BLUEHARDT',\n  'BLUELINE',\n  'BMC',\n  'BMI TRAILER',\n  'BMMO',\n  'BMW',\n  'BOALLOY',\n  'BOC CRYOPLANT',\n  'BODEN',\n  'BOERNER WILDESHAUSEM',\n  'BOMBARDIER',\n  'BONALLACK',\n  'BONIFACE',\n  'BOOTH',\n  'BOUGHTON ENGINEERING LTD',\n  'BOVA',\n  'BOXLOADER',\n  'BPW',\n  'BRAMBER',\n  'BREINING',\n  'BREMACH',\n  'BREMAT',\n  'BRENDECK',\n  'BRIAB',\n  'BRIAN JAMES',\n  'BRIDGE',\n  'BRIDGE BODIES',\n  'BRISTOL',\n  'BRITCOM INTERNATIONAL',\n  'BROCKHOUSE',\n  'BROOKLAND SPEED',\n  'BROOKSIDE ENG',\n  'BROSHUIS',\n  'BROUGHAN',\n  'BRUCE COOK',\n  'BSL',\n  'BSLT',\n  'BT TRAILERS',\n  'BTC',\n  'BTS',\n  'BUCA',\n  'BUCHER',\n  'BUCKSTONE GROUP',\n  'BUELL',\n  'BULK WASTE TRAILER',\n  'BULTHUIS',\n  'BURG',\n  'BURGERS',\n  'BUTTERFIELD',\n  'BYD',\n  'CALDAL',\n  'CAMEO',\n  'CAMERON',\n  'CAMPBELL',\n  'CANNON',\n  'CARAVANAS RIOJA',\n  'CARDI',\n  'CARMICHAEL\t',\n  'CAT',\n  'CB',\n  'CB COTTINGHAM',\n  'CCFC',\n  'CF',\n  'CHARGE',\n  'CHASSIS DEVELOPMENT LTD',\n  'CHEREAU',\n  'CHEVROLET',\n  'CHRYSLER',\n  'CITROEN',\n  'CLAYTON',\n  'COLT',\n  'COMET',\n  'COMMER',\n  'COMPASS',\n  'COUNTY TRACTORS',\n  'CRANE FRUEHAUF',\n  'CRAVEN TASKER',\n  'CROMPTON',\n  'CROSSLEY',\n  'CSEPEL',\n  'CVB LTD',\n  'CVE',\n  'DAEWOO',\n  'DAF',\n  'DAIMLER',\n  'DENNIS',\n  'DENNIS/TRANSBUS',\n  'DENNISON',\n  'DESIGNLINE',\n  'DEVAN',\n  'DIAHATSU',\n  'DODGE',\n  'DON BUR',\n  'DROGMOLLER',\n  'DUCATI\t',\n  'DUPLE',\n  'DUPLE/PLAXTON',\n  'EBRO',\n  'ELDDIS',\n  'ENASA PEGASA',\n  'ENTERPRISE BUS LTD',\n  'ERF',\n  'ESTEPE',\n  'EUROBUS(UK) LTD',\n  'EVOBUS',\n  'FAW',\n  'FERRARI',\n  'FIAT',\n  'FLEUR DE LYS',\n  'FODEN',\n  'FORD',\n  'FORD TRANSIT',\n  'FREIGHT ROVER',\n  'FREIGHTLINER',\n  'FUSO',\n  'GAC',\n  'GENERAL MOTORS',\n  'GENERAL TRAILERS',\n  'GMC',\n  'GRAFTON',\n  'GRANNING',\n  'GRAY & ADAMS',\n  'GUY',\n  'HAGGLUND',\n  'HARLEY DAVIDSON',\n  'HIGER',\n  'HINO',\n  'HOME BUILT',\n  'HONDA',\n  'HOYNER\t',\n  'HUMMER',\n  'HYUNDAI',\n  'IFA MOTOREN',\n  'IFOR WILLIAMS',\n  'IKARUS',\n  'INTER LOAD STAR',\n  'INTERNATIONAL',\n  'IRISBUS',\n  'IRIZAR',\n  'ISUZU',\n  'IVECO',\n  'JAGUAR',\n  'JCB',\n  'JEEP',\n  'JOHN DEERE',\n  'JOHNSTON',\n  'JONCKHEERE',\n  'JSH',\n  'KASSBOHRER',\n  'KAWASAKI',\n  'KENWORTH',\n  'KIA',\n  'KING LONG',\n  'KIRN',\n  'KOGEL',\n  'KRONE',\n  'LAG',\n  'LAMBERET',\n  'LANCIA',\n  'LANDROVER',\n  'LAVERDA',\n  'LDV',\n  'LEYLAND',\n  'LOHR',\n  'LOTUS',\n  'LTI',\n  'LYNTON',\n  'M & G',\n  'MACK',\n  'MAGIRUS',\n  'MAGIRUS DEUTZ',\n  'MAN',\n  'MARBUS',\n  'MASARATI',\n  'MASSEY\t',\n  'MASSEY FERGUSON',\n  'MATBRO',\n  'MATHIEU',\n  'MAZDA',\n  'MCW',\n  'MERCEDES BENZ',\n  'METROCAB',\n  'MG',\n  'MITSUBISHI',\n  'MOL',\n  'MONTENEGRO',\n  'MONTRACON',\n  'MORGAN',\n  'MORRIS',\n  'MORRISON',\n  'MOSELEY',\n  'MOTO GUZZI',\n  'MOWAG',\n  'MULTICAR',\n  'MV AGUSTA',\n  'NEOMAN',\n  'NEOPLAN',\n  'NISSAN',\n  'NOOTEBOOM',\n  'NORTON',\n  'OMNIBUS',\n  'OMNINOVA',\n  'OPTARE',\n  'OTOKAR',\n  'PETERBILT',\n  'PEUGEOT',\n  'PINZGAUER',\n  'PLASTISOL',\n  'PLAXTON',\n  'PORSCHE',\n  'PROTON\tN',\n  'QUEST',\n  'RANGE ROVER',\n  'RAVO',\n  'RENAULT',\n  'REYONOLDS BOUGHTON',\n  'ROBERTS LEYLAND',\n  'ROLLS ROYCE',\n  'ROVER',\n  'ROYAL ENFIELD',\n  'SAAB',\n  'SALVADOR CAETENO',\n  'SANOS',\n  'SCAMMELL',\n  'SCANIA',\n  'SCHMITZ',\n  'SCHORLING',\n  'SCHWARZMULLER',\n  'SD',\n  'SEAT',\n  'SEDDON',\n  'SEDDON ATKINSON',\n  'SENTINEL',\n  'SETRA',\n  'SEV',\n  'SHELVOKE & DREWRY',\n  'SINOTRUK',\n  'SKODA',\n  'SOLBUS',\n  'SPARTAN',\n  'STANDARD',\n  'STERLING',\n  'STEYR',\n  'SUBARU',\n  'SUPACAT',\n  'SUZUKI',\n  'SWIFT',\n  'TALBOT',\n  'TAM',\n  'TATA\t',\n  'TATRA',\n  'TAZ',\n  'TBI',\n  'TECHNOBUS',\n  'TEMSA',\n  'TERBERG',\n  'TESTING',\n  'TILLING STEVENS',\n  'TIRSAN\t',\n  'TOYOTA',\n  'TRIUMPH',\n  'TROJAN',\n  'TSE',\n  'TVAC',\n  'TVR',\n  'UNIC IVECO',\n  'UNVI',\n  'URAL',\n  'VAN HOOL',\n  'VAUXHALL',\n  'VDL',\n  'VESPA',\n  'VOLKSWAGEN',\n  'VOLVO',\n  'WARD',\n  'WEIGHTLIFTER',\n  'WESTERN STAR',\n  'WHITE',\n  'WIERDA VOERTUIG TECKNIEK',\n  'WILSON',\n  'WRIGHTBUS',\n  'YAMAHA',\n  'YORK',\n  'YUTONG',\n  'ZASTAVA',\n  'ZETOR'\n]"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<MetaReducer<any, any>>",
                "defaultValue": "[localStorageSyncReducer]"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production ? [] : []"
            },
            {
                "name": "MICROFILM_DOCUMENT_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'PSV Miscellaneous',\r\n  'AAT - Trailer Annual Test',\r\n  'AIV - HGV International App',\r\n  'COIF Modification',\r\n  'Trailer COC + Int Plate',\r\n  'RCT - Trailer Test Cert paid',\r\n  'HGV COC + Int Plate',\r\n  'PSV Carry/Auth, OMO Report',\r\n  'AIT - Trailer International App',\r\n  'IPV - HGV EEC Plate/Cert',\r\n  'XCV - HGV Test Cert free',\r\n  'AAV - HGV Annual Test',\r\n  'COIF Master',\r\n  'Tempo 100 Sp Ord',\r\n  'Deleted',\r\n  'PSV N/ALT',\r\n  'XPT - Tr Plating Cert paid',\r\n  'FFV - HGV First Test',\r\n  'Repl Vitesse 100',\r\n  'TCV - HGV Test Cert',\r\n  'ZZZ - Miscellaneous',\r\n  'Test Certificate',\r\n  'XCT - Trailer Test Cert free',\r\n  'C52 - COC and VTG52A',\r\n  'Tempo 100 Report',\r\n  'Main File Amendment',\r\n  'PSV Doc',\r\n  'PSV COC',\r\n  'PSV Repl COC',\r\n  'TAV - COC',\r\n  'NPT - Trailer Alteration',\r\n  'OMO Certificate',\r\n  'PSV Repl COIF',\r\n  'PSV Repl COF',\r\n  'COIF Application',\r\n  'XPV - HGV Plating Cert Free',\r\n  'TCT - Trailer Test Cert',\r\n  'Tempo 100 App',\r\n  'PSV Decision on N/ALT',\r\n  'Special Order PSV',\r\n  'NPV - HGV Alteration',\r\n  'No Description Found',\r\n  'Vitesse 100 Sp Ord',\r\n  'Brake Test Details',\r\n  'COIF Productional',\r\n  'RDT - Test Disc Paid',\r\n  'RCV - HGV Test Cert',\r\n  'FFT - Trailer First Test',\r\n  'IPT - Trailer EEC Plate/Cert',\r\n  'XDT - Test Disc Free',\r\n  'PRV - HGV Plating Cert paid',\r\n  'COF Cert, PRT - Tr Plating Cert paid',\r\n  'Tempo 100 Permit'\r\n]"
            },
            {
                "name": "MODULES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/test-record/test-record.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  RouterModule.forChild([\n    {\n      path: 'test-record/:id',\n      component: TestRecordContainer,\n      canActivate: [\n        AuthenticationGuard,\n        TestResultGuard,\n        PreparersGuard,\n        TestStationsGuard,\n        FormStateGuard\n      ]\n    },\n    {\n      path: 'select-test-type/:id',\n      component: SelectTestTypeContainer,\n      canActivate: [TestTypeCategoriesGuard]\n    }\n  ]),\n  EffectsModule.forFeature([VehicleTestResultModelEffects]),\n  SharedModule,\n  LibrariesModule,\n  ReactiveFormsModule,\n  MaterialModule\n]"
            },
            {
                "name": "PIPES_AND_COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AdrReasonModalComponent,\n  DateInputComponent,\n  AutocompleteComponent,\n  PageNotFoundComponentComponent,\n  PreventLeavePageModalComponent,\n  ErrorSummaryComponent,\n  FormConnectorDirective,\n  DialogBoxComponent,\n  DialogBoxConfirmationComponent,\n  DialogMinistryPlatesComponent,\n  MinistryPlatesComponent,\n\n  IsPrimaryVrmPipe,\n  FilterRecordPipe,\n  DisplayOptionsPipe,\n  OrderByStatusPipe,\n  DefaultNullOrEmpty,\n  SortByDatePipe,\n  FilterMultipleRecordsPipe,\n  DisplayByDelimiter,\n  CapitalizeString\n]"
            },
            {
                "name": "PIPES_AND_COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/directives/directives.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[BackButtonDirective, NullValueDirective]"
            },
            {
                "name": "PIPES_AND_COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/shared/libraries/libraries.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[AccordionComponent, AccordionItemComponent]"
            },
            {
                "name": "PLATE_ISSUE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ['Original']: 'Issue original certificate',\r\n  ['Replacement']: 'Issue replacement'\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {}\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/home/home.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n  },\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/home/home-button/home-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n  },\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {}\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n    username: 'username'\n  }\n})"
            },
            {
                "name": "PRODUCT_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'productList'"
            },
            {
                "name": "RECORD_COMPLETENESS_complete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/app.enums.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'complete'"
            },
            {
                "name": "RECORD_COMPLETENESS_skeleton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/app.enums.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'skeleton'"
            },
            {
                "name": "RECORD_COMPLETENESS_testable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/app.enums.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'testable'"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<State>",
                "defaultValue": "{\n  \"userservice\": UserServiceReducer\n}"
            },
            {
                "name": "ROOT_EFFECTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/state/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  VehicleTechRecordModelEffects,\r\n  ModalEffects,\r\n  AppFormEffects,\r\n  RouterEffects\r\n]"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/modal/modal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ModalState>('modalState')"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ReferenceDataState>('referenceData')"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<VehicleTechRecordState>(\r\n  'vehicleTechRecordModel'\r\n)"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IVehicleTestResultModelState>(\n  'vehicleTestResultModel'\n)"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppFormState>('appFormState')"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/error.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ErrorState>('error')"
            },
            {
                "name": "selectReducerState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/route.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<RouterReducerState<RouterStateUrl>>(\r\n  'router'\r\n)"
            },
            {
                "name": "selectTestTypeById",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(id: string) =>\n  createSelector(selectFeature, (state: IVehicleTestResultModelState) => {\n    let testType: TestType;\n    let testRecord: TestResultModel;\n\n    if (state.selectedTestResultModel) {\n      testRecord = state.selectedTestResultModel;\n\n      testType = state.selectedTestResultModel.testTypes.filter(\n        (testTypeRes: TestType) => testTypeRes.testNumber === id\n      )[0];\n    }\n    const test: TestRecordTestType = { testType, testRecord };\n    return test;\n  })"
            },
            {
                "name": "selectVehicleTechRecordModelHavingStatusAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.vehicleTechRecordModel\r\n)"
            },
            {
                "name": "STATEMENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'statement'"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {}\n})"
            },
            {
                "name": "TEST_MODEL_UTILS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/utils/test-model.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  mockTestRecord,\n  mockTestType,\n  mockTestTypeCategory\n}"
            },
            {
                "name": "TEST_TYPE_APPLICABLE_UTILS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  mockTestTypesApplicable\n}"
            },
            {
                "name": "TESTING_UTILS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/utils/testing.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  mockApplicantDetails,\n  mockFormGroupDirective,\n  mockVehicleDetails,\n  mockAdrDetails,\n  mockTank,\n  mockTankDetails,\n  mockTc2Details,\n  mockTc3Details,\n  mockMetaData,\n  mockTechRecord,\n  mockApplicant,\n  mockMicrofilm,\n  mockPlates,\n  mockAuthoIntoService,\n  mockLettersOfAuth,\n  mockPurchaser,\n  mockManufacturer,\n  mockAxle,\n  mockBrakes,\n  mockBodyType,\n  mockAxleSpacing,\n  mockDDA,\n  mockBrakeForceWheelsNotLocked,\n  mockBrakeForceWheelsUpToHalfLocked,\n  mockDimensions\n}",
                "rawdescription": "*******************SOME GROUND RULES*************************************\n\n\nWe use this util file essentially for unit testing to enable a clean mock object provision\nfor our unit testing. Ideally more simplified object should/can be added.\nAmendments of returned object should be done less often or not at ALL. We use\npartial<T> object implementation hence the required object update(s) should be\npassed in from the specific unit test of interest.",
                "description": "<p><em><strong><strong><strong><strong><strong><strong><strong><strong><strong>SOME GROUND RULES</strong></strong></strong></strong></strong></strong></strong></strong></strong></em>******************</p>\n<p>We use this util file essentially for unit testing to enable a clean mock object provision\nfor our unit testing. Ideally more simplified object should/can be added.\nAmendments of returned object should be done less often or not at ALL. We use\npartial<T> object implementation hence the required object update(s) should be\npassed in from the specific unit test of interest.</p>\n"
            },
            {
                "name": "username",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user-service/user-service.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(getUserState, (state) => state.username)"
            },
            {
                "name": "UUID_REGEX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}/g"
            },
            {
                "name": "VEHICLE_CLASS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'motorbikes over 200cc or with a sidecar',\r\n  'not applicable',\r\n  'small psv (ie: less than or equal to 22 seats)',\r\n  'motorbikes up to 200cc',\r\n  'trailer',\r\n  'large psv(ie: greater than 23 seats)',\r\n  '3 wheelers',\r\n  'heavy goods vehicle',\r\n  'MOT class 4',\r\n  'MOT class 7',\r\n  'MOT class 5',\r\n  'PSV of unknown or unspecified size',\r\n  'Not Known'\r\n]"
            },
            {
                "name": "VEHICLE_CONFIGURATION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'rigid',\r\n  'articulated',\r\n  'centre axle drawbar',\r\n  'semi-car transporter',\r\n  'semi-trailer',\r\n  'low loader',\r\n  'other',\r\n  'drawbar',\r\n  'four-in-line',\r\n  'dolly',\r\n  'full drawbar'\r\n]"
            },
            {
                "name": "VEHICLE_EUCATEGORY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "archive/src/app/technical-record/technical-record.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  'm1',\r\n  'm2',\r\n  'm3',\r\n  'n1',\r\n  'n2',\r\n  'n3',\r\n  'o1',\r\n  'o2',\r\n  'o3',\r\n  'o4',\r\n  'l1e-a',\r\n  'l1e',\r\n  'l2e',\r\n  'l3e',\r\n  'l4e',\r\n  'l5e',\r\n  'l6e',\r\n  'l7e'\r\n]"
            }
        ],
        "functions": [
            {
                "name": "addControlsToFormGroup",
                "file": "archive/src/app/utils/form.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "listOfFields",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "formGroup",
                        "type": "FormGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "listOfFields",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AppFormStateReducer",
                "file": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "AppFormState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialAppFormState"
                    },
                    {
                        "name": "action",
                        "type": "AppFormStateActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "AppFormState",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "AppFormState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialAppFormState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "AppFormStateActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "delayedRetry",
                "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Observable<any>"
            },
            {
                "name": "ErrorReducer",
                "file": "archive/src/app/store/reducers/error.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ErrorState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialErrorState"
                    },
                    {
                        "name": "action",
                        "type": "ErrorActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ErrorState",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ErrorState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialErrorState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "ErrorActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "filterCategories",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "category",
                        "type": "TestTypeCategory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "testRecord",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "category",
                        "type": "TestTypeCategory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "testRecord",
                        "type": "TestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getQueryString",
                "file": "archive/src/app/guards/form-state.guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParams",
                        "type": "Params",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "queryParams",
                        "type": "Params",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getResolvedUrl",
                "file": "archive/src/app/guards/form-state.guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRouteSnapshot",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRouteSnapshot",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getTestTypeTree",
                "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "filteredCategories",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "level",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "filteredCategories",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "level",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "initializeApp",
                "file": "archive/src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "LoaderReducer",
                "file": "archive/src/app/store/reducers/Loader.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialLoaderState"
                    },
                    {
                        "name": "action",
                        "type": "LoadingActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ILoaderState",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialLoaderState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "LoadingActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "localStorageSyncReducer",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "reducer",
                        "type": "ActionReducer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ActionReducer<any>",
                "jsdoctags": [
                    {
                        "name": "reducer",
                        "type": "ActionReducer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAdditionalNotes",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AdditionalNotes",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAddressInformation",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AddressInformation",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAdrDetails",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AdrDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockApplicant",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Applicant",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockApplicantDetails",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "ApplicantDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAuthoIntoService",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AuthIntoService",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAxle",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Axle",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAxleBrakes",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AxleBrakes",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockAxleSpacing",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "AxleSpacing",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockBodyType",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "BodyType",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockBrakeForceWheelsNotLocked",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "BrakeForceWheelsNotLocked",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockBrakeForceWheelsUpToHalfLocked",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "BrakeForceWheelsUpToHalfLocked",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockBrakes",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Brakes",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockDDA",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "DDA",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockDimensions",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Dimensions",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockFormGroupDirective",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}"
                    }
                ],
                "returnType": "FormGroupDirective",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockLettersOfAuth",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "LettersOfAuth",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockManufacturer",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "ManufacturerDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockMetaData",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "MetaData"
            },
            {
                "name": "mockMicrofilm",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Microfilm",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockPlates",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Plate",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockPurchaser",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "PurchaserDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTank",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Tank",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTankDetails",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "TankDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTc2Details",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Tc2Details",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTc3Details",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Tc3Details",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTechRecord",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "TechRecord",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTestRecord",
                "file": "archive/src/app/utils/test-model.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "TestResultModel",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTestType",
                "file": "archive/src/app/utils/test-model.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "TestType",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTestTypeCategory",
                "file": "archive/src/app/utils/test-model.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "TestTypeCategory",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockTestTypesApplicable",
                "file": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "mockTyres",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Tyres",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockVehicleDetails",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "VehicleDetails",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mockWeights",
                "file": "archive/src/app/utils/testing.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Weights",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ModalReducer",
                "file": "archive/src/app/modal/modal.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ModalState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialModalState"
                    },
                    {
                        "name": "action",
                        "type": "ModalStateActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ModalState",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ModalState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialModalState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "ModalStateActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "msAdalAngular6ConfigFactory",
                "file": "archive/src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "MSALGuardConfigFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "MsalGuardConfiguration"
            },
            {
                "name": "MSALInstanceFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "IPublicClientApplication"
            },
            {
                "name": "MSALInterceptorConfigFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "MsalInterceptorConfiguration"
            },
            {
                "name": "pad",
                "file": "archive/src/app/shared/components/date-input/date-input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "num",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "num",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ReferenceDataReducers",
                "file": "archive/src/app/store/reducers/ReferenceData.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialReferenceDataState"
                    },
                    {
                        "name": "action",
                        "type": "ReferenceDataActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialReferenceDataState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "ReferenceDataActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "scrollToSection",
                "file": "archive/src/app/utils/utils.functions.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "sections",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sectionTitle",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "sections",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sectionTitle",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "UserServiceReducer",
                "file": "src/app/user-service/user-service.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "UserServiceState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "UserServiceState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "VehicleTechRecordReducers",
                "file": "archive/src/app/store/reducers/VehicleTechRecordModel.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialVehicleTechRecordModelState"
                    },
                    {
                        "name": "action",
                        "type": "VehicleTechRecordActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "VehicleTechRecordState",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialVehicleTechRecordModelState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "VehicleTechRecordActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "VehicleTestResultModelReducers",
                "file": "archive/src/app/store/reducers/VehicleTestResultModel.reducers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialVehicleTestResultModelState"
                    },
                    {
                        "name": "action",
                        "type": "VehicleTestResultModelActions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialVehicleTestResultModelState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "VehicleTestResultModelActions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AppFormStateActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SetAppFormDirty | SetAppFormPristine",
                "file": "archive/src/app/store/actions/app-form-state.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ErrorActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SetErrorMessage | ClearErrorMessage",
                "file": "archive/src/app/store/actions/Error.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "LoadingActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "LoadingTrue | LoadingFalse",
                "file": "archive/src/app/store/actions/Loader.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ModalStateActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "LoadModal | ResetModal | ChangeView",
                "file": "archive/src/app/modal/modal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ReferenceDataActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "LoadPreparers | LoadTestStations | LoadPreparersSuccess | LoadTestStationsSuccess | LoadTestTypeCategoriesSuccess",
                "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "VehicleTechRecordActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "GetVehicleTechRecordHavingStatusAll | GetVehicleTechRecordHavingStatusAllSuccess | SetVehicleTechRecordOnCreate | CreateVehicleTechRecord | UpdateVehicleTechRecord | UpdateVehicleTechRecordSuccess | SetSelectedVehicleTechnicalRecord | SetSelectedVehicleTechRecordSuccess | SetViewState",
                "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "VehicleTestResultModelActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "GetVehicleTestResultModel | GetVehicleTestResultModelSuccess | GetVehicleTestResultModelFailure | SetTestViewState | UpdateTestResult | UpdateTestResultSuccess | SetSelectedTestResultModel | SetSelectedTestResultModelSuccess | UpdateSelectedTestResultModel | UpdateSelectedTestResultModelSuccess | DownloadCertificate",
                "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "ANNIVERSARY_DATE_APPLICABLE",
                "childs": [
                    {
                        "name": "Annual Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "Class 6A seat belt installation check (annual test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "3"
                    },
                    {
                        "name": "Class 6A seat belt installation check (first test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "4"
                    },
                    {
                        "name": "Paid annual test retest ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "7"
                    },
                    {
                        "name": "Paid retest with Class 6A seat belt installation check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "8"
                    },
                    {
                        "name": "Part paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "14"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "18"
                    },
                    {
                        "name": "Part-paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "21"
                    },
                    {
                        "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "27"
                    },
                    {
                        "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "28"
                    },
                    {
                        "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "93"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "76"
                    },
                    {
                        "name": "First Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "95"
                    },
                    {
                        "name": "Annual Test HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "94"
                    },
                    {
                        "name": "Paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "53"
                    },
                    {
                        "name": "Part paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "54"
                    },
                    {
                        "name": "Paid first test retest HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "65"
                    },
                    {
                        "name": "Part paid first test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "66"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "70"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "79"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "82"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "83"
                    },
                    {
                        "name": "First Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "41"
                    },
                    {
                        "name": "Annual Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "40"
                    },
                    {
                        "name": "Paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "98"
                    },
                    {
                        "name": "Part paid annual test retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "99"
                    },
                    {
                        "name": "Free first test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "67"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "107"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "113"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "116"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "119"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "120"
                    },
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "APP_MODALS",
                "childs": [
                    {
                        "name": "LOSE_CHANGES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "lose-changes"
                    },
                    {
                        "name": "REASON_FOR_CHANGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "reason-for-change"
                    },
                    {
                        "name": "REASON_FOR_DELETED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "reason-for-delete"
                    },
                    {
                        "name": "LOGOUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "logout"
                    },
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "CERTIFICATE_APPLICABLE",
                "childs": [
                    {
                        "name": "Annual Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "Class 6A seat belt installation check (annual test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "3"
                    },
                    {
                        "name": "Class 6A seat belt installation check (first test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "4"
                    },
                    {
                        "name": "Paid annual test retest ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "7"
                    },
                    {
                        "name": "Paid retest with Class 6A seat belt installation check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "8"
                    },
                    {
                        "name": "Part paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "14"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "18"
                    },
                    {
                        "name": "Part-paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "21"
                    },
                    {
                        "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "27"
                    },
                    {
                        "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "28"
                    },
                    {
                        "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "93"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "76"
                    },
                    {
                        "name": "First Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "95"
                    },
                    {
                        "name": "Annual Test HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "94"
                    },
                    {
                        "name": "Paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "53"
                    },
                    {
                        "name": "Part paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "54"
                    },
                    {
                        "name": "Paid first test retest HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "65"
                    },
                    {
                        "name": "Part paid first test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "66"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "70"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "79"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "82"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "83"
                    },
                    {
                        "name": "First Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "41"
                    },
                    {
                        "name": "Annual Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "40"
                    },
                    {
                        "name": "Paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "98"
                    },
                    {
                        "name": "Part paid annual test retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "99"
                    },
                    {
                        "name": "Free first test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "67"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "107"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "113"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "116"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "119"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "120"
                    },
                    {
                        "name": "ADR test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "50"
                    },
                    {
                        "name": "Paid ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "59"
                    },
                    {
                        "name": "Free ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "60"
                    },
                    {
                        "name": "Paid road worthiness retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "62"
                    },
                    {
                        "name": "Part paid road worthiness retest HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "63"
                    },
                    {
                        "name": "Paid road worthiness retest TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "101"
                    },
                    {
                        "name": "Voluntary road worthiness test HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "122"
                    },
                    {
                        "name": "Voluntary road worthiness test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "91"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "44"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "39"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "45"
                    },
                    {
                        "name": "TIR test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "49"
                    },
                    {
                        "name": "Paid TIR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "56"
                    },
                    {
                        "name": "Free TIR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "57"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "CHECKER",
                "childs": [
                    {
                        "name": "BATTERY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "battery"
                    },
                    {
                        "name": "TANK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tank"
                    },
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "na"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts"
            },
            {
                "name": "COUNTRY_OF_REGISTRATION",
                "childs": [
                    {
                        "name": "gb",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Great Britain and Northern Ireland - GB"
                    },
                    {
                        "name": "gba",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Alderney - GBA"
                    },
                    {
                        "name": "gbg",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Guernsey - GBG"
                    },
                    {
                        "name": "gbj",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Jersey - GBJ"
                    },
                    {
                        "name": "gbm",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Isle of Man - GBM"
                    },
                    {
                        "name": "gbz",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Gibraltar - GBZ"
                    },
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Austria - A"
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Belgium - B"
                    },
                    {
                        "name": "bih",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Bosnia and Herzegovina - BIH"
                    },
                    {
                        "name": "bg",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Bulgaria - BG"
                    },
                    {
                        "name": "hr",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Croatia - HR"
                    },
                    {
                        "name": "cy",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Cyprus - CY"
                    },
                    {
                        "name": "cz",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Czech Republic - CZ"
                    },
                    {
                        "name": "dk",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Denmark - DK"
                    },
                    {
                        "name": "est",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Estonia - EST"
                    },
                    {
                        "name": "fin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Finland - FIN"
                    },
                    {
                        "name": "f",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "France - F"
                    },
                    {
                        "name": "d",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Germany - D"
                    },
                    {
                        "name": "gr",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Greece - GR"
                    },
                    {
                        "name": "h",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Hungary - H"
                    },
                    {
                        "name": "irl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Ireland - IRL"
                    },
                    {
                        "name": "i",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Italy - I"
                    },
                    {
                        "name": "lv",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Latvia - LV"
                    },
                    {
                        "name": "lt",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Lithuania - LT"
                    },
                    {
                        "name": "l",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Luxembourg - L"
                    },
                    {
                        "name": "m",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Malta - M"
                    },
                    {
                        "name": "nl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Netherlands - NL"
                    },
                    {
                        "name": "n",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Norway - N"
                    },
                    {
                        "name": "pl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Poland - PL"
                    },
                    {
                        "name": "p",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Portugal - P"
                    },
                    {
                        "name": "ro",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Romania - RO"
                    },
                    {
                        "name": "sk",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Slovakia - SK"
                    },
                    {
                        "name": "slo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Slovenia - SLO"
                    },
                    {
                        "name": "e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Spain - E"
                    },
                    {
                        "name": "s",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Sweden - S"
                    },
                    {
                        "name": "ch",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Switzerland - CH"
                    },
                    {
                        "name": "non-eu",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Non EU"
                    },
                    {
                        "name": "not-known",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Country Not Known"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "CREATE_PAGE_LABELS",
                "childs": [
                    {
                        "name": "CREATE_VRM_LABEL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle registration mark (VRM)"
                    },
                    {
                        "name": "CREATE_VRM_LABEL_OPTIONAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle registration mark (VRM - optional)"
                    },
                    {
                        "name": "CREATE_VIN_LABEL_ERROR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "A technical record with this VIN already exists, check the VIN or change the existing technical record"
                    },
                    {
                        "name": "CREATE_VRM_LABEL_ERROR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "A technical record with this VRM already exists, check the VRM or change the existing technical record"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "DEFECTS_APPLICABLE",
                "childs": [
                    {
                        "name": "Notifiable alteration check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "38"
                    },
                    {
                        "name": "Voluntary brake test1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "30"
                    },
                    {
                        "name": "Voluntary multi check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "33"
                    },
                    {
                        "name": "Voluntary speed limiter check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "34"
                    },
                    {
                        "name": "Voluntary smoke test2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "32"
                    },
                    {
                        "name": "Voluntary headlamp aim check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "31"
                    },
                    {
                        "name": "Vitesse 100 Replacement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "100"
                    },
                    {
                        "name": "Vitesse 100 Application",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "121"
                    },
                    {
                        "name": "Voluntary Tempo 100",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "36"
                    },
                    {
                        "name": "Voluntary multi-check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "86"
                    },
                    {
                        "name": "Voluntary Speed limiter check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "88"
                    },
                    {
                        "name": "Voluntary smoke test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "89"
                    },
                    {
                        "name": "Voluntary headlamp aim test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "90"
                    },
                    {
                        "name": "Paid TIR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "56"
                    },
                    {
                        "name": "TIR test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "49"
                    },
                    {
                        "name": "Paid ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "59"
                    },
                    {
                        "name": "Free ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "60"
                    },
                    {
                        "name": "ADR test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "50"
                    },
                    {
                        "name": "Voluntary Shaker plate check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "87"
                    },
                    {
                        "name": "Free notifiable alteration",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "47"
                    },
                    {
                        "name": "Paid notifiable alteration",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "48"
                    },
                    {
                        "name": "Voluntary brake test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "85"
                    },
                    {
                        "name": "Free TIR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "57"
                    },
                    {
                        "name": "Low Emissions Certificate1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "39"
                    },
                    {
                        "name": "Low Emissions Certificate3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "45"
                    },
                    {
                        "name": "Low Emissions Certificate2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "44"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "EAppFormStateActions",
                "childs": [
                    {
                        "name": "SetAppFormDirty",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SetAppFormDirty"
                    },
                    {
                        "name": "SetAppFormPristine",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SetAppFormPristine"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/app-form-state.actions.ts"
            },
            {
                "name": "EErrorActions",
                "childs": [
                    {
                        "name": "SetErrorMessage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Error] Set"
                    },
                    {
                        "name": "ClearErrorMessage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Error] Clear"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/Error.actions.ts"
            },
            {
                "name": "ELoadingActions",
                "childs": [
                    {
                        "name": "AppIsLoading",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Loading] True"
                    },
                    {
                        "name": "AppIsNotLoading",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Loading] False"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/Loader.actions.ts"
            },
            {
                "name": "EMISSION_DETAILS_APPLICABLE",
                "childs": [
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "44"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "39"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "45"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "EMISSION_STANDARD",
                "childs": [
                    {
                        "name": "EMISSION_STANDARD_1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0.10 g/kWh Euro 3 PM"
                    },
                    {
                        "name": "EMISSION_STANDARD_2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0.03 g/kWh Euro IV PM"
                    },
                    {
                        "name": "EMISSION_STANDARD_3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Euro 3"
                    },
                    {
                        "name": "EMISSION_STANDARD_4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Euro 4"
                    },
                    {
                        "name": "EMISSION_STANDARD_5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Euro 6"
                    },
                    {
                        "name": "EMISSION_STANDARD_6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Euro VI"
                    },
                    {
                        "name": "EMISSION_STANDARD_7",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Full Electric"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EModalStateActions",
                "childs": [
                    {
                        "name": "LoadModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Load] Modal"
                    },
                    {
                        "name": "ResetModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Reset] Modal"
                    },
                    {
                        "name": "ChangeView",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ChangeView] Modal"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/modal/modal.actions.ts"
            },
            {
                "name": "EReferenceDataActions",
                "childs": [
                    {
                        "name": "LoadPreparers",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LoadPreparers"
                    },
                    {
                        "name": "LoadPreparersSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Preparers Guard] LoadPreparersSuccess"
                    },
                    {
                        "name": "LoadTestStations",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LoadTestStations"
                    },
                    {
                        "name": "LoadTestStationsSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestStation Guard] LoadTestStationsSuccess"
                    },
                    {
                        "name": "LoadTestTypeCategoriesSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/ReferenceData.actions.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_CAR",
                "childs": [
                    {
                        "name": "M1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "M1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_HGV",
                "childs": [
                    {
                        "name": "N2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "N2"
                    },
                    {
                        "name": "N3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "N3"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_LGV",
                "childs": [
                    {
                        "name": "N1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "N1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_MOTORCYCLE",
                "childs": [
                    {
                        "name": "L1eA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L1eA"
                    },
                    {
                        "name": "L1e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L1e"
                    },
                    {
                        "name": "L2e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L2e"
                    },
                    {
                        "name": "L3e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L3e"
                    },
                    {
                        "name": "L4e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L4e"
                    },
                    {
                        "name": "L5e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L5e"
                    },
                    {
                        "name": "L6e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L6e"
                    },
                    {
                        "name": "L7e",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "L7e"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_PSV",
                "childs": [
                    {
                        "name": "M2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "M2"
                    },
                    {
                        "name": "M3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "M3"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EU_VEHICLE_CATEGORY_TRL",
                "childs": [
                    {
                        "name": "O1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "O1"
                    },
                    {
                        "name": "O2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "O2"
                    },
                    {
                        "name": "O3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "O3"
                    },
                    {
                        "name": "O4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "O4"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "EVehicleTechRecordActions",
                "childs": [
                    {
                        "name": "GetVehicleTechRecordHavingStatusAll",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll"
                    },
                    {
                        "name": "GetVehicleTechRecordHavingStatusAllSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success"
                    },
                    {
                        "name": "CreateVehicleTechRecord",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TechRecordContainer] Create VehicleTechRecord"
                    },
                    {
                        "name": "UpdateVehicleTechRecord",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TechRecordContainer] Update VehicleTechRecord"
                    },
                    {
                        "name": "UpdateVehicleTechRecordSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success"
                    },
                    {
                        "name": "SetVehicleTechRecordOnCreate",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create"
                    },
                    {
                        "name": "SetSelectedVehicleTechnicalRecord",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[MultipleTechRecordContainer] Set Selected Vehicle Technical Record"
                    },
                    {
                        "name": "SetSelectedVehicleTechRecordSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess"
                    },
                    {
                        "name": "SetViewState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VehicleTechnicalRecordEffect] Set ViewState"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts"
            },
            {
                "name": "EVehicleTestResultModelActions",
                "childs": [
                    {
                        "name": "GetVehicleTestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestResultModel] Get TestResultModel"
                    },
                    {
                        "name": "GetVehicleTestResultModelSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestResultModel] Get TestResultModel Success"
                    },
                    {
                        "name": "GetVehicleTestResultModelFailure",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestResultModel] Get TestResultModel Failure"
                    },
                    {
                        "name": "SetTestViewState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[TestResultComponent] SetTestViewState"
                    },
                    {
                        "name": "UpdateTestResult",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UpdateTestResult] Update Test Result"
                    },
                    {
                        "name": "UpdateTestResultSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UpdateTestResultSuccess]"
                    },
                    {
                        "name": "SetSelectedTestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[SetSelectedVehicleTestResultModel]"
                    },
                    {
                        "name": "SetSelectedTestResultModelSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[SetSelectedVehicleTestResultModelSuccess]"
                    },
                    {
                        "name": "UpdateSelectedTestResultModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UpdateSelectedTestResultModel]"
                    },
                    {
                        "name": "UpdateSelectedTestResultModelSuccess",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UpdateSelectedTestResultModelSuccess]"
                    },
                    {
                        "name": "DownloadCertificate",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[DownloadCertificate]"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts"
            },
            {
                "name": "EXPIRY_DATE_APPLICABLE",
                "childs": [
                    {
                        "name": "Annual Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "Class 6A seat belt installation check (annual test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "3"
                    },
                    {
                        "name": "Class 6A seat belt installation check (first test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "4"
                    },
                    {
                        "name": "Paid annual test retest ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "7"
                    },
                    {
                        "name": "Paid retest with Class 6A seat belt installation check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "8"
                    },
                    {
                        "name": "Part paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "14"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "18"
                    },
                    {
                        "name": "Part-paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "21"
                    },
                    {
                        "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "27"
                    },
                    {
                        "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "28"
                    },
                    {
                        "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "93"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "76"
                    },
                    {
                        "name": "First Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "95"
                    },
                    {
                        "name": "Annual Test HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "94"
                    },
                    {
                        "name": "Paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "53"
                    },
                    {
                        "name": "Part paid annual test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "54"
                    },
                    {
                        "name": "Paid first test retest HGV/TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "65"
                    },
                    {
                        "name": "Part paid first test retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "66"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "70"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "79"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "82"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "83"
                    },
                    {
                        "name": "First Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "41"
                    },
                    {
                        "name": "Annual Test TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "40"
                    },
                    {
                        "name": "Paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "98"
                    },
                    {
                        "name": "Part paid annual test retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "99"
                    },
                    {
                        "name": "Free first test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "67"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "107"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "113"
                    },
                    {
                        "name": "Part paid prohibition clearance (retest with certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "116"
                    },
                    {
                        "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "119"
                    },
                    {
                        "name": "Paid retest prohibition clearance on first test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "120"
                    },
                    {
                        "name": "ADR test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "50"
                    },
                    {
                        "name": "Paid ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "59"
                    },
                    {
                        "name": "Free ADR retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "60"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "44"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) with annual test 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "39"
                    },
                    {
                        "name": "Low Emissions Certificate (LEC) without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "45"
                    },
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "FUEL_TYPE",
                "childs": [
                    {
                        "name": "FUEL_TYPE_1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Diesel"
                    },
                    {
                        "name": "FUEL_TYPE_2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Gas-cng"
                    },
                    {
                        "name": "FUEL_TYPE_3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Gas-lng"
                    },
                    {
                        "name": "FUEL_TYPE_4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Gas-lpg"
                    },
                    {
                        "name": "FUEL_TYPE_5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Fuel cell"
                    },
                    {
                        "name": "FUEL_TYPE_6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Petrol"
                    },
                    {
                        "name": "FUEL_TYPE_7",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Full electric"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "INSPECTION_TYPES",
                "childs": [
                    {
                        "name": "Intermediate",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "intermediate"
                    },
                    {
                        "name": "Periodic",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "periodic"
                    },
                    {
                        "name": "Exceptional",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "exceptional"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "MEMOS",
                "childs": [
                    {
                        "name": "MEMOSAPPLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "07/09 3mth leak ext"
                    },
                    {
                        "name": "MEMOSAPPLY_CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "07/093mthleakext"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "MOD_TYPE",
                "childs": [
                    {
                        "name": "MOD_TYPE_1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "P - Particulate trap"
                    },
                    {
                        "name": "MOD_TYPE_2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "M - Modification or change of engine"
                    },
                    {
                        "name": "MOD_TYPE_3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "G - Gas engine"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "NOTES",
                "childs": [
                    {
                        "name": "GUIDANCENOTE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "New certificate requested"
                    },
                    {
                        "name": "GUIDANCENOTE_CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "newcertificaterequested"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "ODOMETER_READING_UNITS",
                "childs": [
                    {
                        "name": "KM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "kilometres"
                    },
                    {
                        "name": "MILES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "miles"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "PANEL_TITLE",
                "childs": [
                    {
                        "name": "VEHICLE_SUMMARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle summary"
                    },
                    {
                        "name": "BODY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Body"
                    },
                    {
                        "name": "WEIGHTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Weights"
                    },
                    {
                        "name": "TYRES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Tyres"
                    },
                    {
                        "name": "BRAKES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Brakes"
                    },
                    {
                        "name": "DDA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DDA"
                    },
                    {
                        "name": "DIMENSIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Dimensions"
                    },
                    {
                        "name": "ADR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ADR"
                    },
                    {
                        "name": "APPLICANT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Applicant"
                    },
                    {
                        "name": "DOCUMENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Documents"
                    },
                    {
                        "name": "PURCHASER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Purchaser"
                    },
                    {
                        "name": "MANUFACTURER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Manufacturer"
                    },
                    {
                        "name": "AUTH_INTO_SERVICE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Authorization into service"
                    },
                    {
                        "name": "LETTERS_OF_AUTH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Letters of authorization"
                    },
                    {
                        "name": "NOTES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Notes"
                    },
                    {
                        "name": "TEST_HISTORY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Test"
                    },
                    {
                        "name": "TECHNICAL_RECORD_HISTORY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Technical record history"
                    },
                    {
                        "name": "PLATES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Plates"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "REASON_FOR_ABANDONING_HGV_TRL",
                "childs": [
                    {
                        "name": "R1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was not submitted for test at the appointed time"
                    },
                    {
                        "name": "R2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The relevant test fee has not been paid"
                    },
                    {
                        "name": "R3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The trailer was not accompanied by a suitable motor vehicle"
                    },
                    {
                        "name": "R4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "R5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "A Ministry Plate has been issued and is not fitted to the vehicle or trailer"
                    },
                    {
                        "name": "R6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The particulars of the motor vehicle or trailer (e.g. number of axles / axle weights) do not match the VTG6 Ministry Plate fitted to the vehicle"
                    },
                    {
                        "name": "R7",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle or motor vehicle by which it is accompanied emits substantial amounts of smoke so as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R8",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle or trailer (any part) was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R9",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "No proof was given that the vehicle used for carrying dangerous/toxic/corrosive or inflammable goods had been cleaned or otherwise rendered safe for test"
                    },
                    {
                        "name": "R10",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                    },
                    {
                        "name": "R11",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was not loaded as required"
                    },
                    {
                        "name": "R12",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The test could not be completed due to a failure of a part of the vehicle, or trailer and accompanying motor vehicle which made movement impossible"
                    },
                    {
                        "name": "R13",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was presented for test carrying livestock or other unsuitable material"
                    },
                    {
                        "name": "R14",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                    },
                    {
                        "name": "R15",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle exhaust outlet has been modified preventing a metered smoke check"
                    },
                    {
                        "name": "R16",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The examiner could not open the tachograph"
                    },
                    {
                        "name": "R17",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The driver and/or presenter of the vehicle refused to or was unable to comply with the instructions of DVSA staff making it impractical or unsafe to continue the test"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "REASON_FOR_ABANDONING_PSV",
                "childs": [
                    {
                        "name": "R1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was not submitted for test at the appointed time"
                    },
                    {
                        "name": "R2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The relevant test fee has not been paid"
                    },
                    {
                        "name": "R3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "There was no means of identifying the vehicle i.e. the vehicle chassis/serial number was missing or did not relate to the vehicle"
                    },
                    {
                        "name": "R4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The registration document or other evidence of the date of first registration was not presented when requested"
                    },
                    {
                        "name": "R5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was emitting substantial amounts of exhaust smoke so as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R7",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                    },
                    {
                        "name": "R8",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The test could not be completed due to a failure of a part of the vehicle which made movement under its own power impossible"
                    },
                    {
                        "name": "R9",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                    },
                    {
                        "name": "R10",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "R11",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle exhaust outlet has been modified in such a way as to prevent a metered smoke check being conducted"
                    },
                    {
                        "name": "R12",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "A proper examination cannot be readily carried out as any door engine cover hatch or other access device designed to be opened is locked or otherwise cannot be opened"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "REASON_FOR_ABANDONING_TIR",
                "childs": [
                    {
                        "name": "R1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was not submitted for test at the appointed time"
                    },
                    {
                        "name": "R2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The relevant test fee has not been paid"
                    },
                    {
                        "name": "R3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The trailer was not accompanied by a suitable drawing motor vehicle"
                    },
                    {
                        "name": "R4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "There is not permanently fixed to the chassis a serial number (motor vehicle) or the identification mark issued by the Secretary of State (trailer)"
                    },
                    {
                        "name": "R5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle or motor vehicle by which it is accompanied emits substantial amounts of smoke so as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle or trailer (any part) was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                    },
                    {
                        "name": "R7",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                    },
                    {
                        "name": "R8",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The test could not be completed due to a failure of a part of the vehicle, or trailer and accompanying motor vehicle which made movement impossible"
                    },
                    {
                        "name": "R9",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The vehicle was presented for test carrying unsuitable material"
                    },
                    {
                        "name": "R10",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                    },
                    {
                        "name": "R11",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The driver and/or presenter of the vehicle refused to or was unable to comply with the instructions of DVSA staff making it impractical or unsafe to continue the test"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "RECORD_COMPLETENESS",
                "childs": [
                    {
                        "name": "complete",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Complete"
                    },
                    {
                        "name": "skeleton",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Skeleton - not enough information to perform a vehicle test"
                    },
                    {
                        "name": "testable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Testable - some important information is missing"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "RECORD_STATUS",
                "childs": [
                    {
                        "name": "CURRENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "current"
                    },
                    {
                        "name": "PROVISIONAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "provisional"
                    },
                    {
                        "name": "ARCHIVED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "archived"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "RESULT",
                "childs": [
                    {
                        "name": "FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Fail"
                    },
                    {
                        "name": "PASS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Pass"
                    },
                    {
                        "name": "PRS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PRS"
                    },
                    {
                        "name": "ABANDONED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Abandoned"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "SEARCH_CRITERIA",
                "childs": [
                    {
                        "name": "ALL_CRITERIA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle registration mark, trailer ID or vehicle identification number"
                    },
                    {
                        "name": "VRM_CRITERIA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle registration mark (VRM)"
                    },
                    {
                        "name": "FULL_VIN_CRITERIA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Full vehicle identification number (VIN)"
                    },
                    {
                        "name": "PARTIAL_VIN_CRITERIA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Partial VIN (last 6 characters)"
                    },
                    {
                        "name": "TRL_CRITERIA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Trailer ID"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "SEAT_BELT_APPLICABLE",
                "childs": [
                    {
                        "name": "Annual Test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "Class 6A seat belt installation check (annual test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "3"
                    },
                    {
                        "name": "Class 6A seat belt installation check (first test)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "4"
                    },
                    {
                        "name": "Paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "7"
                    },
                    {
                        "name": "Paid retest with Class 6A seat belt installation check",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "8"
                    },
                    {
                        "name": "Part paid annual test retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "14"
                    },
                    {
                        "name": "Paid prohibition clearance (full inspection without certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "15"
                    },
                    {
                        "name": "Part paid prohibition clearance (full inspection without certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "16"
                    },
                    {
                        "name": "Paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "18"
                    },
                    {
                        "name": "Paid prohibition clearance (retest without certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "19"
                    },
                    {
                        "name": "Part-paid prohibition clearance (retest with certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "21"
                    },
                    {
                        "name": "Part-paid prohibition clearance (retest without certificate)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "22"
                    },
                    {
                        "name": "Part-paid prohibition clearance (partial inspection without certification)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "23"
                    },
                    {
                        "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "27"
                    },
                    {
                        "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "28"
                    },
                    {
                        "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "93"
                    },
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "Seatbelt installation check COIF without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "147"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "SPECIALIST_CERTIFICATE_APPLICABLE",
                "childs": [
                    {
                        "name": "Basic IVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "125"
                    },
                    {
                        "name": "Normal IVA inspection 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "126"
                    },
                    {
                        "name": "Normal IVA inspection 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "186"
                    },
                    {
                        "name": "Normal IVA inspection 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "187"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "128"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "188"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "189"
                    },
                    {
                        "name": "Appeal on a basic IVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "129"
                    },
                    {
                        "name": "IVA mutual recognition/ end of series & inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "130"
                    },
                    {
                        "name": "Full MSVA moped vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "133"
                    },
                    {
                        "name": "Full MSVA unbodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "134"
                    },
                    {
                        "name": "Full MSVA bodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "135"
                    },
                    {
                        "name": "Part MSVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "136"
                    },
                    {
                        "name": "Appeal on a MSVA moped vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "138"
                    },
                    {
                        "name": "Appeal on a MSVA unbodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "139"
                    },
                    {
                        "name": "Appeal on a MSVA bodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "140"
                    },
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "DDA Schedule 1, 2 or 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "150"
                    },
                    {
                        "name": "DDA Schedule 1 + 2 or 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "151"
                    },
                    {
                        "name": "Paid basic IVA inspection retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "158"
                    },
                    {
                        "name": "Free basic IVA inspection retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "159"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "161"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "192"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "193"
                    },
                    {
                        "name": "Free normal IVA inspection retest 4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "162"
                    },
                    {
                        "name": "Free normal IVA inspection retest 5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "194"
                    },
                    {
                        "name": "Free normal IVA inspection retest 6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "195"
                    },
                    {
                        "name": "Mutual recognition/ end of series IVA retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "163"
                    },
                    {
                        "name": "Paid MSVA moped vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "166"
                    },
                    {
                        "name": "Free MSVA moped vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "167"
                    },
                    {
                        "name": "Paid MSVA unbodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "169"
                    },
                    {
                        "name": "Free MSVA unbodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "170"
                    },
                    {
                        "name": "Paid MSVA bodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "172"
                    },
                    {
                        "name": "Free MSVA bodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "173"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    },
                    {
                        "name": "DDA Schedule 1, 2 or 3 retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "181"
                    },
                    {
                        "name": "DDA Schedule 1 + 2 or 3 retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "182"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "SPECIALIST_COIF_APPLICABLE",
                "childs": [
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "COIF without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "143"
                    },
                    {
                        "name": "Type approved to bus directive COIF",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "144"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "Seatbelt installation check COIF without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "147"
                    },
                    {
                        "name": "Annex 7 COIF",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "148"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "COIF retest without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "176"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    },
                    {
                        "name": "Annex 7 COIF retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "178"
                    },
                    {
                        "name": "TILT COIF retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "179"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "SPECIALIST_TEST_APPLICABLE",
                "childs": [
                    {
                        "name": "Basic IVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "125"
                    },
                    {
                        "name": "Normal IVA inspection 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "126"
                    },
                    {
                        "name": "Normal IVA inspection 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "186"
                    },
                    {
                        "name": "Normal IVA inspection 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "187"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "128"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "188"
                    },
                    {
                        "name": "Appeal on a normal IVA inspection 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "189"
                    },
                    {
                        "name": "Appeal on a basic IVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "129"
                    },
                    {
                        "name": "IVA mutual recognition/ end of series & inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "130"
                    },
                    {
                        "name": "Full MSVA moped vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "133"
                    },
                    {
                        "name": "Full MSVA unbodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "134"
                    },
                    {
                        "name": "Full MSVA bodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "135"
                    },
                    {
                        "name": "Part MSVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "136"
                    },
                    {
                        "name": "Appeal on a MSVA moped vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "138"
                    },
                    {
                        "name": "Appeal on a MSVA unbodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "139"
                    },
                    {
                        "name": "Appeal on a MSVA bodied vehicle inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "140"
                    },
                    {
                        "name": "COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "142"
                    },
                    {
                        "name": "COIF without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "143"
                    },
                    {
                        "name": "Type approved to bus directive COIF",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "144"
                    },
                    {
                        "name": "Seatbelt installation check COIF with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "146"
                    },
                    {
                        "name": "Seatbelt installation check COIF without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "147"
                    },
                    {
                        "name": "Annex 7 COIF",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "148"
                    },
                    {
                        "name": "DDA Schedule 1, 2 or 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "150"
                    },
                    {
                        "name": "DDA Schedule 1 + 2 or 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "151"
                    },
                    {
                        "name": "Normal voluntary IVA inspection 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "153"
                    },
                    {
                        "name": "Normal voluntary IVA inspection 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "190"
                    },
                    {
                        "name": "Normal voluntary IVA inspection 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "191"
                    },
                    {
                        "name": "Basic voluntary IVA inspection",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "154"
                    },
                    {
                        "name": "Paid basic IVA inspection retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "158"
                    },
                    {
                        "name": "Free basic IVA inspection retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "159"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "161"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "192"
                    },
                    {
                        "name": "Paid normal IVA inspection retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "193"
                    },
                    {
                        "name": "Free normal IVA inspection retest 4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "162"
                    },
                    {
                        "name": "Free normal IVA inspection retest 5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "194"
                    },
                    {
                        "name": "Free normal IVA inspection retest 6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "195"
                    },
                    {
                        "name": "Mutual recognition/ end of series IVA retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "163"
                    },
                    {
                        "name": "Paid MSVA moped vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "166"
                    },
                    {
                        "name": "Free MSVA moped vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "167"
                    },
                    {
                        "name": "Paid MSVA unbodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "169"
                    },
                    {
                        "name": "Free MSVA unbodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "170"
                    },
                    {
                        "name": "Paid MSVA bodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "172"
                    },
                    {
                        "name": "Free MSVA bodied vehicle retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "173"
                    },
                    {
                        "name": "COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "175"
                    },
                    {
                        "name": "COIF retest without annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "176"
                    },
                    {
                        "name": "Seatbelt installation check COIF retest with annual test",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "177"
                    },
                    {
                        "name": "Annex 7 COIF retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "178"
                    },
                    {
                        "name": "TILT COIF retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "179"
                    },
                    {
                        "name": "DDA Schedule 1, 2 or 3 retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "181"
                    },
                    {
                        "name": "DDA Schedule 1 + 2 or 3 retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "182"
                    },
                    {
                        "name": "Normal voluntary IVA inspection retest 1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "184"
                    },
                    {
                        "name": "Normal voluntary IVA inspection retest 2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "196"
                    },
                    {
                        "name": "Normal voluntary IVA inspection retest 3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "197"
                    },
                    {
                        "name": "Basic voluntary IVA inspection retest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "185"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
            },
            {
                "name": "STATUS",
                "childs": [
                    {
                        "name": "MANDATORY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MANDATORY"
                    },
                    {
                        "name": "HIDDEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "HIDDEN"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts"
            },
            {
                "name": "SUBSTANCES",
                "childs": [
                    {
                        "name": "PERMITTED_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Substances permitted under the tank code and any special provisions specified in 9 may be carried"
                    },
                    {
                        "name": "PERMITTED_CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "substancespermittedunderthetankcodeandanyspecialprovisionsspecifiedin9maybecarried"
                    },
                    {
                        "name": "PERMITTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "permitted"
                    },
                    {
                        "name": "CLASSNUMBER_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Substances (Class UN number and if necessary packing group and proper shipping name) may be carried"
                    },
                    {
                        "name": "CLASSNUMBER_CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "substances(classunnumberandifnecessarypackinggroupandpropershippingname)maybecarried"
                    },
                    {
                        "name": "CLASSNUMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "classnumber"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "TEST_STATION_TYPE",
                "childs": [
                    {
                        "name": "ATF",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ATF"
                    },
                    {
                        "name": "GVTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "GVTS"
                    },
                    {
                        "name": "HQ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "HQ"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/test-record/test-record.enums.ts"
            },
            {
                "name": "VEHICLE_TECH_RECORD_SEARCH_ERRORS",
                "childs": [
                    {
                        "name": "NOT_FOUND",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Vehicle not found, check the vehicle registration mark, trailer ID, vehicle identification number or change the search criteria to find a vehicle"
                    },
                    {
                        "name": "MULTIPLE_FOUND",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Multiple vehicles found, search using the full vehicle identification number"
                    },
                    {
                        "name": "NO_INPUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Enter a vehicle registration mark, trailer ID or vehicle identification number"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "VEHICLE_TYPES",
                "childs": [
                    {
                        "name": "PSV",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "psv"
                    },
                    {
                        "name": "HGV",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hgv"
                    },
                    {
                        "name": "TRL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "trl"
                    },
                    {
                        "name": "Car",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "car"
                    },
                    {
                        "name": "LGV",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "lgv"
                    },
                    {
                        "name": "Moto",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "motorcycle"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            },
            {
                "name": "VIEW_STATE",
                "childs": [
                    {
                        "name": "VIEW_ONLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 0
                    },
                    {
                        "name": "EDIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "CREATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "archive/src/app/app.enums.ts"
            }
        ],
        "groupedVariables": {
            "src/app/user-service/user-service.reducer.ts": [
                {
                    "name": "_userServiceReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(UserServiceActions.Login, (state, { name }) => ({ username: name })),\n  on(UserServiceActions.Logout, (state) => (initialState)),\n)"
                },
                {
                    "name": "getUserState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<UserServiceState>('userservice')"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserServiceState",
                    "defaultValue": "{\n  username: \"(Not logged in)\",\n}"
                },
                {
                    "name": "username",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(getUserState, (state) => state.username)"
                }
            ],
            "archive/src/app/app.module.ts": [
                {
                    "name": "adalConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                },
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AppComponent,\n  ShellPage,\n  LandingPageComponent,\n  HeaderComponent,\n  FooterComponent,\n  TechnicalRecordCreateComponent,\n  SpinnerLoaderComponent,\n  MultipleRecordsContainer,\n  MultipleRecordsComponent,\n  LogoutModalComponent\n]"
                }
            ],
            "archive/src/app/store/reducers/app.reducers.ts": [
                {
                    "name": "appReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/reducers/app.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<IAppState>",
                    "defaultValue": "{\n  router: routerReducer,\n  loader: LoaderReducer,\n  vehicleTechRecordModel: VehicleTechRecordReducers,\n  vehicleTestResultModel: VehicleTestResultModelReducers,\n  referenceData: ReferenceDataReducers,\n  error: ErrorReducer,\n  appFormState: AppFormStateReducer,\n  modalState: ModalReducer\n}"
                }
            ],
            "archive/src/app/technical-record/technical-record.constants.ts": [
                {
                    "name": "APPROVAL_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['NTA', 'ECTA', 'IVA', 'NSSTA', 'ECSSTA']"
                },
                {
                    "name": "AXLE_NUM_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
                },
                {
                    "name": "BODY_TYPE_DESC",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'articulated',\r\n  'single decker',\r\n  'double decker',\r\n  'other',\r\n  'petrol/oil tanker',\r\n  'skeletal',\r\n  'tipper',\r\n  'box',\r\n  'flat',\r\n  'refuse',\r\n  'skip loader',\r\n  'refrigerated'\r\n]"
                },
                {
                    "name": "BOOLEAN_RADIO_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ ['Yes']: true, ['No']: false }"
                },
                {
                    "name": "FITMENT_CODE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['double', 'single']"
                },
                {
                    "name": "FUEL_PROPULSION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'DieselPetrol',\r\n  'Hybrid',\r\n  'Electric',\r\n  'CNG',\r\n  'Fuel cell',\r\n  'LNG',\r\n  'Other'\r\n]"
                },
                {
                    "name": "FUNCTION_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ ['Articulated']: 'a', ['Rigid']: 'r' }"
                },
                {
                    "name": "MICROFILM_DOCUMENT_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'PSV Miscellaneous',\r\n  'AAT - Trailer Annual Test',\r\n  'AIV - HGV International App',\r\n  'COIF Modification',\r\n  'Trailer COC + Int Plate',\r\n  'RCT - Trailer Test Cert paid',\r\n  'HGV COC + Int Plate',\r\n  'PSV Carry/Auth, OMO Report',\r\n  'AIT - Trailer International App',\r\n  'IPV - HGV EEC Plate/Cert',\r\n  'XCV - HGV Test Cert free',\r\n  'AAV - HGV Annual Test',\r\n  'COIF Master',\r\n  'Tempo 100 Sp Ord',\r\n  'Deleted',\r\n  'PSV N/ALT',\r\n  'XPT - Tr Plating Cert paid',\r\n  'FFV - HGV First Test',\r\n  'Repl Vitesse 100',\r\n  'TCV - HGV Test Cert',\r\n  'ZZZ - Miscellaneous',\r\n  'Test Certificate',\r\n  'XCT - Trailer Test Cert free',\r\n  'C52 - COC and VTG52A',\r\n  'Tempo 100 Report',\r\n  'Main File Amendment',\r\n  'PSV Doc',\r\n  'PSV COC',\r\n  'PSV Repl COC',\r\n  'TAV - COC',\r\n  'NPT - Trailer Alteration',\r\n  'OMO Certificate',\r\n  'PSV Repl COIF',\r\n  'PSV Repl COF',\r\n  'COIF Application',\r\n  'XPV - HGV Plating Cert Free',\r\n  'TCT - Trailer Test Cert',\r\n  'Tempo 100 App',\r\n  'PSV Decision on N/ALT',\r\n  'Special Order PSV',\r\n  'NPV - HGV Alteration',\r\n  'No Description Found',\r\n  'Vitesse 100 Sp Ord',\r\n  'Brake Test Details',\r\n  'COIF Productional',\r\n  'RDT - Test Disc Paid',\r\n  'RCV - HGV Test Cert',\r\n  'FFT - Trailer First Test',\r\n  'IPT - Trailer EEC Plate/Cert',\r\n  'XDT - Test Disc Free',\r\n  'PRV - HGV Plating Cert paid',\r\n  'COF Cert, PRT - Tr Plating Cert paid',\r\n  'Tempo 100 Permit'\r\n]"
                },
                {
                    "name": "PLATE_ISSUE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ['Original']: 'Issue original certificate',\r\n  ['Replacement']: 'Issue replacement'\r\n}"
                },
                {
                    "name": "VEHICLE_CLASS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'motorbikes over 200cc or with a sidecar',\r\n  'not applicable',\r\n  'small psv (ie: less than or equal to 22 seats)',\r\n  'motorbikes up to 200cc',\r\n  'trailer',\r\n  'large psv(ie: greater than 23 seats)',\r\n  '3 wheelers',\r\n  'heavy goods vehicle',\r\n  'MOT class 4',\r\n  'MOT class 7',\r\n  'MOT class 5',\r\n  'PSV of unknown or unspecified size',\r\n  'Not Known'\r\n]"
                },
                {
                    "name": "VEHICLE_CONFIGURATION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'rigid',\r\n  'articulated',\r\n  'centre axle drawbar',\r\n  'semi-car transporter',\r\n  'semi-trailer',\r\n  'low loader',\r\n  'other',\r\n  'drawbar',\r\n  'four-in-line',\r\n  'dolly',\r\n  'full drawbar'\r\n]"
                },
                {
                    "name": "VEHICLE_EUCATEGORY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  'm1',\r\n  'm2',\r\n  'm3',\r\n  'n1',\r\n  'n2',\r\n  'n3',\r\n  'o1',\r\n  'o2',\r\n  'o3',\r\n  'o4',\r\n  'l1e-a',\r\n  'l1e',\r\n  'l2e',\r\n  'l3e',\r\n  'l4e',\r\n  'l5e',\r\n  'l6e',\r\n  'l7e'\r\n]"
                }
            ],
            "archive/src/assets/config/index.ts": [
                {
                    "name": "baseConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/assets/config/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  appInsights: {\n    instrumentationKey: '#{appInsightsKey}'\n  },\n  logging: {\n    console: true,\n    appInsights: true\n  },\n  aad: {\n    requireAuth: true\n  },\n  adalConfig: {\n    cacheLocation: 'localStorage',\n    endpoints: {\n      api: 'xxx-bae6-4760-b434-xxx'\n    }\n  }\n}"
                },
                {
                    "name": "createConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/assets/config/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(config) => merge({}, baseConfig, config)"
                }
            ],
            "archive/src/app/test-record/test-record.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/test-record/test-record.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  TestRecordComponent,\n  VehicleComponent,\n  TestSectionComponent,\n  DefectsComponent,\n  SeatbeltInstallationCheckComponent,\n  EmissionDetailsComponent,\n  VisitComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TestRecordContainer,\n  DefectsEditComponent,\n  VehicleEditComponent,\n  SeatbeltInstallationCheckEditComponent,\n  EmissionDetailsEditComponent,\n  NotesEditComponent,\n  VisitEditComponent,\n  TimeInputComponent,\n  TestSectionEditComponent,\n  SelectTestTypeComponent,\n  SelectTestTypeContainer,\n  TreeComponent\n]"
                },
                {
                    "name": "MODULES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/test-record/test-record.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  RouterModule.forChild([\n    {\n      path: 'test-record/:id',\n      component: TestRecordContainer,\n      canActivate: [\n        AuthenticationGuard,\n        TestResultGuard,\n        PreparersGuard,\n        TestStationsGuard,\n        FormStateGuard\n      ]\n    },\n    {\n      path: 'select-test-type/:id',\n      component: SelectTestTypeContainer,\n      canActivate: [TestTypeCategoriesGuard]\n    }\n  ]),\n  EffectsModule.forFeature([VehicleTestResultModelEffects]),\n  SharedModule,\n  LibrariesModule,\n  ReactiveFormsModule,\n  MaterialModule\n]"
                }
            ],
            "archive/src/app/technical-record/technical-record.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/technical-record.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  TechnicalRecordsContainer,\n  TechnicalRecordComponent,\n  RecordStatusComponent,\n  RecordStatusEditComponent,\n  RecordIdentificationComponent,\n  RecordIdentificationEditComponent,\n  VehicleSummaryComponent,\n  VehicleSummaryPsvComponent,\n  VehicleSummaryHgvComponent,\n  VehicleSummaryTrlComponent,\n  VehicleSummaryEditComponent,\n  TypeApprovalComponent,\n  NotesEditComponent,\n  BodyEditComponent,\n  BodyComponent,\n  BodyPsvComponent,\n  WeightsComponent,\n  WeightsPsvComponent,\n  WeightsEditComponent,\n  TyresComponent,\n  TyresEditComponent,\n  DimensionsComponent,\n  DimensionsEditComponent,\n  NotesComponent,\n  TestHistoryComponent,\n  TechRecHistoryComponent,\n  ApplicantComponent,\n  ApplicantEditComponent,\n  DocumentsComponent,\n  DocumentsEditComponent,\n  PlatesComponent,\n  BrakesComponent,\n  BrakesPsvComponent,\n  PurchaserComponent,\n  ManufacturerComponent,\n  AuthorisationIntoServiceComponent,\n  LettersOfAuthorisationComponent,\n  AxleBrakesComponent,\n  DdaComponent\n]"
                }
            ],
            "archive/src/app/technical-record/adr/adr.module.ts": [
                {
                    "name": "COMPOSABLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AdrComponent,\n  ApplicantDetailsComponent,\n  ApplicantDetailsEditComponent,\n  AdrDetailsComponent,\n  AdrDetailsEditComponent,\n  TankDetailsComponent,\n  TankDetailsEditComponent,\n  TankInpectionsComponent,\n  TankInspectionsEditComponent,\n  MemoComponent,\n  MemoEditComponent,\n  TankDocumentsComponent,\n  BatteryListApplicableComponent,\n  BatteryListApplicableEditComponent,\n  DeclarationSeenComponent,\n  DeclarationSeenEditComponent,\n  CertificateComponent,\n  CertificateEditComponent,\n  AdditionalAdrDetailsComponent,\n  AdditionalAdrDetailEditComponent\n]"
                }
            ],
            "archive/src/app/shared/delayed-retry/delayed-retry.ts": [
                {
                    "name": "defaultDelay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "3000"
                },
                {
                    "name": "defaultMaxRetry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "3"
                },
                {
                    "name": "getErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  error: `Unable to load data. Please contact the help desk or refresh the page to try again.`\n}"
                }
            ],
            "src/environments/environment.deploy.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.deploy.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: ''\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: '',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  VTM_CLIENT_ID: '',\n  VTM_AUTHORITY_ID: '',\n  VTM_REDIRECT_URI: '/',\n  apiUrl: 'http://localhost:3005',\n  // apiUrl: 'https://api.develop.cvs.dvsacloud.uk'\n}"
                }
            ],
            "archive/src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: 'dev'\n}"
                }
            ],
            "archive/src/environments/environment.deploy.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/environments/environment.deploy.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: 'deploy'\n}"
                }
            ],
            "archive/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: 'prod',\n  production: true,\n  APIServerUri: 'http://localhost:3005',\n  APITestResultServerUri: 'http://localhost:3006'\n}"
                }
            ],
            "archive/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: 'dev',\n  production: false,\n  APIServerUri: 'http://localhost:3005',\n  APITestResultServerUri: `http://localhost:3006`\n}"
                }
            ],
            "src/app/search/search.stories.ts": [
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Initial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "archive/src/app/technical-record/adr/adr.constants.ts": [
                {
                    "name": "EXPLOSIVE_TYPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[EXPLOSIVES2, EXPLOSIVES3]"
                },
                {
                    "name": "EXPLOSIVES2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Explosives (type 2)'"
                },
                {
                    "name": "EXPLOSIVES3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Explosives (type 3)'"
                },
                {
                    "name": "PRODUCT_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'productList'"
                },
                {
                    "name": "STATEMENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'statement'"
                },
                {
                    "name": "UUID_REGEX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/adr/adr.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}/g"
                }
            ],
            "archive/src/app/utils/form.utils.ts": [
                {
                    "name": "FORM_UTILS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/utils/form.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  addControlsToFormGroup\n}"
                }
            ],
            "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts": [
                {
                    "name": "getActiveRecord",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(techRecords: TechRecord[]): TechRecord => {\r\n  let record: TechRecord;\r\n\r\n  record = techRecords.find((tRecord) => tRecord.statusCode === RECORD_STATUS.CURRENT);\r\n  if (record) {\r\n    return record;\r\n  }\r\n\r\n  record = techRecords.find((tRecord) => tRecord.statusCode === RECORD_STATUS.PROVISIONAL);\r\n  if (record) {\r\n    return record;\r\n  }\r\n\r\n  record = techRecords\r\n    .filter((tRecord) => tRecord.statusCode === RECORD_STATUS.ARCHIVED)\r\n    .sort((a, b) => getDateNumber(b.createdAt) - getDateNumber(a.createdAt))[0];\r\n  if (record) {\r\n    return record;\r\n  }\r\n}"
                },
                {
                    "name": "getActiveVehicleTechRecord",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  // getUserDetails,\r\n  getSelectedVehicleTechRecord,\r\n  (vehicleTechRecord) => (searchRecord: TechRecord = null): VehicleTechRecordEdit => {\r\n    if (vehicleTechRecord) {\r\n      const primaryVrm: VrmModel = vehicleTechRecord.vrms.find((vrm) => vrm.isPrimary);\r\n\r\n      return {\r\n        msUserDetails: null,\r\n        vin: vehicleTechRecord.vin,\r\n        primaryVrm: primaryVrm ? primaryVrm.vrm : '',\r\n        secondaryVrms: vehicleTechRecord.vrms\r\n          .filter((vrm) => !vrm.isPrimary)\r\n          .map((secondaryVrm) => secondaryVrm.vrm),\r\n        trailerId: vehicleTechRecord.trailerId,\r\n        techRecord: [getTechRecord(vehicleTechRecord.techRecord, searchRecord)]\r\n      };\r\n    }\r\n  }\r\n)"
                },
                {
                    "name": "getDateNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(strDate: string) => new Date(strDate).getTime()"
                },
                {
                    "name": "getSelectedVehicleTechRecord",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.selectedVehicleTechRecord\r\n)"
                },
                {
                    "name": "getTechRecord",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(techRecords: TechRecord[], searchRecord: TechRecord): TechRecord => {\r\n  if (searchRecord) {\r\n    return techRecords.find(\r\n      (vRecord) => getDateNumber(vRecord.createdAt) === getDateNumber(searchRecord.createdAt)\r\n    );\r\n  }\r\n\r\n  return getActiveRecord(techRecords);\r\n}"
                },
                {
                    "name": "getTechViewState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.viewState\r\n)"
                },
                {
                    "name": "getVehicleTechRecordMetaData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  getSelectedVehicleTechRecord,\r\n  (vRecord: VehicleTechRecordModel) => vRecord.metadata\r\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<VehicleTechRecordState>(\r\n  'vehicleTechRecordModel'\r\n)"
                },
                {
                    "name": "selectVehicleTechRecordModelHavingStatusAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: VehicleTechRecordState) => state.vehicleTechRecordModel\r\n)"
                }
            ],
            "archive/src/app/store/selectors/app-form-state.selectors.ts": [
                {
                    "name": "getAppFormState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppFormState) => state.pristine\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppFormState>('appFormState')"
                }
            ],
            "archive/src/app/modal/modal.selectors.ts": [
                {
                    "name": "getCurrentModalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/modal/modal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFeature, (state: ModalState) => state)"
                },
                {
                    "name": "getModalPayload",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/modal/modal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ModalState) => state.payload\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/modal/modal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ModalState>('modalState')"
                }
            ],
            "archive/src/app/store/selectors/error.selectors.ts": [
                {
                    "name": "getErrors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/error.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFeature, (state: ErrorState) => state.errors)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/error.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ErrorState>('error')"
                }
            ],
            "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts": [
                {
                    "name": "getFilteredTestTypeCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  getTestTypeCategories,\n  (state: IVehicleTestResultModelState, testTypeCategories: TestTypeCategory[]) => {\n    let testRecord: TestResultModel;\n    let filteredCategories;\n\n    if (state.selectedTestResultModel) {\n      testRecord = state.selectedTestResultModel;\n      filteredCategories = testTypeCategories.filter((element: TestTypeCategory) => {\n        return filterCategories(element, testRecord);\n      });\n    }\n\n    filteredCategories = getTestTypeTree(filteredCategories, 0);\n\n    return filteredCategories;\n  }\n)"
                },
                {
                    "name": "getSelectedVehicleTestResultModel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.selectedTestResultModel\n)"
                },
                {
                    "name": "getTestViewState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.editState\n)"
                },
                {
                    "name": "getVehicleTestResultModel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: IVehicleTestResultModelState) => state.vehicleTestResultModel\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IVehicleTestResultModelState>(\n  'vehicleTestResultModel'\n)"
                },
                {
                    "name": "selectTestTypeById",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(id: string) =>\n  createSelector(selectFeature, (state: IVehicleTestResultModelState) => {\n    let testType: TestType;\n    let testRecord: TestResultModel;\n\n    if (state.selectedTestResultModel) {\n      testRecord = state.selectedTestResultModel;\n\n      testType = state.selectedTestResultModel.testTypes.filter(\n        (testTypeRes: TestType) => testTypeRes.testNumber === id\n      )[0];\n    }\n    const test: TestRecordTestType = { testType, testRecord };\n    return test;\n  })"
                }
            ],
            "archive/src/app/store/state/app.state.ts": [
                {
                    "name": "getInitialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): IAppState => initialAppState"
                },
                {
                    "name": "initialAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAppState",
                    "defaultValue": "{\r\n  loader: initialLoaderState,\r\n  vehicleTechRecordModel: initialVehicleTechRecordModelState,\r\n  vehicleTestResultModel: initialVehicleTestResultModelState,\r\n  referenceData: initialReferenceDataState,\r\n  error: initialErrorState,\r\n  appFormState: initialAppFormState,\r\n  modalState: initialModalState\r\n}"
                },
                {
                    "name": "ROOT_EFFECTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  VehicleTechRecordModelEffects,\r\n  ModalEffects,\r\n  AppFormEffects,\r\n  RouterEffects\r\n]"
                }
            ],
            "archive/src/app/store/selectors/ReferenceData.selectors.ts": [
                {
                    "name": "getPreparers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.preparers\n)"
                },
                {
                    "name": "getTestStations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.testStations\n)"
                },
                {
                    "name": "getTestTypeCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReferenceDataState) => state.testTypeCategories\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ReferenceDataState>('referenceData')"
                }
            ],
            "archive/src/app/store/selectors/route.selectors.ts": [
                {
                    "name": "getRouterInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/route.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectReducerState, (state) => state.state)"
                },
                {
                    "name": "getRouterParams",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/route.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectReducerState, (state) => {\r\n  if (!!state) {\r\n    return { params: state.state.params, queryParams: state.state.queryParams };\r\n  }\r\n})"
                },
                {
                    "name": "selectReducerState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/selectors/route.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<RouterReducerState<RouterStateUrl>>(\r\n  'router'\r\n)"
                }
            ],
            "archive/src/app/shared/components/date-input/date-input.component.ts": [
                {
                    "name": "index",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/components/date-input/date-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "archive/src/app/shared/components/time-input/time-input.component.ts": [
                {
                    "name": "index",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/components/time-input/time-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "archive/src/app/store/reducers/app-form-state.reducers.ts": [
                {
                    "name": "initialAppFormState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppFormState",
                    "defaultValue": "{\n  pristine: true\n}"
                }
            ],
            "archive/src/app/store/reducers/error.reducers.ts": [
                {
                    "name": "initialErrorState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/reducers/error.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorState",
                    "defaultValue": "{\n  errors: []\n}"
                }
            ],
            "archive/src/app/store/state/Loader.state.ts": [
                {
                    "name": "initialLoaderState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/Loader.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILoaderState",
                    "defaultValue": "{\n  loading: false,\n  status: null,\n  error: null\n}"
                }
            ],
            "archive/src/app/modal/modal.reducer.ts": [
                {
                    "name": "initialModalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/modal/modal.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalState",
                    "defaultValue": "{\n  currentModal: APP_MODALS.NONE\n}"
                }
            ],
            "archive/src/app/store/state/ReferenceDataState.state.ts": [
                {
                    "name": "initialReferenceDataState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/ReferenceDataState.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReferenceDataState",
                    "defaultValue": "{\n  preparers: null,\n  testStations: null,\n  testTypeCategories: null\n}"
                }
            ],
            "archive/src/app/store/state/VehicleTechRecordModel.state.ts": [
                {
                    "name": "initialVehicleTechRecordModelState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/VehicleTechRecordModel.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VehicleTechRecordState",
                    "defaultValue": "{\r\n  vehicleTechRecordModel: null,\r\n  selectedVehicleTechRecord: null,\r\n  viewState: VIEW_STATE.VIEW_ONLY\r\n}"
                }
            ],
            "archive/src/app/store/state/VehicleTestResultModel.state.ts": [
                {
                    "name": "initialVehicleTestResultModelState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/store/state/VehicleTestResultModel.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IVehicleTestResultModelState",
                    "defaultValue": "{\n  vehicleTestResultModel: null,\n  selectedTestResultModel: null,\n  editState: VIEW_STATE.VIEW_ONLY,\n  error: null\n}"
                }
            ],
            "src/app/user-service/user-service.actions.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[User Service] Login', props<{ name: string; }>())"
                },
                {
                    "name": "Logout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user-service/user-service.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[User Service] Logout')"
                }
            ],
            "archive/src/app/technical-record/body/bodyList.ts": [
                {
                    "name": "makeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/technical-record/body/bodyList.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'A FARLOW ENGINEERING LTD',\n  'A HINGLEY',\n  'A MORAIS AND CA LTD',\n  'A SILVA MATOS',\n  'A&R',\n  'A1 INTERNATIONAL',\n  'AAA',\n  'AARON',\n  'ABBEY',\n  'ABEL SYSTEMS LTD',\n  'ABM TRAILERS',\n  'ABTS',\n  'ACE',\n  'ACHILEITNER',\n  'ACKERMANN-FRUEHAUF',\n  'ACOTE BOON',\n  'ACTM',\n  'ACTOMEX',\n  'ADAMOLI',\n  'ADCLIFFE',\n  'ADL',\n  'AE WILSON',\n  'AEC',\n  'AGA',\n  'AGRIMAC',\n  'AHC',\n  'AHG',\n  'AHP',\n  'AHT',\n  'AIR PRODUCTS',\n  'AKSOYLU',\n  'AL-KO KOBER',\n  'ALBION',\n  'ALEX PRICE',\n  'ALEXANDER',\n  'ALEXANDER/DENNIS',\n  'ALFA ROMEO',\n  'ALHU',\n  'ALIWELD LTD',\n  'ALKO',\n  'ALLAN FULLER LTD',\n  'ALTHAM',\n  'ALUMINIOS CASTELLANO MANCHEGOS',\n  'ALUVAN',\n  'AMERICAN LE FRANCE',\n  'AMH',\n  'AMT',\n  'ANCO',\n  'ANDOVER',\n  'ANKAI',\n  'APRILIA',\n  'ARB',\n  'ARCERBI',\n  'ARDAGH',\n  'ARGYLE',\n  'ARJ TRAILERS',\n  'ARMSTRONG & HOYLE',\n  'ARTIC',\n  'ASCENDANT',\n  'ASCHE',\n  'ASCHERSLEBEN',\n  'ASHCROFT',\n  'ASTA',\n  'ASTON MARTIN',\n  'ATHY',\n  'ATLAS',\n  'ATTACUS',\n  'AUDI',\n  'AUGUST SCHMIDT - HAGAN',\n  'AUSTIN',\n  'AUTO GALANTAS',\n  'AUTOSAN',\n  'AVALUX',\n  'AVIA',\n  'AVONDALE\t',\n  'AWD',\n  'AYATS',\n  'B.PRORAIL',\n  'B12K',\n  'BACKERS',\n  'BAILEY\t',\n  'BALE',\n  'BALE FABRICATIONS',\n  'BANNAS',\n  'BARREIRO',\n  'BARRUS\t',\n  'BARTOLETTI',\n  'BARUVAL',\n  'BARVICK',\n  'BARYVAL',\n  'BASCON',\n  'BASCONTRIZ',\n  'BATESON',\n  'BBC',\n  'BCI',\n  'BEATEX',\n  'BEATSON',\n  'BEDFORD',\n  'BEDFORD/MARSHALL',\n  'BEE',\n  'BEECHWOOD',\n  'BELLE',\n  'BELLE COACHWORKS',\n  'BEN COOPER',\n  'BENALU',\n  'BENCE',\n  'BENELLI',\n  'BENNINGHOVEN',\n  'BENTLEY',\n  'BERDEX',\n  'BERGER',\n  'BESPOKE',\n  'BICKERS TRAILER',\n  'BINGLEY BOAT',\n  'BISCHOFF',\n  'BIZIEN',\n  'BKF3.15',\n  'BLACKBURN',\n  'BLACKMORE',\n  'BLACKSTONE',\n  'BLACKWATER',\n  'BLUEBIRD',\n  'BLUEHARDT',\n  'BLUELINE',\n  'BMC',\n  'BMI TRAILER',\n  'BMMO',\n  'BMW',\n  'BOALLOY',\n  'BOC CRYOPLANT',\n  'BODEN',\n  'BOERNER WILDESHAUSEM',\n  'BOMBARDIER',\n  'BONALLACK',\n  'BONIFACE',\n  'BOOTH',\n  'BOUGHTON ENGINEERING LTD',\n  'BOVA',\n  'BOXLOADER',\n  'BPW',\n  'BRAMBER',\n  'BREINING',\n  'BREMACH',\n  'BREMAT',\n  'BRENDECK',\n  'BRIAB',\n  'BRIAN JAMES',\n  'BRIDGE',\n  'BRIDGE BODIES',\n  'BRISTOL',\n  'BRITCOM INTERNATIONAL',\n  'BROCKHOUSE',\n  'BROOKLAND SPEED',\n  'BROOKSIDE ENG',\n  'BROSHUIS',\n  'BROUGHAN',\n  'BRUCE COOK',\n  'BSL',\n  'BSLT',\n  'BT TRAILERS',\n  'BTC',\n  'BTS',\n  'BUCA',\n  'BUCHER',\n  'BUCKSTONE GROUP',\n  'BUELL',\n  'BULK WASTE TRAILER',\n  'BULTHUIS',\n  'BURG',\n  'BURGERS',\n  'BUTTERFIELD',\n  'BYD',\n  'CALDAL',\n  'CAMEO',\n  'CAMERON',\n  'CAMPBELL',\n  'CANNON',\n  'CARAVANAS RIOJA',\n  'CARDI',\n  'CARMICHAEL\t',\n  'CAT',\n  'CB',\n  'CB COTTINGHAM',\n  'CCFC',\n  'CF',\n  'CHARGE',\n  'CHASSIS DEVELOPMENT LTD',\n  'CHEREAU',\n  'CHEVROLET',\n  'CHRYSLER',\n  'CITROEN',\n  'CLAYTON',\n  'COLT',\n  'COMET',\n  'COMMER',\n  'COMPASS',\n  'COUNTY TRACTORS',\n  'CRANE FRUEHAUF',\n  'CRAVEN TASKER',\n  'CROMPTON',\n  'CROSSLEY',\n  'CSEPEL',\n  'CVB LTD',\n  'CVE',\n  'DAEWOO',\n  'DAF',\n  'DAIMLER',\n  'DENNIS',\n  'DENNIS/TRANSBUS',\n  'DENNISON',\n  'DESIGNLINE',\n  'DEVAN',\n  'DIAHATSU',\n  'DODGE',\n  'DON BUR',\n  'DROGMOLLER',\n  'DUCATI\t',\n  'DUPLE',\n  'DUPLE/PLAXTON',\n  'EBRO',\n  'ELDDIS',\n  'ENASA PEGASA',\n  'ENTERPRISE BUS LTD',\n  'ERF',\n  'ESTEPE',\n  'EUROBUS(UK) LTD',\n  'EVOBUS',\n  'FAW',\n  'FERRARI',\n  'FIAT',\n  'FLEUR DE LYS',\n  'FODEN',\n  'FORD',\n  'FORD TRANSIT',\n  'FREIGHT ROVER',\n  'FREIGHTLINER',\n  'FUSO',\n  'GAC',\n  'GENERAL MOTORS',\n  'GENERAL TRAILERS',\n  'GMC',\n  'GRAFTON',\n  'GRANNING',\n  'GRAY & ADAMS',\n  'GUY',\n  'HAGGLUND',\n  'HARLEY DAVIDSON',\n  'HIGER',\n  'HINO',\n  'HOME BUILT',\n  'HONDA',\n  'HOYNER\t',\n  'HUMMER',\n  'HYUNDAI',\n  'IFA MOTOREN',\n  'IFOR WILLIAMS',\n  'IKARUS',\n  'INTER LOAD STAR',\n  'INTERNATIONAL',\n  'IRISBUS',\n  'IRIZAR',\n  'ISUZU',\n  'IVECO',\n  'JAGUAR',\n  'JCB',\n  'JEEP',\n  'JOHN DEERE',\n  'JOHNSTON',\n  'JONCKHEERE',\n  'JSH',\n  'KASSBOHRER',\n  'KAWASAKI',\n  'KENWORTH',\n  'KIA',\n  'KING LONG',\n  'KIRN',\n  'KOGEL',\n  'KRONE',\n  'LAG',\n  'LAMBERET',\n  'LANCIA',\n  'LANDROVER',\n  'LAVERDA',\n  'LDV',\n  'LEYLAND',\n  'LOHR',\n  'LOTUS',\n  'LTI',\n  'LYNTON',\n  'M & G',\n  'MACK',\n  'MAGIRUS',\n  'MAGIRUS DEUTZ',\n  'MAN',\n  'MARBUS',\n  'MASARATI',\n  'MASSEY\t',\n  'MASSEY FERGUSON',\n  'MATBRO',\n  'MATHIEU',\n  'MAZDA',\n  'MCW',\n  'MERCEDES BENZ',\n  'METROCAB',\n  'MG',\n  'MITSUBISHI',\n  'MOL',\n  'MONTENEGRO',\n  'MONTRACON',\n  'MORGAN',\n  'MORRIS',\n  'MORRISON',\n  'MOSELEY',\n  'MOTO GUZZI',\n  'MOWAG',\n  'MULTICAR',\n  'MV AGUSTA',\n  'NEOMAN',\n  'NEOPLAN',\n  'NISSAN',\n  'NOOTEBOOM',\n  'NORTON',\n  'OMNIBUS',\n  'OMNINOVA',\n  'OPTARE',\n  'OTOKAR',\n  'PETERBILT',\n  'PEUGEOT',\n  'PINZGAUER',\n  'PLASTISOL',\n  'PLAXTON',\n  'PORSCHE',\n  'PROTON\tN',\n  'QUEST',\n  'RANGE ROVER',\n  'RAVO',\n  'RENAULT',\n  'REYONOLDS BOUGHTON',\n  'ROBERTS LEYLAND',\n  'ROLLS ROYCE',\n  'ROVER',\n  'ROYAL ENFIELD',\n  'SAAB',\n  'SALVADOR CAETENO',\n  'SANOS',\n  'SCAMMELL',\n  'SCANIA',\n  'SCHMITZ',\n  'SCHORLING',\n  'SCHWARZMULLER',\n  'SD',\n  'SEAT',\n  'SEDDON',\n  'SEDDON ATKINSON',\n  'SENTINEL',\n  'SETRA',\n  'SEV',\n  'SHELVOKE & DREWRY',\n  'SINOTRUK',\n  'SKODA',\n  'SOLBUS',\n  'SPARTAN',\n  'STANDARD',\n  'STERLING',\n  'STEYR',\n  'SUBARU',\n  'SUPACAT',\n  'SUZUKI',\n  'SWIFT',\n  'TALBOT',\n  'TAM',\n  'TATA\t',\n  'TATRA',\n  'TAZ',\n  'TBI',\n  'TECHNOBUS',\n  'TEMSA',\n  'TERBERG',\n  'TESTING',\n  'TILLING STEVENS',\n  'TIRSAN\t',\n  'TOYOTA',\n  'TRIUMPH',\n  'TROJAN',\n  'TSE',\n  'TVAC',\n  'TVR',\n  'UNIC IVECO',\n  'UNVI',\n  'URAL',\n  'VAN HOOL',\n  'VAUXHALL',\n  'VDL',\n  'VESPA',\n  'VOLKSWAGEN',\n  'VOLVO',\n  'WARD',\n  'WEIGHTLIFTER',\n  'WESTERN STAR',\n  'WHITE',\n  'WIERDA VOERTUIG TECKNIEK',\n  'WILSON',\n  'WRIGHTBUS',\n  'YAMAHA',\n  'YORK',\n  'YUTONG',\n  'ZASTAVA',\n  'ZETOR'\n]"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<MetaReducer<any, any>>",
                    "defaultValue": "[localStorageSyncReducer]"
                }
            ],
            "src/app/reducers/index.ts": [
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production ? [] : []"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<State>",
                    "defaultValue": "{\n  \"userservice\": UserServiceReducer\n}"
                }
            ],
            "archive/src/app/shared/shared.module.ts": [
                {
                    "name": "PIPES_AND_COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AdrReasonModalComponent,\n  DateInputComponent,\n  AutocompleteComponent,\n  PageNotFoundComponentComponent,\n  PreventLeavePageModalComponent,\n  ErrorSummaryComponent,\n  FormConnectorDirective,\n  DialogBoxComponent,\n  DialogBoxConfirmationComponent,\n  DialogMinistryPlatesComponent,\n  MinistryPlatesComponent,\n\n  IsPrimaryVrmPipe,\n  FilterRecordPipe,\n  DisplayOptionsPipe,\n  OrderByStatusPipe,\n  DefaultNullOrEmpty,\n  SortByDatePipe,\n  FilterMultipleRecordsPipe,\n  DisplayByDelimiter,\n  CapitalizeString\n]"
                }
            ],
            "archive/src/app/shared/directives/directives.module.ts": [
                {
                    "name": "PIPES_AND_COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/directives/directives.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[BackButtonDirective, NullValueDirective]"
                }
            ],
            "archive/src/app/shared/libraries/libraries.module.ts": [
                {
                    "name": "PIPES_AND_COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/shared/libraries/libraries.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[AccordionComponent, AccordionItemComponent]"
                }
            ],
            "src/app/app.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {}\n})"
                }
            ],
            "src/app/home/home.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/home/home.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n  },\n})"
                }
            ],
            "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/app/home/home-button/home-button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/home/home-button/home-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n  },\n})"
                }
            ],
            "src/app/layout/footer/footer.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {}\n})"
                }
            ],
            "src/app/layout/header/header.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n    username: 'username'\n  }\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {}\n})"
                }
            ],
            "archive/src/app/app.enums.ts": [
                {
                    "name": "RECORD_COMPLETENESS_complete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/app.enums.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'complete'"
                },
                {
                    "name": "RECORD_COMPLETENESS_skeleton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/app.enums.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'skeleton'"
                },
                {
                    "name": "RECORD_COMPLETENESS_testable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/app.enums.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'testable'"
                }
            ],
            "archive/src/app/utils/test-model.utils.ts": [
                {
                    "name": "TEST_MODEL_UTILS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/utils/test-model.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  mockTestRecord,\n  mockTestType,\n  mockTestTypeCategory\n}"
                }
            ],
            "archive/src/app/utils/test-type-applicable-models.utils.ts": [
                {
                    "name": "TEST_TYPE_APPLICABLE_UTILS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  mockTestTypesApplicable\n}"
                }
            ],
            "archive/src/app/utils/testing.utils.ts": [
                {
                    "name": "TESTING_UTILS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  mockApplicantDetails,\n  mockFormGroupDirective,\n  mockVehicleDetails,\n  mockAdrDetails,\n  mockTank,\n  mockTankDetails,\n  mockTc2Details,\n  mockTc3Details,\n  mockMetaData,\n  mockTechRecord,\n  mockApplicant,\n  mockMicrofilm,\n  mockPlates,\n  mockAuthoIntoService,\n  mockLettersOfAuth,\n  mockPurchaser,\n  mockManufacturer,\n  mockAxle,\n  mockBrakes,\n  mockBodyType,\n  mockAxleSpacing,\n  mockDDA,\n  mockBrakeForceWheelsNotLocked,\n  mockBrakeForceWheelsUpToHalfLocked,\n  mockDimensions\n}",
                    "rawdescription": "*******************SOME GROUND RULES*************************************\n\n\nWe use this util file essentially for unit testing to enable a clean mock object provision\nfor our unit testing. Ideally more simplified object should/can be added.\nAmendments of returned object should be done less often or not at ALL. We use\npartial<T> object implementation hence the required object update(s) should be\npassed in from the specific unit test of interest.",
                    "description": "<p><em><strong><strong><strong><strong><strong><strong><strong><strong><strong>SOME GROUND RULES</strong></strong></strong></strong></strong></strong></strong></strong></strong></em>******************</p>\n<p>We use this util file essentially for unit testing to enable a clean mock object provision\nfor our unit testing. Ideally more simplified object should/can be added.\nAmendments of returned object should be done less often or not at ALL. We use\npartial<T> object implementation hence the required object update(s) should be\npassed in from the specific unit test of interest.</p>\n"
                }
            ]
        },
        "groupedFunctions": {
            "archive/src/app/utils/form.utils.ts": [
                {
                    "name": "addControlsToFormGroup",
                    "file": "archive/src/app/utils/form.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "listOfFields",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "listOfFields",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/store/reducers/app-form-state.reducers.ts": [
                {
                    "name": "AppFormStateReducer",
                    "file": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "AppFormState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialAppFormState"
                        },
                        {
                            "name": "action",
                            "type": "AppFormStateActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "AppFormState",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AppFormState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialAppFormState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "AppFormStateActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/shared/delayed-retry/delayed-retry.ts": [
                {
                    "name": "delayedRetry",
                    "file": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Observable<any>"
                }
            ],
            "archive/src/app/store/reducers/error.reducers.ts": [
                {
                    "name": "ErrorReducer",
                    "file": "archive/src/app/store/reducers/error.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ErrorState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialErrorState"
                        },
                        {
                            "name": "action",
                            "type": "ErrorActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ErrorState",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ErrorState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialErrorState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ErrorActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts": [
                {
                    "name": "filterCategories",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "category",
                            "type": "TestTypeCategory",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "testRecord",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "TestTypeCategory",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "testRecord",
                            "type": "TestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTestTypeTree",
                    "file": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "filteredCategories",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "filteredCategories",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/guards/form-state.guard.ts": [
                {
                    "name": "getQueryString",
                    "file": "archive/src/app/guards/form-state.guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "queryParams",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getResolvedUrl",
                    "file": "archive/src/app/guards/form-state.guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/app.module.ts": [
                {
                    "name": "initializeApp",
                    "file": "archive/src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appConfig",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "appConfig",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "msAdalAngular6ConfigFactory",
                    "file": "archive/src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "archive/src/app/store/reducers/Loader.reducers.ts": [
                {
                    "name": "LoaderReducer",
                    "file": "archive/src/app/store/reducers/Loader.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialLoaderState"
                        },
                        {
                            "name": "action",
                            "type": "LoadingActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ILoaderState",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialLoaderState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "LoadingActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "localStorageSyncReducer",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "reducer",
                            "type": "ActionReducer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ActionReducer<any>",
                    "jsdoctags": [
                        {
                            "name": "reducer",
                            "type": "ActionReducer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "MSALGuardConfigFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "MsalGuardConfiguration"
                },
                {
                    "name": "MSALInstanceFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "IPublicClientApplication"
                },
                {
                    "name": "MSALInterceptorConfigFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "MsalInterceptorConfiguration"
                }
            ],
            "archive/src/app/utils/testing.utils.ts": [
                {
                    "name": "mockAdditionalNotes",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AdditionalNotes",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAddressInformation",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AddressInformation",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAdrDetails",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AdrDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockApplicant",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Applicant",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockApplicantDetails",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "ApplicantDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAuthoIntoService",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AuthIntoService",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAxle",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Axle",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAxleBrakes",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AxleBrakes",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockAxleSpacing",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "AxleSpacing",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockBodyType",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "BodyType",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockBrakeForceWheelsNotLocked",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "BrakeForceWheelsNotLocked",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockBrakeForceWheelsUpToHalfLocked",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "BrakeForceWheelsUpToHalfLocked",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockBrakes",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Brakes",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockDDA",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "DDA",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockDimensions",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Dimensions",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockFormGroupDirective",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "returnType": "FormGroupDirective",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockLettersOfAuth",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "LettersOfAuth",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockManufacturer",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "ManufacturerDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockMetaData",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "MetaData"
                },
                {
                    "name": "mockMicrofilm",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Microfilm",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockPlates",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Plate",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockPurchaser",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "PurchaserDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTank",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Tank",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTankDetails",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "TankDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTc2Details",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Tc2Details",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTc3Details",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Tc3Details",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTechRecord",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "TechRecord",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTyres",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Tyres",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockVehicleDetails",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "VehicleDetails",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockWeights",
                    "file": "archive/src/app/utils/testing.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Weights",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/utils/test-model.utils.ts": [
                {
                    "name": "mockTestRecord",
                    "file": "archive/src/app/utils/test-model.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "TestResultModel",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTestType",
                    "file": "archive/src/app/utils/test-model.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "TestType",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mockTestTypeCategory",
                    "file": "archive/src/app/utils/test-model.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "TestTypeCategory",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/utils/test-type-applicable-models.utils.ts": [
                {
                    "name": "mockTestTypesApplicable",
                    "file": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "archive/src/app/modal/modal.reducer.ts": [
                {
                    "name": "ModalReducer",
                    "file": "archive/src/app/modal/modal.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ModalState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialModalState"
                        },
                        {
                            "name": "action",
                            "type": "ModalStateActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ModalState",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ModalState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialModalState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ModalStateActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/shared/components/date-input/date-input.component.ts": [
                {
                    "name": "pad",
                    "file": "archive/src/app/shared/components/date-input/date-input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "num",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/store/reducers/ReferenceData.reducers.ts": [
                {
                    "name": "ReferenceDataReducers",
                    "file": "archive/src/app/store/reducers/ReferenceData.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialReferenceDataState"
                        },
                        {
                            "name": "action",
                            "type": "ReferenceDataActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialReferenceDataState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ReferenceDataActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/utils/utils.functions.ts": [
                {
                    "name": "scrollToSection",
                    "file": "archive/src/app/utils/utils.functions.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "sections",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sectionTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "sections",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sectionTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/user-service/user-service.reducer.ts": [
                {
                    "name": "UserServiceReducer",
                    "file": "src/app/user-service/user-service.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserServiceState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserServiceState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/store/reducers/VehicleTechRecordModel.reducers.ts": [
                {
                    "name": "VehicleTechRecordReducers",
                    "file": "archive/src/app/store/reducers/VehicleTechRecordModel.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialVehicleTechRecordModelState"
                        },
                        {
                            "name": "action",
                            "type": "VehicleTechRecordActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "VehicleTechRecordState",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialVehicleTechRecordModelState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "VehicleTechRecordActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "archive/src/app/store/reducers/VehicleTestResultModel.reducers.ts": [
                {
                    "name": "VehicleTestResultModelReducers",
                    "file": "archive/src/app/store/reducers/VehicleTestResultModel.reducers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialVehicleTestResultModelState"
                        },
                        {
                            "name": "action",
                            "type": "VehicleTestResultModelActions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialVehicleTestResultModelState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "VehicleTestResultModelActions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "archive/src/app/test-record/test-types-applicable.enum.ts": [
                {
                    "name": "ANNIVERSARY_DATE_APPLICABLE",
                    "childs": [
                        {
                            "name": "Annual Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "Class 6A seat belt installation check (annual test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "3"
                        },
                        {
                            "name": "Class 6A seat belt installation check (first test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "4"
                        },
                        {
                            "name": "Paid annual test retest ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "7"
                        },
                        {
                            "name": "Paid retest with Class 6A seat belt installation check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "8"
                        },
                        {
                            "name": "Part paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "14"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "18"
                        },
                        {
                            "name": "Part-paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "21"
                        },
                        {
                            "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "27"
                        },
                        {
                            "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "28"
                        },
                        {
                            "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "93"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "76"
                        },
                        {
                            "name": "First Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "95"
                        },
                        {
                            "name": "Annual Test HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "94"
                        },
                        {
                            "name": "Paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "53"
                        },
                        {
                            "name": "Part paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "54"
                        },
                        {
                            "name": "Paid first test retest HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "65"
                        },
                        {
                            "name": "Part paid first test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "66"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "70"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "79"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "82"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "83"
                        },
                        {
                            "name": "First Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "41"
                        },
                        {
                            "name": "Annual Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "40"
                        },
                        {
                            "name": "Paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "98"
                        },
                        {
                            "name": "Part paid annual test retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "99"
                        },
                        {
                            "name": "Free first test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "67"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "107"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "113"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "116"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "119"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "120"
                        },
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "CERTIFICATE_APPLICABLE",
                    "childs": [
                        {
                            "name": "Annual Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "Class 6A seat belt installation check (annual test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "3"
                        },
                        {
                            "name": "Class 6A seat belt installation check (first test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "4"
                        },
                        {
                            "name": "Paid annual test retest ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "7"
                        },
                        {
                            "name": "Paid retest with Class 6A seat belt installation check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "8"
                        },
                        {
                            "name": "Part paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "14"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "18"
                        },
                        {
                            "name": "Part-paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "21"
                        },
                        {
                            "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "27"
                        },
                        {
                            "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "28"
                        },
                        {
                            "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "93"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "76"
                        },
                        {
                            "name": "First Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "95"
                        },
                        {
                            "name": "Annual Test HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "94"
                        },
                        {
                            "name": "Paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "53"
                        },
                        {
                            "name": "Part paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "54"
                        },
                        {
                            "name": "Paid first test retest HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "65"
                        },
                        {
                            "name": "Part paid first test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "66"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "70"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "79"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "82"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "83"
                        },
                        {
                            "name": "First Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "41"
                        },
                        {
                            "name": "Annual Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "40"
                        },
                        {
                            "name": "Paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "98"
                        },
                        {
                            "name": "Part paid annual test retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "99"
                        },
                        {
                            "name": "Free first test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "67"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "107"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "113"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "116"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "119"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "120"
                        },
                        {
                            "name": "ADR test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "50"
                        },
                        {
                            "name": "Paid ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "59"
                        },
                        {
                            "name": "Free ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "60"
                        },
                        {
                            "name": "Paid road worthiness retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "62"
                        },
                        {
                            "name": "Part paid road worthiness retest HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "63"
                        },
                        {
                            "name": "Paid road worthiness retest TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "101"
                        },
                        {
                            "name": "Voluntary road worthiness test HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "122"
                        },
                        {
                            "name": "Voluntary road worthiness test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "91"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "44"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "39"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "45"
                        },
                        {
                            "name": "TIR test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "49"
                        },
                        {
                            "name": "Paid TIR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "56"
                        },
                        {
                            "name": "Free TIR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "57"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "DEFECTS_APPLICABLE",
                    "childs": [
                        {
                            "name": "Notifiable alteration check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "38"
                        },
                        {
                            "name": "Voluntary brake test1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "30"
                        },
                        {
                            "name": "Voluntary multi check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "33"
                        },
                        {
                            "name": "Voluntary speed limiter check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "34"
                        },
                        {
                            "name": "Voluntary smoke test2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "32"
                        },
                        {
                            "name": "Voluntary headlamp aim check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "31"
                        },
                        {
                            "name": "Vitesse 100 Replacement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "100"
                        },
                        {
                            "name": "Vitesse 100 Application",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "121"
                        },
                        {
                            "name": "Voluntary Tempo 100",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "36"
                        },
                        {
                            "name": "Voluntary multi-check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "86"
                        },
                        {
                            "name": "Voluntary Speed limiter check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "88"
                        },
                        {
                            "name": "Voluntary smoke test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "89"
                        },
                        {
                            "name": "Voluntary headlamp aim test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "90"
                        },
                        {
                            "name": "Paid TIR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "56"
                        },
                        {
                            "name": "TIR test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "49"
                        },
                        {
                            "name": "Paid ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "59"
                        },
                        {
                            "name": "Free ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "60"
                        },
                        {
                            "name": "ADR test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "50"
                        },
                        {
                            "name": "Voluntary Shaker plate check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "87"
                        },
                        {
                            "name": "Free notifiable alteration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "47"
                        },
                        {
                            "name": "Paid notifiable alteration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "48"
                        },
                        {
                            "name": "Voluntary brake test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "85"
                        },
                        {
                            "name": "Free TIR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "57"
                        },
                        {
                            "name": "Low Emissions Certificate1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "39"
                        },
                        {
                            "name": "Low Emissions Certificate3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "45"
                        },
                        {
                            "name": "Low Emissions Certificate2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "44"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "EMISSION_DETAILS_APPLICABLE",
                    "childs": [
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "44"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "39"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "45"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "EXPIRY_DATE_APPLICABLE",
                    "childs": [
                        {
                            "name": "Annual Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "Class 6A seat belt installation check (annual test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "3"
                        },
                        {
                            "name": "Class 6A seat belt installation check (first test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "4"
                        },
                        {
                            "name": "Paid annual test retest ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "7"
                        },
                        {
                            "name": "Paid retest with Class 6A seat belt installation check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "8"
                        },
                        {
                            "name": "Part paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "14"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "18"
                        },
                        {
                            "name": "Part-paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "21"
                        },
                        {
                            "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "27"
                        },
                        {
                            "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "28"
                        },
                        {
                            "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "93"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "76"
                        },
                        {
                            "name": "First Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "95"
                        },
                        {
                            "name": "Annual Test HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "94"
                        },
                        {
                            "name": "Paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "53"
                        },
                        {
                            "name": "Part paid annual test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "54"
                        },
                        {
                            "name": "Paid first test retest HGV/TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "65"
                        },
                        {
                            "name": "Part paid first test retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "66"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "70"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "79"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "82"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "83"
                        },
                        {
                            "name": "First Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "41"
                        },
                        {
                            "name": "Annual Test TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "40"
                        },
                        {
                            "name": "Paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "98"
                        },
                        {
                            "name": "Part paid annual test retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "99"
                        },
                        {
                            "name": "Free first test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "67"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "107"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "113"
                        },
                        {
                            "name": "Part paid prohibition clearance (retest with certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "116"
                        },
                        {
                            "name": "Paid prohibition clearance on first test (full inspection with certification) 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "119"
                        },
                        {
                            "name": "Paid retest prohibition clearance on first test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "120"
                        },
                        {
                            "name": "ADR test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "50"
                        },
                        {
                            "name": "Paid ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "59"
                        },
                        {
                            "name": "Free ADR retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "60"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "44"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) with annual test 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "39"
                        },
                        {
                            "name": "Low Emissions Certificate (LEC) without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "45"
                        },
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "SEAT_BELT_APPLICABLE",
                    "childs": [
                        {
                            "name": "Annual Test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "Class 6A seat belt installation check (annual test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "3"
                        },
                        {
                            "name": "Class 6A seat belt installation check (first test)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "4"
                        },
                        {
                            "name": "Paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "7"
                        },
                        {
                            "name": "Paid retest with Class 6A seat belt installation check",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "8"
                        },
                        {
                            "name": "Part paid annual test retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "14"
                        },
                        {
                            "name": "Paid prohibition clearance (full inspection without certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "15"
                        },
                        {
                            "name": "Part paid prohibition clearance (full inspection without certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "16"
                        },
                        {
                            "name": "Paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "18"
                        },
                        {
                            "name": "Paid prohibition clearance (retest without certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "19"
                        },
                        {
                            "name": "Part-paid prohibition clearance (retest with certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "21"
                        },
                        {
                            "name": "Part-paid prohibition clearance (retest without certificate)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "22"
                        },
                        {
                            "name": "Part-paid prohibition clearance (partial inspection without certification)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "23"
                        },
                        {
                            "name": "Paid prohibition clearance with Class 6A seat belt installation check (full inspection)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "27"
                        },
                        {
                            "name": "Prohibition clearance (retest with Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "28"
                        },
                        {
                            "name": "Prohibition clearance (retest without Class 6A seat belt installation check)",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "93"
                        },
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "Seatbelt installation check COIF without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "147"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "SPECIALIST_CERTIFICATE_APPLICABLE",
                    "childs": [
                        {
                            "name": "Basic IVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "125"
                        },
                        {
                            "name": "Normal IVA inspection 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "126"
                        },
                        {
                            "name": "Normal IVA inspection 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "186"
                        },
                        {
                            "name": "Normal IVA inspection 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "187"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "128"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "188"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "189"
                        },
                        {
                            "name": "Appeal on a basic IVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "129"
                        },
                        {
                            "name": "IVA mutual recognition/ end of series & inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "130"
                        },
                        {
                            "name": "Full MSVA moped vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "133"
                        },
                        {
                            "name": "Full MSVA unbodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "134"
                        },
                        {
                            "name": "Full MSVA bodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "135"
                        },
                        {
                            "name": "Part MSVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "136"
                        },
                        {
                            "name": "Appeal on a MSVA moped vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "138"
                        },
                        {
                            "name": "Appeal on a MSVA unbodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "139"
                        },
                        {
                            "name": "Appeal on a MSVA bodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "140"
                        },
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "DDA Schedule 1, 2 or 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "150"
                        },
                        {
                            "name": "DDA Schedule 1 + 2 or 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "151"
                        },
                        {
                            "name": "Paid basic IVA inspection retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "158"
                        },
                        {
                            "name": "Free basic IVA inspection retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "159"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "161"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "192"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "193"
                        },
                        {
                            "name": "Free normal IVA inspection retest 4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "162"
                        },
                        {
                            "name": "Free normal IVA inspection retest 5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "194"
                        },
                        {
                            "name": "Free normal IVA inspection retest 6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "195"
                        },
                        {
                            "name": "Mutual recognition/ end of series IVA retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "163"
                        },
                        {
                            "name": "Paid MSVA moped vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "166"
                        },
                        {
                            "name": "Free MSVA moped vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "167"
                        },
                        {
                            "name": "Paid MSVA unbodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "169"
                        },
                        {
                            "name": "Free MSVA unbodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "170"
                        },
                        {
                            "name": "Paid MSVA bodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "172"
                        },
                        {
                            "name": "Free MSVA bodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "173"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        },
                        {
                            "name": "DDA Schedule 1, 2 or 3 retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "181"
                        },
                        {
                            "name": "DDA Schedule 1 + 2 or 3 retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "182"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "SPECIALIST_COIF_APPLICABLE",
                    "childs": [
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "COIF without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "143"
                        },
                        {
                            "name": "Type approved to bus directive COIF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "144"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "Seatbelt installation check COIF without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "147"
                        },
                        {
                            "name": "Annex 7 COIF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "148"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "COIF retest without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "176"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        },
                        {
                            "name": "Annex 7 COIF retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "178"
                        },
                        {
                            "name": "TILT COIF retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "179"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                },
                {
                    "name": "SPECIALIST_TEST_APPLICABLE",
                    "childs": [
                        {
                            "name": "Basic IVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "125"
                        },
                        {
                            "name": "Normal IVA inspection 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "126"
                        },
                        {
                            "name": "Normal IVA inspection 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "186"
                        },
                        {
                            "name": "Normal IVA inspection 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "187"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "128"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "188"
                        },
                        {
                            "name": "Appeal on a normal IVA inspection 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "189"
                        },
                        {
                            "name": "Appeal on a basic IVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "129"
                        },
                        {
                            "name": "IVA mutual recognition/ end of series & inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "130"
                        },
                        {
                            "name": "Full MSVA moped vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "133"
                        },
                        {
                            "name": "Full MSVA unbodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "134"
                        },
                        {
                            "name": "Full MSVA bodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "135"
                        },
                        {
                            "name": "Part MSVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "136"
                        },
                        {
                            "name": "Appeal on a MSVA moped vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "138"
                        },
                        {
                            "name": "Appeal on a MSVA unbodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "139"
                        },
                        {
                            "name": "Appeal on a MSVA bodied vehicle inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "140"
                        },
                        {
                            "name": "COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "142"
                        },
                        {
                            "name": "COIF without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "143"
                        },
                        {
                            "name": "Type approved to bus directive COIF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "144"
                        },
                        {
                            "name": "Seatbelt installation check COIF with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "146"
                        },
                        {
                            "name": "Seatbelt installation check COIF without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "147"
                        },
                        {
                            "name": "Annex 7 COIF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "148"
                        },
                        {
                            "name": "DDA Schedule 1, 2 or 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "150"
                        },
                        {
                            "name": "DDA Schedule 1 + 2 or 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "151"
                        },
                        {
                            "name": "Normal voluntary IVA inspection 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "153"
                        },
                        {
                            "name": "Normal voluntary IVA inspection 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "190"
                        },
                        {
                            "name": "Normal voluntary IVA inspection 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "191"
                        },
                        {
                            "name": "Basic voluntary IVA inspection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "154"
                        },
                        {
                            "name": "Paid basic IVA inspection retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "158"
                        },
                        {
                            "name": "Free basic IVA inspection retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "159"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "161"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "192"
                        },
                        {
                            "name": "Paid normal IVA inspection retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "193"
                        },
                        {
                            "name": "Free normal IVA inspection retest 4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "162"
                        },
                        {
                            "name": "Free normal IVA inspection retest 5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "194"
                        },
                        {
                            "name": "Free normal IVA inspection retest 6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "195"
                        },
                        {
                            "name": "Mutual recognition/ end of series IVA retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "163"
                        },
                        {
                            "name": "Paid MSVA moped vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "166"
                        },
                        {
                            "name": "Free MSVA moped vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "167"
                        },
                        {
                            "name": "Paid MSVA unbodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "169"
                        },
                        {
                            "name": "Free MSVA unbodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "170"
                        },
                        {
                            "name": "Paid MSVA bodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "172"
                        },
                        {
                            "name": "Free MSVA bodied vehicle retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "173"
                        },
                        {
                            "name": "COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "175"
                        },
                        {
                            "name": "COIF retest without annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "176"
                        },
                        {
                            "name": "Seatbelt installation check COIF retest with annual test",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "177"
                        },
                        {
                            "name": "Annex 7 COIF retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "178"
                        },
                        {
                            "name": "TILT COIF retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "179"
                        },
                        {
                            "name": "DDA Schedule 1, 2 or 3 retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "181"
                        },
                        {
                            "name": "DDA Schedule 1 + 2 or 3 retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "182"
                        },
                        {
                            "name": "Normal voluntary IVA inspection retest 1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "184"
                        },
                        {
                            "name": "Normal voluntary IVA inspection retest 2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "196"
                        },
                        {
                            "name": "Normal voluntary IVA inspection retest 3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "197"
                        },
                        {
                            "name": "Basic voluntary IVA inspection retest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "185"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-types-applicable.enum.ts"
                }
            ],
            "archive/src/app/app.enums.ts": [
                {
                    "name": "APP_MODALS",
                    "childs": [
                        {
                            "name": "LOSE_CHANGES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "lose-changes"
                        },
                        {
                            "name": "REASON_FOR_CHANGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "reason-for-change"
                        },
                        {
                            "name": "REASON_FOR_DELETED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "reason-for-delete"
                        },
                        {
                            "name": "LOGOUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "logout"
                        },
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "COUNTRY_OF_REGISTRATION",
                    "childs": [
                        {
                            "name": "gb",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Great Britain and Northern Ireland - GB"
                        },
                        {
                            "name": "gba",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Alderney - GBA"
                        },
                        {
                            "name": "gbg",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Guernsey - GBG"
                        },
                        {
                            "name": "gbj",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Jersey - GBJ"
                        },
                        {
                            "name": "gbm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Isle of Man - GBM"
                        },
                        {
                            "name": "gbz",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Gibraltar - GBZ"
                        },
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Austria - A"
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Belgium - B"
                        },
                        {
                            "name": "bih",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Bosnia and Herzegovina - BIH"
                        },
                        {
                            "name": "bg",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Bulgaria - BG"
                        },
                        {
                            "name": "hr",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Croatia - HR"
                        },
                        {
                            "name": "cy",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Cyprus - CY"
                        },
                        {
                            "name": "cz",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Czech Republic - CZ"
                        },
                        {
                            "name": "dk",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Denmark - DK"
                        },
                        {
                            "name": "est",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Estonia - EST"
                        },
                        {
                            "name": "fin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Finland - FIN"
                        },
                        {
                            "name": "f",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "France - F"
                        },
                        {
                            "name": "d",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Germany - D"
                        },
                        {
                            "name": "gr",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Greece - GR"
                        },
                        {
                            "name": "h",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Hungary - H"
                        },
                        {
                            "name": "irl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Ireland - IRL"
                        },
                        {
                            "name": "i",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Italy - I"
                        },
                        {
                            "name": "lv",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Latvia - LV"
                        },
                        {
                            "name": "lt",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Lithuania - LT"
                        },
                        {
                            "name": "l",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Luxembourg - L"
                        },
                        {
                            "name": "m",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Malta - M"
                        },
                        {
                            "name": "nl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Netherlands - NL"
                        },
                        {
                            "name": "n",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Norway - N"
                        },
                        {
                            "name": "pl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Poland - PL"
                        },
                        {
                            "name": "p",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Portugal - P"
                        },
                        {
                            "name": "ro",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Romania - RO"
                        },
                        {
                            "name": "sk",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Slovakia - SK"
                        },
                        {
                            "name": "slo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Slovenia - SLO"
                        },
                        {
                            "name": "e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Spain - E"
                        },
                        {
                            "name": "s",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Sweden - S"
                        },
                        {
                            "name": "ch",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Switzerland - CH"
                        },
                        {
                            "name": "non-eu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Non EU"
                        },
                        {
                            "name": "not-known",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Country Not Known"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "CREATE_PAGE_LABELS",
                    "childs": [
                        {
                            "name": "CREATE_VRM_LABEL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle registration mark (VRM)"
                        },
                        {
                            "name": "CREATE_VRM_LABEL_OPTIONAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle registration mark (VRM - optional)"
                        },
                        {
                            "name": "CREATE_VIN_LABEL_ERROR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "A technical record with this VIN already exists, check the VIN or change the existing technical record"
                        },
                        {
                            "name": "CREATE_VRM_LABEL_ERROR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "A technical record with this VRM already exists, check the VRM or change the existing technical record"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "INSPECTION_TYPES",
                    "childs": [
                        {
                            "name": "Intermediate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "intermediate"
                        },
                        {
                            "name": "Periodic",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "periodic"
                        },
                        {
                            "name": "Exceptional",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "exceptional"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "MEMOS",
                    "childs": [
                        {
                            "name": "MEMOSAPPLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "07/09 3mth leak ext"
                        },
                        {
                            "name": "MEMOSAPPLY_CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "07/093mthleakext"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "NOTES",
                    "childs": [
                        {
                            "name": "GUIDANCENOTE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "New certificate requested"
                        },
                        {
                            "name": "GUIDANCENOTE_CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "newcertificaterequested"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "PANEL_TITLE",
                    "childs": [
                        {
                            "name": "VEHICLE_SUMMARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle summary"
                        },
                        {
                            "name": "BODY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Body"
                        },
                        {
                            "name": "WEIGHTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Weights"
                        },
                        {
                            "name": "TYRES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Tyres"
                        },
                        {
                            "name": "BRAKES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Brakes"
                        },
                        {
                            "name": "DDA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DDA"
                        },
                        {
                            "name": "DIMENSIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Dimensions"
                        },
                        {
                            "name": "ADR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ADR"
                        },
                        {
                            "name": "APPLICANT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Applicant"
                        },
                        {
                            "name": "DOCUMENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Documents"
                        },
                        {
                            "name": "PURCHASER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Purchaser"
                        },
                        {
                            "name": "MANUFACTURER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Manufacturer"
                        },
                        {
                            "name": "AUTH_INTO_SERVICE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Authorization into service"
                        },
                        {
                            "name": "LETTERS_OF_AUTH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Letters of authorization"
                        },
                        {
                            "name": "NOTES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Notes"
                        },
                        {
                            "name": "TEST_HISTORY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Test"
                        },
                        {
                            "name": "TECHNICAL_RECORD_HISTORY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Technical record history"
                        },
                        {
                            "name": "PLATES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Plates"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "RECORD_COMPLETENESS",
                    "childs": [
                        {
                            "name": "complete",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Complete"
                        },
                        {
                            "name": "skeleton",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Skeleton - not enough information to perform a vehicle test"
                        },
                        {
                            "name": "testable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Testable - some important information is missing"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "RECORD_STATUS",
                    "childs": [
                        {
                            "name": "CURRENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "current"
                        },
                        {
                            "name": "PROVISIONAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "provisional"
                        },
                        {
                            "name": "ARCHIVED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "archived"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "SEARCH_CRITERIA",
                    "childs": [
                        {
                            "name": "ALL_CRITERIA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle registration mark, trailer ID or vehicle identification number"
                        },
                        {
                            "name": "VRM_CRITERIA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle registration mark (VRM)"
                        },
                        {
                            "name": "FULL_VIN_CRITERIA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Full vehicle identification number (VIN)"
                        },
                        {
                            "name": "PARTIAL_VIN_CRITERIA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Partial VIN (last 6 characters)"
                        },
                        {
                            "name": "TRL_CRITERIA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Trailer ID"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "SUBSTANCES",
                    "childs": [
                        {
                            "name": "PERMITTED_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Substances permitted under the tank code and any special provisions specified in 9 may be carried"
                        },
                        {
                            "name": "PERMITTED_CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "substancespermittedunderthetankcodeandanyspecialprovisionsspecifiedin9maybecarried"
                        },
                        {
                            "name": "PERMITTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "permitted"
                        },
                        {
                            "name": "CLASSNUMBER_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Substances (Class UN number and if necessary packing group and proper shipping name) may be carried"
                        },
                        {
                            "name": "CLASSNUMBER_CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "substances(classunnumberandifnecessarypackinggroupandpropershippingname)maybecarried"
                        },
                        {
                            "name": "CLASSNUMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "classnumber"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "VEHICLE_TECH_RECORD_SEARCH_ERRORS",
                    "childs": [
                        {
                            "name": "NOT_FOUND",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Vehicle not found, check the vehicle registration mark, trailer ID, vehicle identification number or change the search criteria to find a vehicle"
                        },
                        {
                            "name": "MULTIPLE_FOUND",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Multiple vehicles found, search using the full vehicle identification number"
                        },
                        {
                            "name": "NO_INPUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Enter a vehicle registration mark, trailer ID or vehicle identification number"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "VEHICLE_TYPES",
                    "childs": [
                        {
                            "name": "PSV",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "psv"
                        },
                        {
                            "name": "HGV",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hgv"
                        },
                        {
                            "name": "TRL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "trl"
                        },
                        {
                            "name": "Car",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "car"
                        },
                        {
                            "name": "LGV",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "lgv"
                        },
                        {
                            "name": "Moto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "motorcycle"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                },
                {
                    "name": "VIEW_STATE",
                    "childs": [
                        {
                            "name": "VIEW_ONLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 0
                        },
                        {
                            "name": "EDIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "CREATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/app.enums.ts"
                }
            ],
            "archive/src/app/technical-record/adr/adr-validation.mapper.ts": [
                {
                    "name": "CHECKER",
                    "childs": [
                        {
                            "name": "BATTERY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "battery"
                        },
                        {
                            "name": "TANK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tank"
                        },
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "na"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts"
                },
                {
                    "name": "STATUS",
                    "childs": [
                        {
                            "name": "MANDATORY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MANDATORY"
                        },
                        {
                            "name": "HIDDEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "HIDDEN"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/technical-record/adr/adr-validation.mapper.ts"
                }
            ],
            "archive/src/app/store/actions/app-form-state.actions.ts": [
                {
                    "name": "EAppFormStateActions",
                    "childs": [
                        {
                            "name": "SetAppFormDirty",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SetAppFormDirty"
                        },
                        {
                            "name": "SetAppFormPristine",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SetAppFormPristine"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/app-form-state.actions.ts"
                }
            ],
            "archive/src/app/store/actions/Error.actions.ts": [
                {
                    "name": "EErrorActions",
                    "childs": [
                        {
                            "name": "SetErrorMessage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Error] Set"
                        },
                        {
                            "name": "ClearErrorMessage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Error] Clear"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/Error.actions.ts"
                }
            ],
            "archive/src/app/store/actions/Loader.actions.ts": [
                {
                    "name": "ELoadingActions",
                    "childs": [
                        {
                            "name": "AppIsLoading",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Loading] True"
                        },
                        {
                            "name": "AppIsNotLoading",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Loading] False"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/Loader.actions.ts"
                }
            ],
            "archive/src/app/test-record/test-record.enums.ts": [
                {
                    "name": "EMISSION_STANDARD",
                    "childs": [
                        {
                            "name": "EMISSION_STANDARD_1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0.10 g/kWh Euro 3 PM"
                        },
                        {
                            "name": "EMISSION_STANDARD_2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0.03 g/kWh Euro IV PM"
                        },
                        {
                            "name": "EMISSION_STANDARD_3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Euro 3"
                        },
                        {
                            "name": "EMISSION_STANDARD_4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Euro 4"
                        },
                        {
                            "name": "EMISSION_STANDARD_5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Euro 6"
                        },
                        {
                            "name": "EMISSION_STANDARD_6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Euro VI"
                        },
                        {
                            "name": "EMISSION_STANDARD_7",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Full Electric"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_CAR",
                    "childs": [
                        {
                            "name": "M1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "M1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_HGV",
                    "childs": [
                        {
                            "name": "N2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "N2"
                        },
                        {
                            "name": "N3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "N3"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_LGV",
                    "childs": [
                        {
                            "name": "N1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "N1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_MOTORCYCLE",
                    "childs": [
                        {
                            "name": "L1eA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L1eA"
                        },
                        {
                            "name": "L1e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L1e"
                        },
                        {
                            "name": "L2e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L2e"
                        },
                        {
                            "name": "L3e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L3e"
                        },
                        {
                            "name": "L4e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L4e"
                        },
                        {
                            "name": "L5e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L5e"
                        },
                        {
                            "name": "L6e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L6e"
                        },
                        {
                            "name": "L7e",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "L7e"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_PSV",
                    "childs": [
                        {
                            "name": "M2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "M2"
                        },
                        {
                            "name": "M3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "M3"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "EU_VEHICLE_CATEGORY_TRL",
                    "childs": [
                        {
                            "name": "O1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "O1"
                        },
                        {
                            "name": "O2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "O2"
                        },
                        {
                            "name": "O3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "O3"
                        },
                        {
                            "name": "O4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "O4"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "FUEL_TYPE",
                    "childs": [
                        {
                            "name": "FUEL_TYPE_1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Diesel"
                        },
                        {
                            "name": "FUEL_TYPE_2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Gas-cng"
                        },
                        {
                            "name": "FUEL_TYPE_3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Gas-lng"
                        },
                        {
                            "name": "FUEL_TYPE_4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Gas-lpg"
                        },
                        {
                            "name": "FUEL_TYPE_5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Fuel cell"
                        },
                        {
                            "name": "FUEL_TYPE_6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Petrol"
                        },
                        {
                            "name": "FUEL_TYPE_7",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Full electric"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "MOD_TYPE",
                    "childs": [
                        {
                            "name": "MOD_TYPE_1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "P - Particulate trap"
                        },
                        {
                            "name": "MOD_TYPE_2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "M - Modification or change of engine"
                        },
                        {
                            "name": "MOD_TYPE_3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "G - Gas engine"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "ODOMETER_READING_UNITS",
                    "childs": [
                        {
                            "name": "KM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "kilometres"
                        },
                        {
                            "name": "MILES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "miles"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "REASON_FOR_ABANDONING_HGV_TRL",
                    "childs": [
                        {
                            "name": "R1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was not submitted for test at the appointed time"
                        },
                        {
                            "name": "R2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The relevant test fee has not been paid"
                        },
                        {
                            "name": "R3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The trailer was not accompanied by a suitable motor vehicle"
                        },
                        {
                            "name": "R4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "R5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "A Ministry Plate has been issued and is not fitted to the vehicle or trailer"
                        },
                        {
                            "name": "R6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The particulars of the motor vehicle or trailer (e.g. number of axles / axle weights) do not match the VTG6 Ministry Plate fitted to the vehicle"
                        },
                        {
                            "name": "R7",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle or motor vehicle by which it is accompanied emits substantial amounts of smoke so as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R8",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle or trailer (any part) was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R9",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "No proof was given that the vehicle used for carrying dangerous/toxic/corrosive or inflammable goods had been cleaned or otherwise rendered safe for test"
                        },
                        {
                            "name": "R10",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                        },
                        {
                            "name": "R11",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was not loaded as required"
                        },
                        {
                            "name": "R12",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The test could not be completed due to a failure of a part of the vehicle, or trailer and accompanying motor vehicle which made movement impossible"
                        },
                        {
                            "name": "R13",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was presented for test carrying livestock or other unsuitable material"
                        },
                        {
                            "name": "R14",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                        },
                        {
                            "name": "R15",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle exhaust outlet has been modified preventing a metered smoke check"
                        },
                        {
                            "name": "R16",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The examiner could not open the tachograph"
                        },
                        {
                            "name": "R17",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The driver and/or presenter of the vehicle refused to or was unable to comply with the instructions of DVSA staff making it impractical or unsafe to continue the test"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "REASON_FOR_ABANDONING_PSV",
                    "childs": [
                        {
                            "name": "R1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was not submitted for test at the appointed time"
                        },
                        {
                            "name": "R2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The relevant test fee has not been paid"
                        },
                        {
                            "name": "R3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "There was no means of identifying the vehicle i.e. the vehicle chassis/serial number was missing or did not relate to the vehicle"
                        },
                        {
                            "name": "R4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The registration document or other evidence of the date of first registration was not presented when requested"
                        },
                        {
                            "name": "R5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was emitting substantial amounts of exhaust smoke so as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R7",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                        },
                        {
                            "name": "R8",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The test could not be completed due to a failure of a part of the vehicle which made movement under its own power impossible"
                        },
                        {
                            "name": "R9",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                        },
                        {
                            "name": "R10",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "R11",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle exhaust outlet has been modified in such a way as to prevent a metered smoke check being conducted"
                        },
                        {
                            "name": "R12",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "A proper examination cannot be readily carried out as any door engine cover hatch or other access device designed to be opened is locked or otherwise cannot be opened"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "REASON_FOR_ABANDONING_TIR",
                    "childs": [
                        {
                            "name": "R1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was not submitted for test at the appointed time"
                        },
                        {
                            "name": "R2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The relevant test fee has not been paid"
                        },
                        {
                            "name": "R3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The trailer was not accompanied by a suitable drawing motor vehicle"
                        },
                        {
                            "name": "R4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "There is not permanently fixed to the chassis a serial number (motor vehicle) or the identification mark issued by the Secretary of State (trailer)"
                        },
                        {
                            "name": "R5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle or motor vehicle by which it is accompanied emits substantial amounts of smoke so as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle or trailer (any part) was in such a dirty or dangerous condition as to make it unreasonable for the test to be carried out"
                        },
                        {
                            "name": "R7",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle did not have sufficient fuel and oil to allow the test to be carried out"
                        },
                        {
                            "name": "R8",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The test could not be completed due to a failure of a part of the vehicle, or trailer and accompanying motor vehicle which made movement impossible"
                        },
                        {
                            "name": "R9",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The vehicle was presented for test carrying unsuitable material"
                        },
                        {
                            "name": "R10",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Current Health and Safety legislation cannot be met in testing the vehicle"
                        },
                        {
                            "name": "R11",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The driver and/or presenter of the vehicle refused to or was unable to comply with the instructions of DVSA staff making it impractical or unsafe to continue the test"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "RESULT",
                    "childs": [
                        {
                            "name": "FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Fail"
                        },
                        {
                            "name": "PASS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Pass"
                        },
                        {
                            "name": "PRS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PRS"
                        },
                        {
                            "name": "ABANDONED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Abandoned"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                },
                {
                    "name": "TEST_STATION_TYPE",
                    "childs": [
                        {
                            "name": "ATF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ATF"
                        },
                        {
                            "name": "GVTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "GVTS"
                        },
                        {
                            "name": "HQ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "HQ"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/test-record/test-record.enums.ts"
                }
            ],
            "archive/src/app/modal/modal.actions.ts": [
                {
                    "name": "EModalStateActions",
                    "childs": [
                        {
                            "name": "LoadModal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Load] Modal"
                        },
                        {
                            "name": "ResetModal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Reset] Modal"
                        },
                        {
                            "name": "ChangeView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ChangeView] Modal"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/modal/modal.actions.ts"
                }
            ],
            "archive/src/app/store/actions/ReferenceData.actions.ts": [
                {
                    "name": "EReferenceDataActions",
                    "childs": [
                        {
                            "name": "LoadPreparers",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LoadPreparers"
                        },
                        {
                            "name": "LoadPreparersSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Preparers Guard] LoadPreparersSuccess"
                        },
                        {
                            "name": "LoadTestStations",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LoadTestStations"
                        },
                        {
                            "name": "LoadTestStationsSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestStation Guard] LoadTestStationsSuccess"
                        },
                        {
                            "name": "LoadTestTypeCategoriesSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestTypeCategories Guard LoadTestTypeCategoriesSuccess]"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/ReferenceData.actions.ts"
                }
            ],
            "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts": [
                {
                    "name": "EVehicleTechRecordActions",
                    "childs": [
                        {
                            "name": "GetVehicleTechRecordHavingStatusAll",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll"
                        },
                        {
                            "name": "GetVehicleTechRecordHavingStatusAllSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VehicleTechnicalRecordEffect] Get VehicleTechRecordHavingStatusAll Success"
                        },
                        {
                            "name": "CreateVehicleTechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TechRecordContainer] Create VehicleTechRecord"
                        },
                        {
                            "name": "UpdateVehicleTechRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TechRecordContainer] Update VehicleTechRecord"
                        },
                        {
                            "name": "UpdateVehicleTechRecordSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VehicleTechnicalRecordEffect] Update VehicleTechRecord Success"
                        },
                        {
                            "name": "SetVehicleTechRecordOnCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TechnicalRecordCreateComponent] Set Vehicle Technical Record On Create"
                        },
                        {
                            "name": "SetSelectedVehicleTechnicalRecord",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[MultipleTechRecordContainer] Set Selected Vehicle Technical Record"
                        },
                        {
                            "name": "SetSelectedVehicleTechRecordSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VehicleTechnicalRecordEffect] Set Selected Vehicle Technical Record Sucess"
                        },
                        {
                            "name": "SetViewState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VehicleTechnicalRecordEffect] Set ViewState"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts"
                }
            ],
            "archive/src/app/store/actions/VehicleTestResultModel.actions.ts": [
                {
                    "name": "EVehicleTestResultModelActions",
                    "childs": [
                        {
                            "name": "GetVehicleTestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestResultModel] Get TestResultModel"
                        },
                        {
                            "name": "GetVehicleTestResultModelSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestResultModel] Get TestResultModel Success"
                        },
                        {
                            "name": "GetVehicleTestResultModelFailure",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestResultModel] Get TestResultModel Failure"
                        },
                        {
                            "name": "SetTestViewState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[TestResultComponent] SetTestViewState"
                        },
                        {
                            "name": "UpdateTestResult",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UpdateTestResult] Update Test Result"
                        },
                        {
                            "name": "UpdateTestResultSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UpdateTestResultSuccess]"
                        },
                        {
                            "name": "SetSelectedTestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[SetSelectedVehicleTestResultModel]"
                        },
                        {
                            "name": "SetSelectedTestResultModelSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[SetSelectedVehicleTestResultModelSuccess]"
                        },
                        {
                            "name": "UpdateSelectedTestResultModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UpdateSelectedTestResultModel]"
                        },
                        {
                            "name": "UpdateSelectedTestResultModelSuccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UpdateSelectedTestResultModelSuccess]"
                        },
                        {
                            "name": "DownloadCertificate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[DownloadCertificate]"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "archive/src/app/store/actions/app-form-state.actions.ts": [
                {
                    "name": "AppFormStateActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SetAppFormDirty | SetAppFormPristine",
                    "file": "archive/src/app/store/actions/app-form-state.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/store/actions/Error.actions.ts": [
                {
                    "name": "ErrorActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SetErrorMessage | ClearErrorMessage",
                    "file": "archive/src/app/store/actions/Error.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/store/actions/Loader.actions.ts": [
                {
                    "name": "LoadingActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "LoadingTrue | LoadingFalse",
                    "file": "archive/src/app/store/actions/Loader.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/modal/modal.actions.ts": [
                {
                    "name": "ModalStateActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "LoadModal | ResetModal | ChangeView",
                    "file": "archive/src/app/modal/modal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/store/actions/ReferenceData.actions.ts": [
                {
                    "name": "ReferenceDataActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "LoadPreparers | LoadTestStations | LoadPreparersSuccess | LoadTestStationsSuccess | LoadTestTypeCategoriesSuccess",
                    "file": "archive/src/app/store/actions/ReferenceData.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts": [
                {
                    "name": "VehicleTechRecordActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "GetVehicleTechRecordHavingStatusAll | GetVehicleTechRecordHavingStatusAllSuccess | SetVehicleTechRecordOnCreate | CreateVehicleTechRecord | UpdateVehicleTechRecord | UpdateVehicleTechRecordSuccess | SetSelectedVehicleTechnicalRecord | SetSelectedVehicleTechRecordSuccess | SetViewState",
                    "file": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "archive/src/app/store/actions/VehicleTestResultModel.actions.ts": [
                {
                    "name": "VehicleTestResultModelActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "GetVehicleTestResultModel | GetVehicleTestResultModelSuccess | GetVehicleTestResultModelFailure | SetTestViewState | UpdateTestResult | UpdateTestResultSuccess | SetSelectedTestResultModel | SetSelectedTestResultModelSuccess | UpdateSelectedTestResultModel | UpdateSelectedTestResultModelSuccess | DownloadCertificate",
                    "file": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent",
                        "canActivate": [
                            "MsalGuard"
                        ]
                    },
                    {
                        "path": "search",
                        "component": "SearchComponent",
                        "canActivate": [
                            "MsalGuard"
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "archive/e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app-user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.config.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.enums.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RECORD_COMPLETENESS_complete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.enums.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RECORD_COMPLETENESS_skeleton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.enums.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RECORD_COMPLETENESS_testable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "initializeApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "msAdalAngular6ConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "adalConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/directives/form-connector/form-connector.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormConnectorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/guards/form-state.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "FormStateGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/guards/form-state.guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getQueryString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/guards/form-state.guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getResolvedUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/landing-page/landing-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/components/lose-changes/lose-changes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoseChangesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChangeView",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadModal",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ResetModal",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModalEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalContent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalPayload",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ModalReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialModalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentModalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getModalPayload",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/modal/modal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/Tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tank",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/Tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankDetails",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/Tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankStatement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/Tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tc2Details",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/Tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tc3Details",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdditionalNotes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdrDetails",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApplicantDetails",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleDetails",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/app-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BodyPSV",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BodyType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBody",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/defect.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdditionalInformation",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/defect.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Defect",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/defect.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Location",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/dialog-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/document-meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocumentInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/document-meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdditionalNotes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdrDetails",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MetaData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tank",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankStatement",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleDetails",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/preparer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Preparer",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/search-params.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/select-option.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddressInformation",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Applicant",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthIntoService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Axle",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AxleBrakes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AxleSpacing",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BrakeForceWheelsNotLocked",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BrakeForceWheelsUpToHalfLocked",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Brakes",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DDA",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dimensions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LettersOfAuth",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ManufacturerDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Microfilm",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Plate",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PurchaserDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/100",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tyres",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Weights",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-code.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestCode",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-record-test-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestRecordTestType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-result-test-type-number.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestResultTestTypeNumber",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-result.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-station.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestStation",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test-type-category.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestTypeCategory",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CustomDefect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/test.type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestType",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/tree-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TreeData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/user-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserDetails",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateRecordInfo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleIdentifiers",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordEdit",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordEditState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordModel",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vehicle-test-result-update.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTestResultUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/models/vrm.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VrmModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/multiple-records/multiple-records.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultipleRecordsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/multiple-records/multiple-records.container.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultipleRecordsContainer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/DefaultNullOrEmptyPipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultNullOrEmpty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/FilterMultipleRecordsPipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilterMultipleRecordsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/FilterRecordPipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilterRecordPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/IsPrimaryVrmPipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "IsPrimaryVrmPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/OrderByStatusPipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OrderByStatusPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/SortByDatePipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SortByDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/capitalize-string.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CapitalizeString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/display-by-delimiter.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DisplayByDelimiter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/pipes/display-options.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DisplayOptionsPipe",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "archive/src/app/shared/adr-reason-modal/adr-reason-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdrReasonModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/adr-reason-modal/adr-reason-modal.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormFieldControl",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/date-input/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInputComponent",
                "coveragePercent": 5,
                "coverageCount": "1/19",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/date-input/date-input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pad",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/date-input/date-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "index",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/time-input/time-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/time-input/time-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "index",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/tree/tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/components/tree/tree.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TreeNode",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "delayedRetry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDelay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultMaxRetry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/delayed-retry/delayed-retry.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/dialog-box-confirmation/dialog-box-confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogBoxConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/dialog-box-confirmation/dialog-box-confirmation.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/dialog-box/dialog-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/dialog-ministry-plates/dialog-ministry-plates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogMinistryPlatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/dialog-ministry-plates/dialog-ministry-plates.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/directives/back-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BackButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/directives/directives.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PIPES_AND_COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/directives/null-value.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NullValueDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/error-summary/error-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/libraries/accordion-item/accordion-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/libraries/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/libraries/libraries.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PIPES_AND_COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/page-not-found-component/page-not-found-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/pending-changes-guard/pending-changes.guard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ComponentCanDeactivate",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/pending-changes-guard/pending-changes.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "PendingChangesGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/pending-changes-service/pending-changes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PendingChangesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/prevent-page-leave-modal/prevent-leave-page-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PreventLeavePageModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PIPES_AND_COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shared/spinner-loader/spinner-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shell/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shell/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shell/header/logout-modal/logout-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoutModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/shell/shell.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShellPage",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/Error.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ClearErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/Error.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/Loader.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadingFalse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/Loader.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadingTrue",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadPreparers",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadPreparersSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadTestStations",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadTestStationsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/ReferenceData.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoadTestTypeCategoriesSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CreateVehicleTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetVehicleTechRecordHavingStatusAll",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetVehicleTechRecordHavingStatusAllSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetSelectedVehicleTechnicalRecord",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetSelectedVehicleTechRecordSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetVehicleTechRecordOnCreate",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetViewState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateVehicleTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTechRecordModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateVehicleTechRecordSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DownloadCertificate",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetVehicleTestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetVehicleTestResultModelFailure",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetVehicleTestResultModelSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetSelectedTestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetSelectedTestResultModelSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetTestViewState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateSelectedTestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateSelectedTestResultModelSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateTestResult",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/VehicleTestResultModel.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UpdateTestResultSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/app-form-state.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetAppFormDirty",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/actions/app-form-state.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetAppFormPristine",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/effects/VehicleTechRecordModel.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VehicleTechRecordModelEffects",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/effects/VehicleTestResultModel.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VehicleTestResultModelEffects",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/effects/app-form.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppFormEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/effects/router.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RouterEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/index.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CustomSerializer",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RouterStateUrl",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/Loader.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "LoaderReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/ReferenceData.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ReferenceDataReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/VehicleTechRecordModel.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "VehicleTechRecordReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/VehicleTestResultModel.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "VehicleTestResultModelReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppFormState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AppFormStateReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/app-form-state.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialAppFormState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/app.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/error.reducers.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/error.reducers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ErrorReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/reducers/error.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialErrorState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getPreparers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTestStations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTestTypeCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/ReferenceData.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getActiveRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getActiveVehicleTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDateNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getSelectedVehicleTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTechViewState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getVehicleTechRecordMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTechRecordModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectVehicleTechRecordModelHavingStatusAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "filterCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getTestTypeTree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getFilteredTestTypeCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getSelectedVehicleTestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTestViewState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getVehicleTestResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/VehicleTestResultModel.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTestTypeById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAppFormState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/app-form-state.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/error.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getErrors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/error.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/route.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getRouterInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/route.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getRouterParams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/selectors/route.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectReducerState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/Loader.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILoaderState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/Loader.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialLoaderState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/ReferenceDataState.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ReferenceDataState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/ReferenceDataState.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialReferenceDataState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/VehicleTechRecordModel.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/VehicleTechRecordModel.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialVehicleTechRecordModelState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/VehicleTestResultModel.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVehicleTestResultModelState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/VehicleTestResultModel.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialVehicleTestResultModelState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAppState",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getInitialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/store/state/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROOT_EFFECTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record-create/technical-record-create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechnicalRecordCreateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record-search/auth-token-interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AuthTokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record-search/technical-record-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechnicalRecordSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record-search/technical-record.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechnicalRecordService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record-search/test-result.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TestResultService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/additional-adr-details/additional-adr-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdditionalAdrDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/additional-adr-details/edit/additional-adr-detail-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdditionalAdrDetailEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr-details/adr-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdrDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr-details/edit/adr-details-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdrDetailsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr-validation.mapper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ValidationMapper",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr-validation.mapper.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidationState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdrComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPLOSIVE_TYPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPLOSIVES2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPLOSIVES3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRODUCT_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATEMENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UUID_REGEX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/adr.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPOSABLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/applicant-details/applicant-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicantDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/applicant-details/edit/applicant-details-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicantDetailsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/battery-list-applicable/battery-list-applicable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BatteryListApplicableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/battery-list-applicable/edit/battery-list-applicable-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BatteryListApplicableEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/certificate/certificate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CertificateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/certificate/edit/certificate-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CertificateEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/declaration-seen/declaration-seen.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeclarationSeenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/declaration-seen/edit/declaration-seen-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeclarationSeenEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/memo/edit/memo-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MemoEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/memo/memo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-details/edit/tank-details-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TankDetailsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-details/tank-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TankDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-documents/document-meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-documents/tank-documents.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TankDocumentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-inpections/edit/tank-inspections-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TankInspectionsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/adr/tank-inpections/tank-inpections.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TankInpectionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/applicant/applicant.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicantComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/applicant/edit/applicant-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApplicantEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/authorisation-into-service/authorisation-into-service.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthorisationIntoServiceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/body/body-psv/body-psv.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyPsvComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/body/body.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/body/bodyList.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "makeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/body/edit/body-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/brakes/axle-brakes/axle-brakes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AxleBrakesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/brakes/brakes-psv/brakes-psv.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BrakesPsvComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/brakes/brakes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BrakesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/dda/dda.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DdaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/dimensions/dimensions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DimensionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/dimensions/edit/dimensions-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DimensionsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/documents/documents.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/documents/edit/documents-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/letters-of-authorisation/letters-of-authorisation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LettersOfAuthorisationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/manufacturer/manufacturer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManufacturerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/ministry-plates/ministry-plates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MinistryPlatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/notes/edit/notes-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotesEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/notes/notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/plates/plates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/purchaser/purchaser.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PurchaserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/record-identification/edit/record-identification-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecordIdentificationEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/record-identification/record-identification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecordIdentificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/record-status/edit/record-status-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecordStatusEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/record-status/record-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecordStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/tech-rec-history/tech-rec-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechRecHistoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/tech-record-helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechRecordHelperService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record-value.mapper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechnicalRecordValuesMapper",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechnicalRecordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APPROVAL_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AXLE_NUM_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BODY_TYPE_DESC",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BOOLEAN_RADIO_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FITMENT_CODE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FUEL_PROPULSION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FUNCTION_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MICROFILM_DOCUMENT_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PLATE_ISSUE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VEHICLE_CLASS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VEHICLE_CONFIGURATION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VEHICLE_EUCATEGORY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.container.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechnicalRecordsContainer",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/technical-record.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/test-history/test-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHistoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/tyres/edit/tyres-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TyresEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/tyres/tyres.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TyresComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/edit/type-approval/type-approval.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypeApprovalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/edit/vehicle-summary-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleSummaryEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-hgv/vehicle-summary-hgv.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleSummaryHgvComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-psv/vehicle-summary-psv.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleSummaryPsvComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/vehicle-summary-trl/vehicle-summary-trl.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleSummaryTrlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/vehicle-summary/vehicle-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/weights/edit/weights-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeightsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/weights/weights-psv/weights-psv.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeightsPsvComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/technical-record/weights/weights.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeightsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/defects/defects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/defects/edit/defects-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefectsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/emission-details/edit/emission-details-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmissionDetailsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/emission-details/emission-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmissionDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/guards/preparers.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "PreparersGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/guards/test-result.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TestResultGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/guards/test-stations.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TestStationsGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/guards/test-type-categories.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TestTypeCategoriesGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/notes/edit/notes-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotesEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/notes/notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/seatbelt-installation-check/edit/seatbelt-installation-check-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeatbeltInstallationCheckEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/seatbelt-installation-check/seatbelt-installation-check.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeatbeltInstallationCheckComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/select-test-type/select-test-type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTestTypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/select-test-type/select-test-type.container.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTestTypeContainer",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-history/test-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestHistoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestRecordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.container.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestRecordContainer",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.mapper.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TestRecordMapper",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.mapper.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TestTypesApplicable",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-record.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODULES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-section/edit/test-section-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestSectionEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/test-section/test-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/vehicle/edit/vehicle-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/vehicle/vehicle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/visit/edit/visit-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VisitEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/test-record/visit/visit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VisitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/form.utils.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FieldState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/form.utils.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormControlsState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/form.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "addControlsToFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/form.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_UTILS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/mockStore.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-model.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTestRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-model.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTestType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-model.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTestTypeCategory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-model.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEST_MODEL_UTILS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTestTypesApplicable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/test-type-applicable-models.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEST_TYPE_APPLICABLE_UTILS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAdditionalNotes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAddressInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAdrDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockApplicant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockApplicantDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAuthoIntoService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAxle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAxleBrakes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockAxleSpacing",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockBodyType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockBrakeForceWheelsNotLocked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockBrakeForceWheelsUpToHalfLocked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockBrakes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockDDA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockDimensions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockFormGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockLettersOfAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockManufacturer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockMicrofilm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockPlates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockPurchaser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTank",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTankDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTc2Details",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTc3Details",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockTyres",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockVehicleDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mockWeights",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/app/utils/testing.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TESTING_UTILS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "archive/src/app/utils/utils.functions.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "scrollToSection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/assets/config/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/assets/config/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/environments/environment.deploy.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "archive/testconfig/services-mocks/authentication-guard.mock.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthenticationGuardMock",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "archive/testconfig/services-mocks/technical-record-service.mock.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TechnicalRecordServiceMock",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "archive/testconfig/test-store.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TestStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "localStorageSyncReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALGuardConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALInstanceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALInterceptorConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home-button/home-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home-button/home-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdditionalNotes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdrDetails",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApplicantDetails",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/adr-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleDetails",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BodyPSV",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BodyType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/body-type.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBody",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdditionalNotes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdrDetails",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MetaData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankStatement",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/meta-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleDetails",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tank",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankDetails",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TankStatement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tc2Details",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tank.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tc3Details",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddressInformation",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Applicant",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthIntoService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Axle",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AxleBrakes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AxleSpacing",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BrakeForceWheelsNotLocked",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BrakeForceWheelsUpToHalfLocked",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Brakes",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DDA",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dimensions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LettersOfAuth",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ManufacturerDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Microfilm",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Plate",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PurchaserDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TechRecord",
                "coveragePercent": 0,
                "coverageCount": "0/100",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tyres",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Weights",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/user-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserDetails",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleIdentifiers",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordModel",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/vehicle-tech-record.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VehicleTechRecordState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/vrm.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VrmModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/DefaultNullOrEmpty.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultNullOrEmpty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Initial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/technical-record.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechnicalRecordService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserServiceState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "UserServiceReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_userServiceReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "username",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-service/user-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/vehicle-technical-record/vehicle-technical-record.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleTechnicalRecordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vehicle-technical-record/vehicle-technical-record.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.deploy.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
