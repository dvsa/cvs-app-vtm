name: VTM App Build and Upload
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      branch:
        type: string
        required: true
      bucket:
        type: string
        required: true
    secrets:
      AWS_MGMT_ROLE:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_MGMT_ROLE }}
          aws-region: eu-west-1
          role-session-name: GHA-VTMDeploy

      - name: Get app config from AWS Secrets Manager
        run: aws secretsmanager get-secret-value --secret-id ${{ inputs.environment }}/vtm/config --query SecretString --region=eu-west-1 --output text > src/environments/environment.deploy.ts

      - name: Build App
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: npm run build -- --configuration='deploy' --output-path='dist/'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VTM-App-build-output
          path: dist/

  upload:
    needs: [build]
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Get AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_MGMT_ROLE }}
          aws-region: eu-west-1
          role-session-name: GHA-VTMDeploy

      - name: Get secrets from AWS
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: cvs-app-vtm/gha
          parse-json-secrets: true

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: VTM-App-build-output
          path: dist/

      - name: Upload App to S3
        working-directory: dist/
        run: aws s3 sync . s3://vtm${{ inputs.bucket }}.${{ env.CVS_APP_VTM_GHA_DOMAIN }}

