// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutocompleteComponent should create 1`] = `
<vtm-autocomplete
  _value={[Function String]}
  autocompleteData={[Function Array]}
  autocompleteInput={[Function FormControl]}
  controlType={[Function String]}
  externalId=""
  injector={[Function Injector_]}
  internalId=""
  multi={[Function Boolean]}
  onDestroy$={[Function Subject]}
  onchange={[Function Function]}
>
  <input
    class="govuk-input autocomplete-input"
    type="text"
  /><datalist>
    
  </datalist>
</vtm-autocomplete>
`;

exports[`AutocompleteComponent should populate the internal input when an external value is provided 1`] = `
<test-autocomplete
  testAutocompleteControl={[Function FormControl]}
>
  <form
    class="ng-untouched ng-pristine ng-valid"
    novalidate=""
  >
    <vtm-autocomplete
      ariadescribedby="testAutocomplete"
      class="ng-untouched ng-pristine ng-valid"
      name="testAutocomplete"
      ng-reflect-autocomplete-data=""
      ng-reflect-form="[object Object]"
      ng-reflect-id="testAutocomplete"
      ngdefaultcontrol=""
    >
      <input
        class="govuk-input autocomplete-input ng-untouched ng-pristine ng-valid"
        id="test-testAutocomplete"
        list="autocomplete-testAutocomplete"
        name="testAutocomplete"
        ng-reflect-form="[object Object]"
        type="text"
      />
      <datalist
        id="autocomplete-testAutocomplete"
      >
        
        <option
          ng-reflect-value=""
          value=""
        >
          
        </option>
      </datalist>
    </vtm-autocomplete>
  </form>
</test-autocomplete>
`;
